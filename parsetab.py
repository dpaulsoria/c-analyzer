
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_EQUAL AUTO BACKSLASH BACKSPACE BREAK B_AND B_COMPLEMENT B_OR B_XOR CASE CHAR CHARACTER COLON COMMA COMMENT COMPLEMENT_EQUAL CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE DIV_EQUAL DO DOT DOUBLE DOUBLE_APOS DOUBLE_QUOTE ELSE ENUM EQUAL EQUAL_TO EXTERN FF_PAGEBREAK FLOAT FOR FS_CHAR FS_DOUBLE FS_FLOAT FS_HEX FS_INT FS_LONG FS_LONG_DOUBLE FS_OCT FS_OCT_LONG FS_POINTER FS_SCI_NOTATION FS_STRING FS_UNSIGNED_INT FS_UNSIGNED_LONG GOTO GREATER_EQUAL GREATER_THAN HEADER_LIB HTAB IF IGNORE INCREASE INT INTEGER LBRACKET LCURL_BRACE LESS_EQUAL LESS_THAN LONG LPAREN MINUS MINUS_EQUAL MODULUS MOD_EQUAL NEWLINE NOT NOT_EQUAL NULL OR OR_EQUAL PLUS PLUS_EQUAL PP_DATE PP_DEFINE PP_DTMACRO PP_ERROR PP_FILE PP_IF PP_IFDEF PP_IFNDEF PP_INCLUDE PP_LINE PP_PRAGMA PP_STMACRO PP_TIME PP_TIMESTAMP PP_UNDEF QUESTIONMARK RBRACKET RCURL_BRACE REGISTER RETURN RPAREN SEMICOLON SHIFTL_EQUAL SHIFTR_EQUAL SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SINGLE_APOS SINGLE_QUOTE SIZEOF STATIC STRING STRUCT SWITCH TILDE TIMES TIMES_EQUAL TYPEDEF UNION UNSIGNED VARNAME VOID VOLTILE VTAB WHILE XOR_EQUAL\n    ROOT : PREPROCESOR_DIRECTIVE\n         | DEFINE\n         | INCLUDE\n         | VALUE\n         | NUMBER\n         | CONTROL_STRUCTURES\n         | WHILE_STRUCTURE\n         | SWITCH_STRUCTURE\n         | IF_STRUCTURE\n         | FOR_STRUCTURE\n         | CODE\n         | EXPRESSION\n         | EXPRESSIONS\n         | FUNCTION\n         | INTEGER_TYPE\n         | DECIMAL_TYPE\n         | INTEGER_DECLARATION\n         | DECIMAL_DECLARATION\n         | ASSIGNMENT_DECLARATION\n         | ASSIGNMENT_OPERATOR\n         | COMENTARIOLEX\n         | VARIABLELEX\n         | OPERATOR\n         | OPERATION\n         | OPERATIONS\n         | COMPARISON_OPERATOR\n         | COMPARISON\n         | COMPARISONS\n         | LOGICAL_OPERATOR\n         | STATEMENT\n         | SWITCH_BODY\n         | BUCLE\n         | ELSE_STRUCTURE\n         | FUNCTION_ARGUMENTS\n         | DECLARATIONS\n         | FOR_BODY_STRUCTURE\n         | FOR_ARGUMENTS_STRUCTURE\n    \n    PREPROCESOR_DIRECTIVE : DEFINE\n                          | INCLUDE\n    \n    DEFINE : PP_DEFINE VARIABLELEX VALUE\n    \n    \n    INCLUDE : PP_INCLUDE HEADER_LIB\n    \n    VALUE : NUMBER \n          | STRING\n          | CHARACTER\n    \n    NUMBER : INTEGER\n           | DECIMAL\n    \n    CONTROL_STRUCTURES : IF_STRUCTURE\n                       | FOR_STRUCTURE\n                       | WHILE_STRUCTURE\n                       | SWITCH_STRUCTURE\n    \n    BODY_STRUCTURE : EXPRESSIONS \n                   | EXPRESSIONS BREAK SEMICOLON\n                   | EXPRESSIONS CONTINUE SEMICOLON\n    \n    WHILE_STRUCTURE : WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE\n    \n    SWITCH_CASE : CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_DEFAULT : DEFAULT COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_BODY : SWITCH_CASE\n                | SWITCH_DEFAULT\n                |  SWITCH_CASE SWITCH_BODY   \n    \n    SWITCH_STRUCTURE : SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE\n    \n    BUCLE : VARIABLELEX INCREASE \n          | DECREASE VARIABLELEX\n    \n    FOR_STRUCTURE : FOR FOR_ARGUMENTS_STRUCTURE LCURL_BRACE FOR_BODY_STRUCTURE RCURL_BRACE\n    \n    FOR_ARGUMENTS_STRUCTURE : LPAREN DECLARATIONS SEMICOLON COMPARISONS SEMICOLON BUCLE RPAREN\n    \n    FOR_BODY_STRUCTURE : EXPRESSIONS\n                       | BREAK SEMICOLON\n                       | CONTINUE SEMICOLON\n    \n    IF_STRUCTURE : IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                 | IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE\n    \n    ELSE_STRUCTURE : ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                   | ELSE IF_STRUCTURE\n    \n    DECLARATIONS : INTEGER_DECLARATION\n                 | DECIMAL_DECLARATION\n    \n    CODE : FUNCTION\n         | INTEGER_DECLARATION\n         | DECIMAL_DECLARATION\n         | ASSIGNMENT_DECLARATION\n         | COMENTARIOLEX\n    \n    EXPRESSION : CODE SEMICOLON\n               | CONTROL_STRUCTURES\n    \n    EXPRESSIONS : EXPRESSION\n                | EXPRESSION EXPRESSIONS\n    \n    FUNCTION : VARNAME LPAREN FUNCTION_ARGUMENTS RPAREN\n    \n    FUNCTION_ARGUMENTS : STATEMENTS\n                       | COMPARISONS\n    \n    INTEGER_TYPE : INT\n                 | SHORT\n                 | LONG\n    \n    DECIMAL_TYPE : FLOAT\n                 | DOUBLE\n    \n    INTEGER_DECLARATION : INTEGER_TYPE VARNAME EQUAL INTEGER\n    \n    DECIMAL_DECLARATION : DECIMAL_TYPE VARNAME EQUAL DECIMAL\n    \n    ASSIGNMENT_DECLARATION : VARNAME ASSIGNMENT_OPERATOR STATEMENT\n    \n    ASSIGNMENT_OPERATOR : EQUAL\n                        | PLUS_EQUAL\n                        | MINUS_EQUAL\n                        | DIV_EQUAL\n                        | TIMES_EQUAL\n                        | MOD_EQUAL\n                        | AND_EQUAL\n                        | OR_EQUAL\n                        | XOR_EQUAL\n                        | COMPLEMENT_EQUAL\n                        | SHIFTL_EQUAL\n                        | SHIFTR_EQUAL\n    \n    COMENTARIOLEX : COMMENT\n    \n    VARIABLELEX : VARNAME\n    \n    OPERATOR : PLUS\n             | MINUS\n             | TIMES\n             | MODULUS\n             | DIVIDE\n    \n    OPERATION : NUMBER OPERATOR NUMBER\n    \n    OPERATIONS : OPERATION\n                | OPERATION OPERATOR OPERATIONS\n    \n    COMPARISON_OPERATOR : EQUAL_TO\n                        | NOT_EQUAL\n                        | GREATER_THAN\n                        | LESS_THAN\n                        | GREATER_EQUAL\n                        | LESS_EQUAL\n    \n    COMPARISON : VALUE COMPARISON_OPERATOR VALUE\n               | STATEMENT COMPARISON_OPERATOR STATEMENT\n    \n    COMPARISONS : COMPARISON\n                | COMPARISON LOGICAL_OPERATOR COMPARISONS\n    \n    LOGICAL_OPERATOR : AND\n                     | OR\n                     | NOT\n    \n    STATEMENT : NUMBER\n             | VARNAME\n    \n    STATEMENTS : STATEMENT\n               | STATEMENT COMMA STATEMENTS\n    \n    VALUES : VALUE\n           | VALUE COMMA VALUES\n    \n    RETURN_TYPE : INTEGER_TYPE\n                | DECIMAL_TYPE\n                | VOID\n    \n    RETURN_STATEMENT : RETURN PARAMETERS SEMICOLON\n                     | RETURN VALUES SEMICOLON\n    \n    PARAMETERS : VARNAME \n               | VARNAME COMMA PARAMETERS\n    \n    FUNCTION_PROTOTYPE : RETURN_TYPE VARNAME LPAREN RPAREN LCURL_BRACE EXPRESSIONS RETURN_STATEMENT RCURL_BRACE\n                       | RETURN_TYPE VARNAME LPAREN PARAMETERS RPAREN LCURL_BRACE EXPRESSIONS RETURN_STATEMENT RCURL_BRACE\n    '
    
_lr_action_items = {'PP_DEFINE':([0,],[39,]),'PP_INCLUDE':([0,],[40,]),'STRING':([0,74,75,76,77,78,79,80,81,82,92,115,118,119,121,125,126,128,158,],[41,-116,-117,-118,-119,-120,-121,-126,-127,-128,41,41,41,-107,41,41,41,41,41,]),'CHARACTER':([0,74,75,76,77,78,79,80,81,82,92,115,118,119,121,125,126,128,158,],[42,-116,-117,-118,-119,-120,-121,-126,-127,-128,42,42,42,-107,42,42,42,42,42,]),'INTEGER':([0,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,90,92,93,114,115,116,117,118,119,121,125,126,128,129,141,158,],[43,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-108,-109,-110,-111,-112,-116,-117,-118,-119,-120,-121,-126,-127,-128,136,43,43,43,43,43,43,43,-107,43,43,43,43,43,170,43,]),'DECIMAL':([0,56,57,58,59,60,61,62,63,64,65,66,67,69,70,71,72,73,74,75,76,77,78,79,80,81,82,92,93,114,115,116,117,118,119,121,125,126,128,129,142,158,],[44,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-108,-109,-110,-111,-112,-116,-117,-118,-119,-120,-121,-126,-127,-128,44,44,44,44,44,44,44,-107,44,44,44,44,44,171,44,]),'WHILE':([0,7,8,9,10,11,13,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[45,-80,-49,-50,-47,-48,45,-79,45,-80,-47,-48,-49,-50,45,-71,45,45,45,-70,45,45,-63,-54,-60,-68,-69,]),'SWITCH':([0,7,8,9,10,11,13,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[47,-80,-49,-50,-47,-48,47,-79,47,-80,-47,-48,-49,-50,47,-71,47,47,47,-70,47,47,-63,-54,-60,-68,-69,]),'IF':([0,7,8,9,10,11,13,86,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[48,-80,-49,-50,-47,-48,48,48,-79,48,-80,-47,-48,-49,-50,48,-71,48,48,48,-70,48,48,-63,-54,-60,-68,-69,]),'FOR':([0,7,8,9,10,11,13,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[49,-80,-49,-50,-47,-48,49,-79,49,-80,-47,-48,-49,-50,49,-71,49,49,49,-70,49,49,-63,-54,-60,-68,-69,]),'VARNAME':([0,7,8,9,10,11,13,16,17,39,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,74,75,76,77,78,79,80,81,82,85,94,95,98,104,105,106,107,109,110,115,116,117,121,125,126,128,129,132,133,137,158,161,168,179,182,183,185,186,196,200,201,204,],[50,-80,-49,-50,-47,-48,108,111,112,119,-86,-87,-88,-89,-90,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-116,-117,-118,-119,-120,-121,-126,-127,-128,119,-79,108,-80,-47,-48,-49,-50,111,112,151,151,151,151,151,151,151,151,108,-71,108,151,108,108,-70,108,119,108,-63,-54,-60,-68,-69,]),'INT':([0,7,8,9,10,11,13,46,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[51,-80,-49,-50,-47,-48,51,51,-79,51,-80,-47,-48,-49,-50,51,-71,51,51,51,-70,51,51,-63,-54,-60,-68,-69,]),'SHORT':([0,7,8,9,10,11,13,46,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[52,-80,-49,-50,-47,-48,52,52,-79,52,-80,-47,-48,-49,-50,52,-71,52,52,52,-70,52,52,-63,-54,-60,-68,-69,]),'LONG':([0,7,8,9,10,11,13,46,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[53,-80,-49,-50,-47,-48,53,53,-79,53,-80,-47,-48,-49,-50,53,-71,53,53,53,-70,53,53,-63,-54,-60,-68,-69,]),'FLOAT':([0,7,8,9,10,11,13,46,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[54,-80,-49,-50,-47,-48,54,54,-79,54,-80,-47,-48,-49,-50,54,-71,54,54,54,-70,54,54,-63,-54,-60,-68,-69,]),'DOUBLE':([0,7,8,9,10,11,13,46,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[55,-80,-49,-50,-47,-48,55,55,-79,55,-80,-47,-48,-49,-50,55,-71,55,55,55,-70,55,55,-63,-54,-60,-68,-69,]),'EQUAL':([0,50,108,111,112,],[56,56,56,141,142,]),'PLUS_EQUAL':([0,50,108,],[57,57,57,]),'MINUS_EQUAL':([0,50,108,],[58,58,58,]),'DIV_EQUAL':([0,50,108,],[59,59,59,]),'TIMES_EQUAL':([0,50,108,],[60,60,60,]),'MOD_EQUAL':([0,50,108,],[61,61,61,]),'AND_EQUAL':([0,50,108,],[62,62,62,]),'OR_EQUAL':([0,50,108,],[63,63,63,]),'XOR_EQUAL':([0,50,108,],[64,64,64,]),'COMPLEMENT_EQUAL':([0,50,108,],[65,65,65,]),'SHIFTL_EQUAL':([0,50,108,],[66,66,66,]),'SHIFTR_EQUAL':([0,50,108,],[67,67,67,]),'COMMENT':([0,7,8,9,10,11,13,94,95,98,104,105,106,107,132,133,137,161,168,179,182,185,186,196,200,201,204,],[68,-80,-49,-50,-47,-48,68,-79,68,-80,-47,-48,-49,-50,68,-71,68,68,68,-70,68,68,-63,-54,-60,-68,-69,]),'PLUS':([0,6,25,43,44,140,143,145,],[69,69,69,-45,-46,-113,69,69,]),'MINUS':([0,6,25,43,44,140,143,145,],[70,70,70,-45,-46,-113,70,70,]),'TIMES':([0,6,25,43,44,140,143,145,],[71,71,71,-45,-46,-113,71,71,]),'MODULUS':([0,6,25,43,44,140,143,145,],[72,72,72,-45,-46,-113,72,72,]),'DIVIDE':([0,6,25,43,44,140,143,145,],[73,73,73,-45,-46,-113,73,73,]),'EQUAL_TO':([0,5,6,31,41,42,43,44,50,148,149,150,151,164,165,],[74,74,-42,74,-43,-44,-45,-46,-130,74,74,-42,-130,74,-42,]),'NOT_EQUAL':([0,5,6,31,41,42,43,44,50,148,149,150,151,164,165,],[75,75,-42,75,-43,-44,-45,-46,-130,75,75,-42,-130,75,-42,]),'GREATER_THAN':([0,5,6,31,41,42,43,44,50,148,149,150,151,164,165,],[76,76,-42,76,-43,-44,-45,-46,-130,76,76,-42,-130,76,-42,]),'LESS_THAN':([0,5,6,31,41,42,43,44,50,148,149,150,151,164,165,],[77,77,-42,77,-43,-44,-45,-46,-130,77,77,-42,-130,77,-42,]),'GREATER_EQUAL':([0,5,6,31,41,42,43,44,50,148,149,150,151,164,165,],[78,78,-42,78,-43,-44,-45,-46,-130,78,78,-42,-130,78,-42,]),'LESS_EQUAL':([0,5,6,31,41,42,43,44,50,148,149,150,151,164,165,],[79,79,-42,79,-43,-44,-45,-46,-130,79,79,-42,-130,79,-42,]),'AND':([0,28,41,42,43,44,138,139,146,151,152,153,],[80,80,-43,-44,-45,-46,-122,-42,80,-130,-123,-129,]),'OR':([0,28,41,42,43,44,138,139,146,151,152,153,],[81,81,-43,-44,-45,-46,-122,-42,81,-130,-123,-129,]),'NOT':([0,28,41,42,43,44,138,139,146,151,152,153,],[82,82,-43,-44,-45,-46,-122,-42,82,-130,-123,-129,]),'DECREASE':([0,183,],[85,85,]),'ELSE':([0,201,],[86,86,]),'BREAK':([0,94,95,96,98,104,105,106,107,133,161,169,179,180,186,190,196,200,201,204,],[88,-79,-81,-82,-80,-47,-48,-49,-50,-71,88,181,-70,187,-63,197,-54,-60,-68,-69,]),'CONTINUE':([0,94,95,96,98,104,105,106,107,133,161,179,186,190,196,200,201,204,],[89,-79,-81,-82,-80,-47,-48,-49,-50,-71,89,-70,-63,198,-54,-60,-68,-69,]),'LPAREN':([0,45,47,48,49,50,108,],[46,121,125,126,46,128,128,]),'CASE':([0,83,184,195,],[90,90,90,-55,]),'DEFAULT':([0,83,184,195,],[91,91,91,-55,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,44,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,94,95,96,98,104,105,106,107,113,119,120,130,131,133,134,135,138,139,140,143,144,146,147,151,152,153,154,155,156,166,170,171,178,179,186,188,195,196,199,200,201,204,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-45,-46,-107,-86,-87,-88,-89,-90,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-106,-108,-109,-110,-111,-112,-116,-117,-118,-119,-120,-121,-126,-127,-128,-57,-58,-84,-79,-81,-82,-80,-47,-48,-49,-50,-61,-107,-41,-59,-62,-71,-66,-67,-122,-42,-113,-114,-115,-124,-125,-130,-123,-129,-131,-132,-40,-93,-91,-92,-83,-70,-63,-56,-55,-54,-64,-60,-68,-69,]),'COMMA':([6,31,43,44,50,151,153,154,164,165,],[-129,117,-45,-46,-130,-130,-129,117,117,-129,]),'SEMICOLON':([12,15,18,19,20,22,41,42,43,44,68,88,89,97,99,100,101,102,103,122,123,124,138,139,146,147,151,152,153,166,170,171,173,178,181,187,197,198,],[94,-74,-75,-76,-77,-78,-43,-44,-45,-46,-106,134,135,94,-74,-75,-76,-77,-78,158,-72,-73,-122,-42,-124,-125,-130,-123,-129,-93,-91,-92,183,-83,188,195,202,203,]),'INCREASE':([23,50,119,192,],[113,-107,-107,113,]),'HEADER_LIB':([40,],[120,]),'RPAREN':([41,42,43,44,87,113,119,131,138,139,146,147,151,152,153,154,155,157,159,160,162,163,164,165,191,],[-43,-44,-45,-46,-84,-61,-107,-62,-122,-42,-124,-125,-130,-123,-129,-131,-132,172,174,175,178,-85,-131,-129,199,]),'RCURL_BRACE':([83,84,94,95,96,98,104,105,106,107,130,133,134,135,167,176,177,179,186,188,189,190,193,194,195,196,200,201,202,203,204,],[-57,-58,-79,-81,-82,-80,-47,-48,-49,-50,-59,-71,-66,-67,179,186,-65,-70,-63,-56,196,-51,200,201,-55,-54,-60,-68,-52,-53,-69,]),'LCURL_BRACE':([86,127,172,174,175,199,],[132,161,182,184,185,-64,]),'COLON':([91,136,],[137,168,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ROOT':([0,],[1,]),'PREPROCESOR_DIRECTIVE':([0,],[2,]),'DEFINE':([0,],[3,]),'INCLUDE':([0,],[4,]),'VALUE':([0,92,115,118,121,125,126,128,158,],[5,138,148,156,148,148,148,148,148,]),'NUMBER':([0,92,93,114,115,116,117,118,121,125,126,128,129,158,],[6,139,140,145,150,153,153,139,150,150,150,165,153,150,]),'CONTROL_STRUCTURES':([0,13,95,132,137,161,168,182,185,],[7,98,98,98,98,98,98,98,98,]),'WHILE_STRUCTURE':([0,13,95,132,137,161,168,182,185,],[8,106,106,106,106,106,106,106,106,]),'SWITCH_STRUCTURE':([0,13,95,132,137,161,168,182,185,],[9,107,107,107,107,107,107,107,107,]),'IF_STRUCTURE':([0,13,86,95,132,137,161,168,182,185,],[10,104,133,104,104,104,104,104,104,104,]),'FOR_STRUCTURE':([0,13,95,132,137,161,168,182,185,],[11,105,105,105,105,105,105,105,105,]),'CODE':([0,13,95,132,137,161,168,182,185,],[12,97,97,97,97,97,97,97,97,]),'EXPRESSION':([0,13,95,132,137,161,168,182,185,],[13,95,95,95,95,95,95,95,95,]),'EXPRESSIONS':([0,13,95,132,137,161,168,182,185,],[14,96,96,167,169,177,180,190,194,]),'FUNCTION':([0,13,95,132,137,161,168,182,185,],[15,99,99,99,99,99,99,99,99,]),'INTEGER_TYPE':([0,13,46,95,132,137,161,168,182,185,],[16,109,109,109,109,109,109,109,109,109,]),'DECIMAL_TYPE':([0,13,46,95,132,137,161,168,182,185,],[17,110,110,110,110,110,110,110,110,110,]),'INTEGER_DECLARATION':([0,13,46,95,132,137,161,168,182,185,],[18,100,123,100,100,100,100,100,100,100,]),'DECIMAL_DECLARATION':([0,13,46,95,132,137,161,168,182,185,],[19,101,124,101,101,101,101,101,101,101,]),'ASSIGNMENT_DECLARATION':([0,13,95,132,137,161,168,182,185,],[20,102,102,102,102,102,102,102,102,]),'ASSIGNMENT_OPERATOR':([0,50,108,],[21,129,129,]),'COMENTARIOLEX':([0,13,95,132,137,161,168,182,185,],[22,103,103,103,103,103,103,103,103,]),'VARIABLELEX':([0,39,85,183,],[23,118,131,192,]),'OPERATOR':([0,6,25,143,145,],[24,93,114,114,93,]),'OPERATION':([0,114,],[25,143,]),'OPERATIONS':([0,114,],[26,144,]),'COMPARISON_OPERATOR':([0,5,31,148,149,164,],[27,92,116,92,116,116,]),'COMPARISON':([0,115,121,125,126,128,158,],[28,146,146,146,146,146,146,]),'COMPARISONS':([0,115,121,125,126,128,158,],[29,147,157,159,160,163,173,]),'LOGICAL_OPERATOR':([0,28,146,],[30,115,115,]),'STATEMENT':([0,115,116,117,121,125,126,128,129,158,],[31,149,152,154,149,149,149,164,166,149,]),'SWITCH_BODY':([0,83,184,],[32,130,193,]),'BUCLE':([0,183,],[33,191,]),'ELSE_STRUCTURE':([0,201,],[34,204,]),'FUNCTION_ARGUMENTS':([0,128,],[35,162,]),'DECLARATIONS':([0,46,],[36,122,]),'FOR_BODY_STRUCTURE':([0,161,],[37,176,]),'FOR_ARGUMENTS_STRUCTURE':([0,49,],[38,127,]),'SWITCH_CASE':([0,83,184,],[83,83,83,]),'SWITCH_DEFAULT':([0,83,184,],[84,84,84,]),'STATEMENTS':([0,117,128,],[87,155,87,]),'BODY_STRUCTURE':([182,],[189,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ROOT","S'",1,None,None,None),
  ('ROOT -> PREPROCESOR_DIRECTIVE','ROOT',1,'p_ROOT','syntax.py',7),
  ('ROOT -> DEFINE','ROOT',1,'p_ROOT','syntax.py',8),
  ('ROOT -> INCLUDE','ROOT',1,'p_ROOT','syntax.py',9),
  ('ROOT -> VALUE','ROOT',1,'p_ROOT','syntax.py',10),
  ('ROOT -> NUMBER','ROOT',1,'p_ROOT','syntax.py',11),
  ('ROOT -> CONTROL_STRUCTURES','ROOT',1,'p_ROOT','syntax.py',12),
  ('ROOT -> WHILE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',13),
  ('ROOT -> SWITCH_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',14),
  ('ROOT -> IF_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',15),
  ('ROOT -> FOR_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',16),
  ('ROOT -> CODE','ROOT',1,'p_ROOT','syntax.py',17),
  ('ROOT -> EXPRESSION','ROOT',1,'p_ROOT','syntax.py',18),
  ('ROOT -> EXPRESSIONS','ROOT',1,'p_ROOT','syntax.py',19),
  ('ROOT -> FUNCTION','ROOT',1,'p_ROOT','syntax.py',20),
  ('ROOT -> INTEGER_TYPE','ROOT',1,'p_ROOT','syntax.py',21),
  ('ROOT -> DECIMAL_TYPE','ROOT',1,'p_ROOT','syntax.py',22),
  ('ROOT -> INTEGER_DECLARATION','ROOT',1,'p_ROOT','syntax.py',23),
  ('ROOT -> DECIMAL_DECLARATION','ROOT',1,'p_ROOT','syntax.py',24),
  ('ROOT -> ASSIGNMENT_DECLARATION','ROOT',1,'p_ROOT','syntax.py',25),
  ('ROOT -> ASSIGNMENT_OPERATOR','ROOT',1,'p_ROOT','syntax.py',26),
  ('ROOT -> COMENTARIOLEX','ROOT',1,'p_ROOT','syntax.py',27),
  ('ROOT -> VARIABLELEX','ROOT',1,'p_ROOT','syntax.py',28),
  ('ROOT -> OPERATOR','ROOT',1,'p_ROOT','syntax.py',29),
  ('ROOT -> OPERATION','ROOT',1,'p_ROOT','syntax.py',30),
  ('ROOT -> OPERATIONS','ROOT',1,'p_ROOT','syntax.py',31),
  ('ROOT -> COMPARISON_OPERATOR','ROOT',1,'p_ROOT','syntax.py',32),
  ('ROOT -> COMPARISON','ROOT',1,'p_ROOT','syntax.py',33),
  ('ROOT -> COMPARISONS','ROOT',1,'p_ROOT','syntax.py',34),
  ('ROOT -> LOGICAL_OPERATOR','ROOT',1,'p_ROOT','syntax.py',35),
  ('ROOT -> STATEMENT','ROOT',1,'p_ROOT','syntax.py',36),
  ('ROOT -> SWITCH_BODY','ROOT',1,'p_ROOT','syntax.py',37),
  ('ROOT -> BUCLE','ROOT',1,'p_ROOT','syntax.py',38),
  ('ROOT -> ELSE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',39),
  ('ROOT -> FUNCTION_ARGUMENTS','ROOT',1,'p_ROOT','syntax.py',40),
  ('ROOT -> DECLARATIONS','ROOT',1,'p_ROOT','syntax.py',41),
  ('ROOT -> FOR_BODY_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',42),
  ('ROOT -> FOR_ARGUMENTS_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',43),
  ('PREPROCESOR_DIRECTIVE -> DEFINE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',51),
  ('PREPROCESOR_DIRECTIVE -> INCLUDE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',52),
  ('DEFINE -> PP_DEFINE VARIABLELEX VALUE','DEFINE',3,'p_DEFINE','syntax.py',59),
  ('INCLUDE -> PP_INCLUDE HEADER_LIB','INCLUDE',2,'p_INCLUDE','syntax.py',67),
  ('VALUE -> NUMBER','VALUE',1,'p_VALUE','syntax.py',74),
  ('VALUE -> STRING','VALUE',1,'p_VALUE','syntax.py',75),
  ('VALUE -> CHARACTER','VALUE',1,'p_VALUE','syntax.py',76),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','syntax.py',83),
  ('NUMBER -> DECIMAL','NUMBER',1,'p_NUMBER','syntax.py',84),
  ('CONTROL_STRUCTURES -> IF_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',91),
  ('CONTROL_STRUCTURES -> FOR_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',92),
  ('CONTROL_STRUCTURES -> WHILE_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',93),
  ('CONTROL_STRUCTURES -> SWITCH_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',94),
  ('BODY_STRUCTURE -> EXPRESSIONS','BODY_STRUCTURE',1,'p_BODY_STRUCTURE','syntax.py',101),
  ('BODY_STRUCTURE -> EXPRESSIONS BREAK SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',102),
  ('BODY_STRUCTURE -> EXPRESSIONS CONTINUE SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',103),
  ('WHILE_STRUCTURE -> WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE','WHILE_STRUCTURE',7,'p_WHILE_STRUCTURE','syntax.py',112),
  ('SWITCH_CASE -> CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_CASE',6,'p_SWITCH_CASE','syntax.py',121),
  ('SWITCH_DEFAULT -> DEFAULT COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_DEFAULT',5,'p_SWITCH_DEFAULT','syntax.py',128),
  ('SWITCH_BODY -> SWITCH_CASE','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',135),
  ('SWITCH_BODY -> SWITCH_DEFAULT','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',136),
  ('SWITCH_BODY -> SWITCH_CASE SWITCH_BODY','SWITCH_BODY',2,'p_SWITCH_BODY','syntax.py',137),
  ('SWITCH_STRUCTURE -> SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE','SWITCH_STRUCTURE',7,'p_SWITCH_STRUCTURE','syntax.py',144),
  ('BUCLE -> VARIABLELEX INCREASE','BUCLE',2,'p_BUCLE','syntax.py',153),
  ('BUCLE -> DECREASE VARIABLELEX','BUCLE',2,'p_BUCLE','syntax.py',154),
  ('FOR_STRUCTURE -> FOR FOR_ARGUMENTS_STRUCTURE LCURL_BRACE FOR_BODY_STRUCTURE RCURL_BRACE','FOR_STRUCTURE',5,'p_FOR_STRUCTURE','syntax.py',162),
  ('FOR_ARGUMENTS_STRUCTURE -> LPAREN DECLARATIONS SEMICOLON COMPARISONS SEMICOLON BUCLE RPAREN','FOR_ARGUMENTS_STRUCTURE',7,'p_FOR_ARGUMENTS_STRUCTURE','syntax.py',169),
  ('FOR_BODY_STRUCTURE -> EXPRESSIONS','FOR_BODY_STRUCTURE',1,'p_FOR_BODY_STRUCTURE','syntax.py',176),
  ('FOR_BODY_STRUCTURE -> BREAK SEMICOLON','FOR_BODY_STRUCTURE',2,'p_FOR_BODY_STRUCTURE','syntax.py',177),
  ('FOR_BODY_STRUCTURE -> CONTINUE SEMICOLON','FOR_BODY_STRUCTURE',2,'p_FOR_BODY_STRUCTURE','syntax.py',178),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE','IF_STRUCTURE',7,'p_IF_STRUCTURE','syntax.py',191),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE','IF_STRUCTURE',8,'p_IF_STRUCTURE','syntax.py',192),
  ('ELSE_STRUCTURE -> ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE','ELSE_STRUCTURE',4,'p_ELSE_STRUCTURE','syntax.py',199),
  ('ELSE_STRUCTURE -> ELSE IF_STRUCTURE','ELSE_STRUCTURE',2,'p_ELSE_STRUCTURE','syntax.py',200),
  ('DECLARATIONS -> INTEGER_DECLARATION','DECLARATIONS',1,'p_DECLARATIONS','syntax.py',207),
  ('DECLARATIONS -> DECIMAL_DECLARATION','DECLARATIONS',1,'p_DECLARATIONS','syntax.py',208),
  ('CODE -> FUNCTION','CODE',1,'p_CODE','syntax.py',215),
  ('CODE -> INTEGER_DECLARATION','CODE',1,'p_CODE','syntax.py',216),
  ('CODE -> DECIMAL_DECLARATION','CODE',1,'p_CODE','syntax.py',217),
  ('CODE -> ASSIGNMENT_DECLARATION','CODE',1,'p_CODE','syntax.py',218),
  ('CODE -> COMENTARIOLEX','CODE',1,'p_CODE','syntax.py',219),
  ('EXPRESSION -> CODE SEMICOLON','EXPRESSION',2,'p_EXPRESSION','syntax.py',226),
  ('EXPRESSION -> CONTROL_STRUCTURES','EXPRESSION',1,'p_EXPRESSION','syntax.py',227),
  ('EXPRESSIONS -> EXPRESSION','EXPRESSIONS',1,'p_EXPRESSIONS','syntax.py',234),
  ('EXPRESSIONS -> EXPRESSION EXPRESSIONS','EXPRESSIONS',2,'p_EXPRESSIONS','syntax.py',235),
  ('FUNCTION -> VARNAME LPAREN FUNCTION_ARGUMENTS RPAREN','FUNCTION',4,'p_FUNCTION','syntax.py',242),
  ('FUNCTION_ARGUMENTS -> STATEMENTS','FUNCTION_ARGUMENTS',1,'p_FUNCTION_ARGUMENTS','syntax.py',249),
  ('FUNCTION_ARGUMENTS -> COMPARISONS','FUNCTION_ARGUMENTS',1,'p_FUNCTION_ARGUMENTS','syntax.py',250),
  ('INTEGER_TYPE -> INT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',257),
  ('INTEGER_TYPE -> SHORT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',258),
  ('INTEGER_TYPE -> LONG','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',259),
  ('DECIMAL_TYPE -> FLOAT','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',266),
  ('DECIMAL_TYPE -> DOUBLE','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',267),
  ('INTEGER_DECLARATION -> INTEGER_TYPE VARNAME EQUAL INTEGER','INTEGER_DECLARATION',4,'p_INTEGER_DECLARATION','syntax.py',274),
  ('DECIMAL_DECLARATION -> DECIMAL_TYPE VARNAME EQUAL DECIMAL','DECIMAL_DECLARATION',4,'p_DECIMAL_DECLARATION','syntax.py',281),
  ('ASSIGNMENT_DECLARATION -> VARNAME ASSIGNMENT_OPERATOR STATEMENT','ASSIGNMENT_DECLARATION',3,'p_ASSIGNMENT_DECLARATION','syntax.py',288),
  ('ASSIGNMENT_OPERATOR -> EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',295),
  ('ASSIGNMENT_OPERATOR -> PLUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',296),
  ('ASSIGNMENT_OPERATOR -> MINUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',297),
  ('ASSIGNMENT_OPERATOR -> DIV_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',298),
  ('ASSIGNMENT_OPERATOR -> TIMES_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',299),
  ('ASSIGNMENT_OPERATOR -> MOD_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',300),
  ('ASSIGNMENT_OPERATOR -> AND_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',301),
  ('ASSIGNMENT_OPERATOR -> OR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',302),
  ('ASSIGNMENT_OPERATOR -> XOR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',303),
  ('ASSIGNMENT_OPERATOR -> COMPLEMENT_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',304),
  ('ASSIGNMENT_OPERATOR -> SHIFTL_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',305),
  ('ASSIGNMENT_OPERATOR -> SHIFTR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',306),
  ('COMENTARIOLEX -> COMMENT','COMENTARIOLEX',1,'p_COMENTARIOLEX','syntax.py',313),
  ('VARIABLELEX -> VARNAME','VARIABLELEX',1,'p_VARIABLELEX','syntax.py',320),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','syntax.py',327),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','syntax.py',328),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','syntax.py',329),
  ('OPERATOR -> MODULUS','OPERATOR',1,'p_OPERATOR','syntax.py',330),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','syntax.py',331),
  ('OPERATION -> NUMBER OPERATOR NUMBER','OPERATION',3,'p_OPERATION','syntax.py',338),
  ('OPERATIONS -> OPERATION','OPERATIONS',1,'p_OPERATIONS','syntax.py',345),
  ('OPERATIONS -> OPERATION OPERATOR OPERATIONS','OPERATIONS',3,'p_OPERATIONS','syntax.py',346),
  ('COMPARISON_OPERATOR -> EQUAL_TO','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',353),
  ('COMPARISON_OPERATOR -> NOT_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',354),
  ('COMPARISON_OPERATOR -> GREATER_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',355),
  ('COMPARISON_OPERATOR -> LESS_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',356),
  ('COMPARISON_OPERATOR -> GREATER_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',357),
  ('COMPARISON_OPERATOR -> LESS_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',358),
  ('COMPARISON -> VALUE COMPARISON_OPERATOR VALUE','COMPARISON',3,'p_COMPARISON','syntax.py',365),
  ('COMPARISON -> STATEMENT COMPARISON_OPERATOR STATEMENT','COMPARISON',3,'p_COMPARISON','syntax.py',366),
  ('COMPARISONS -> COMPARISON','COMPARISONS',1,'p_COMPARISONS','syntax.py',373),
  ('COMPARISONS -> COMPARISON LOGICAL_OPERATOR COMPARISONS','COMPARISONS',3,'p_COMPARISONS','syntax.py',374),
  ('LOGICAL_OPERATOR -> AND','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',381),
  ('LOGICAL_OPERATOR -> OR','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',382),
  ('LOGICAL_OPERATOR -> NOT','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',383),
  ('STATEMENT -> NUMBER','STATEMENT',1,'p_STATEMENT','syntax.py',390),
  ('STATEMENT -> VARNAME','STATEMENT',1,'p_STATEMENT','syntax.py',391),
  ('STATEMENTS -> STATEMENT','STATEMENTS',1,'p_STATEMENTS','syntax.py',398),
  ('STATEMENTS -> STATEMENT COMMA STATEMENTS','STATEMENTS',3,'p_STATEMENTS','syntax.py',399),
  ('VALUES -> VALUE','VALUES',1,'p_VALUES','syntax.py',410),
  ('VALUES -> VALUE COMMA VALUES','VALUES',3,'p_VALUES','syntax.py',411),
  ('RETURN_TYPE -> INTEGER_TYPE','RETURN_TYPE',1,'p_RETURN_TYPE','syntax.py',418),
  ('RETURN_TYPE -> DECIMAL_TYPE','RETURN_TYPE',1,'p_RETURN_TYPE','syntax.py',419),
  ('RETURN_TYPE -> VOID','RETURN_TYPE',1,'p_RETURN_TYPE','syntax.py',420),
  ('RETURN_STATEMENT -> RETURN PARAMETERS SEMICOLON','RETURN_STATEMENT',3,'p_RETURN_STATEMENT','syntax.py',427),
  ('RETURN_STATEMENT -> RETURN VALUES SEMICOLON','RETURN_STATEMENT',3,'p_RETURN_STATEMENT','syntax.py',428),
  ('PARAMETERS -> VARNAME','PARAMETERS',1,'p_PARAMETERS','syntax.py',435),
  ('PARAMETERS -> VARNAME COMMA PARAMETERS','PARAMETERS',3,'p_PARAMETERS','syntax.py',436),
  ('FUNCTION_PROTOTYPE -> RETURN_TYPE VARNAME LPAREN RPAREN LCURL_BRACE EXPRESSIONS RETURN_STATEMENT RCURL_BRACE','FUNCTION_PROTOTYPE',8,'p_FUNCTION_PROTOTYPE','syntax.py',443),
  ('FUNCTION_PROTOTYPE -> RETURN_TYPE VARNAME LPAREN PARAMETERS RPAREN LCURL_BRACE EXPRESSIONS RETURN_STATEMENT RCURL_BRACE','FUNCTION_PROTOTYPE',9,'p_FUNCTION_PROTOTYPE','syntax.py',444),
]
