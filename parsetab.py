
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_EQUAL AUTO BACKSLASH BACKSPACE BREAK B_AND B_COMPLEMENT B_OR B_XOR CASE CHAR CHARACTER COLON COMMA COMMENT COMPLEMENT_EQUAL CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE DIV_EQUAL DO DOT DOUBLE DOUBLE_APOS DOUBLE_QUOTE ELSE ENUM EQUAL EQUAL_TO EXTERN FF_PAGEBREAK FLOAT FOR FS_CHAR FS_DOUBLE FS_FLOAT FS_HEX FS_INT FS_LONG FS_LONG_DOUBLE FS_OCT FS_OCT_LONG FS_POINTER FS_SCI_NOTATION FS_STRING FS_UNSIGNED_INT FS_UNSIGNED_LONG GOTO GREATER_EQUAL GREATER_THAN HEADER_LIB HTAB IF IGNORE INCREASE INT INTEGER LBRACKET LCURL_BRACE LESS_EQUAL LESS_THAN LONG LPAREN MINUS MINUS_EQUAL MODULUS MOD_EQUAL NEWLINE NOT NOT_EQUAL NULL OR OR_EQUAL PLUS PLUS_EQUAL PP_DATE PP_DEFINE PP_DTMACRO PP_ERROR PP_FILE PP_IF PP_IFDEF PP_IFNDEF PP_INCLUDE PP_LINE PP_PRAGMA PP_STMACRO PP_TIME PP_TIMESTAMP PP_UNDEF QUESTIONMARK RBRACKET RCURL_BRACE REGISTER RETURN RPAREN SEMICOLON SHIFTL_EQUAL SHIFTR_EQUAL SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SINGLE_APOS SINGLE_QUOTE SIZEOF STATIC STRING STRUCT SWITCH TILDE TIMES TIMES_EQUAL TYPEDEF UNION UNSIGNED VARNAME VOID VOLTILE VTAB WHILE XOR_EQUAL\n    ROOT : PREPROCESOR_DIRECTIVE\n        | DEFINE\n        | INCLUDE\n        | VALUE\n        | NUMBER\n        | CONTROL_STRUCTURES\n        | WHILE_STRUCTURE\n        | SWITCH_STRUCTURE\n        | IF_STRUCTURE\n        | FOR_STRUCTURE\n        | CODE\n        | EXPRESSION\n        | EXPRESSIONS\n        | FUNCTION\n        | INTEGER_TYPE\n        | DECIMAL_TYPE\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | ASSIGNMENT_OPERATOR\n        | COMENTARIOLEX\n        | VARIABLELEX\n        | OPERATOR\n        | OPERATION\n        | OPERATIONS\n        | COMPARISON_OPERATOR\n        | COMPARISON\n        | COMPARISONS\n        | LOGICAL_OPERATOR\n        | SENTENCE\n        | SWITCH_BODY\n        | BUCLE\n        | ELSE_STRUCTURE\n    \n    PREPROCESOR_DIRECTIVE : DEFINE\n                            | INCLUDE\n    \n    DEFINE : PP_DEFINE VARIABLELEX VALUE\n    \n    \n    INCLUDE : PP_INCLUDE HEADER_LIB\n    \n    VALUE : NUMBER \n            | STRING\n    \n    NUMBER : INTEGER\n            | DECIMAL\n    \n    CONTROL_STRUCTURES : IF_STRUCTURE\n                        | FOR_STRUCTURE\n                        | WHILE_STRUCTURE\n                        | SWITCH_STRUCTURE\n    \n    BODY_STRUCTURE : EXPRESSIONS \n                | EXPRESSIONS BREAK SEMICOLON\n                | EXPRESSIONS CONTINUE SEMICOLON \n    \n    WHILE_STRUCTURE : WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE\n    \n    SWITCH_CASE : CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_DEFAULT : DEFAULT COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_BODY : SWITCH_CASE\n                | SWITCH_DEFAULT\n                |  SWITCH_CASE SWITCH_BODY   \n    \n    SWITCH_STRUCTURE : SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE\n    \n    BUCLE : VARIABLELEX INCREASE \n            | DECREASE VARIABLELEX\n    \n    FOR_STRUCTURE : INTEGER\n    \n    IF_STRUCTURE : IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                 | IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE\n    \n    ELSE_STRUCTURE : ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                   | ELSE IF_STRUCTURE\n    \n    CODE : FUNCTION\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | COMENTARIOLEX\n    \n    EXPRESSION : CODE SEMICOLON\n                | CONTROL_STRUCTURES\n    \n    EXPRESSIONS : EXPRESSION\n                | EXPRESSION EXPRESSIONS\n    \n    FUNCTION : VARNAME LPAREN RPAREN\n    \n    INTEGER_TYPE : INT\n                | SHORT\n                | LONG\n    \n    DECIMAL_TYPE : FLOAT\n                | DOUBLE\n    \n    INTEGER_DECLARATION : INTEGER_TYPE VARNAME EQUAL INTEGER\n    \n    DECIMAL_DECLARATION : DECIMAL_TYPE VARNAME EQUAL DECIMAL\n    \n    ASSIGNMENT_DECLARATION : VARNAME ASSIGNMENT_OPERATOR SENTENCE\n    \n    ASSIGNMENT_OPERATOR : EQUAL\n                        | PLUS_EQUAL\n                        | MINUS_EQUAL\n                        | DIV_EQUAL\n                        | TIMES_EQUAL\n                        | MOD_EQUAL\n                        | AND_EQUAL\n                        | OR_EQUAL\n                        | XOR_EQUAL\n                        | COMPLEMENT_EQUAL\n                        | SHIFTL_EQUAL\n                        | SHIFTR_EQUAL\n    \n    COMENTARIOLEX : COMMENT\n    \n    VARIABLELEX : VARNAME\n    \n    OPERATOR : PLUS\n              | MINUS\n              | TIMES\n              | MODULUS\n              | DIVIDE\n    \n    OPERATION : NUMBER OPERATOR NUMBER\n    \n    OPERATIONS : OPERATION\n                | OPERATION OPERATOR OPERATIONS\n    \n    COMPARISON_OPERATOR : EQUAL_TO\n                        | NOT_EQUAL\n                        | GREATER_THAN\n                        | LESS_THAN\n                        | GREATER_EQUAL\n                        | LESS_EQUAL\n    \n    COMPARISON : VALUE COMPARISON_OPERATOR VALUE\n    \n    COMPARISONS : COMPARISON\n                | COMPARISON LOGICAL_OPERATOR COMPARISONS\n    \n    LOGICAL_OPERATOR : AND\n                    | OR\n                    | NOT\n    \n    SENTENCE : NUMBER\n            | VARNAME\n    '
    
_lr_action_items = {'PP_DEFINE':([0,],[35,]),'PP_INCLUDE':([0,],[36,]),'STRING':([0,67,68,69,70,71,72,73,74,75,82,106,107,108,110,111,112,],[37,-103,-104,-105,-106,-107,-108,-112,-113,-114,37,37,37,-94,37,37,37,]),'INTEGER':([0,7,8,9,10,11,13,38,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,80,82,83,84,85,88,94,95,96,97,100,105,106,107,108,110,111,112,114,117,118,120,125,142,149,152,154,162,165,166,169,],[38,-69,-44,-45,-42,-43,100,-58,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-95,-96,-97,-98,-99,-103,-104,-105,-106,-107,-108,-112,-113,-114,119,123,123,-68,100,-69,-42,-43,-44,-45,-58,123,123,123,-94,123,123,123,123,100,-62,100,144,100,-61,100,100,-49,-55,-59,-60,]),'DECIMAL':([0,49,50,51,52,53,54,55,56,57,58,59,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,82,83,105,106,107,108,110,111,112,114,126,],[39,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-95,-96,-97,-98,-99,-103,-104,-105,-106,-107,-108,-112,-113,-114,39,39,39,39,39,-94,39,39,39,39,145,]),'WHILE':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[40,-69,-44,-45,-42,-43,40,-58,-68,40,-69,-42,-43,-44,-45,-58,40,-62,40,40,-61,40,40,-49,-55,-59,-60,]),'SWITCH':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[41,-69,-44,-45,-42,-43,41,-58,-68,41,-69,-42,-43,-44,-45,-58,41,-62,41,41,-61,41,41,-49,-55,-59,-60,]),'IF':([0,7,8,9,10,11,13,38,79,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[42,-69,-44,-45,-42,-43,42,-58,42,-68,42,-69,-42,-43,-44,-45,-58,42,-62,42,42,-61,42,42,-49,-55,-59,-60,]),'VARNAME':([0,7,8,9,10,11,13,16,17,35,38,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,78,84,85,88,94,95,96,97,99,100,101,114,117,118,120,142,149,152,154,162,165,166,169,],[43,-69,-44,-45,-42,-43,98,102,103,108,-58,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,108,-68,98,-69,-42,-43,-44,-45,102,-58,103,138,98,-62,98,98,-61,98,98,-49,-55,-59,-60,]),'INT':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[44,-69,-44,-45,-42,-43,44,-58,-68,44,-69,-42,-43,-44,-45,-58,44,-62,44,44,-61,44,44,-49,-55,-59,-60,]),'SHORT':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[45,-69,-44,-45,-42,-43,45,-58,-68,45,-69,-42,-43,-44,-45,-58,45,-62,45,45,-61,45,45,-49,-55,-59,-60,]),'LONG':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[46,-69,-44,-45,-42,-43,46,-58,-68,46,-69,-42,-43,-44,-45,-58,46,-62,46,46,-61,46,46,-49,-55,-59,-60,]),'FLOAT':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[47,-69,-44,-45,-42,-43,47,-58,-68,47,-69,-42,-43,-44,-45,-58,47,-62,47,47,-61,47,47,-49,-55,-59,-60,]),'DOUBLE':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[48,-69,-44,-45,-42,-43,48,-58,-68,48,-69,-42,-43,-44,-45,-58,48,-62,48,48,-61,48,48,-49,-55,-59,-60,]),'EQUAL':([0,43,98,102,103,],[49,49,49,125,126,]),'PLUS_EQUAL':([0,43,98,],[50,50,50,]),'MINUS_EQUAL':([0,43,98,],[51,51,51,]),'DIV_EQUAL':([0,43,98,],[52,52,52,]),'TIMES_EQUAL':([0,43,98,],[53,53,53,]),'MOD_EQUAL':([0,43,98,],[54,54,54,]),'AND_EQUAL':([0,43,98,],[55,55,55,]),'OR_EQUAL':([0,43,98,],[56,56,56,]),'XOR_EQUAL':([0,43,98,],[57,57,57,]),'COMPLEMENT_EQUAL':([0,43,98,],[58,58,58,]),'SHIFTL_EQUAL':([0,43,98,],[59,59,59,]),'SHIFTR_EQUAL':([0,43,98,],[60,60,60,]),'COMMENT':([0,7,8,9,10,11,13,38,84,85,88,94,95,96,97,100,117,118,120,142,149,152,154,162,165,166,169,],[61,-69,-44,-45,-42,-43,61,-58,-68,61,-69,-42,-43,-44,-45,-58,61,-62,61,61,-61,61,61,-49,-55,-59,-60,]),'PLUS':([0,6,25,38,39,123,124,127,129,],[62,62,62,-40,-41,-40,-100,62,62,]),'MINUS':([0,6,25,38,39,123,124,127,129,],[63,63,63,-40,-41,-40,-100,63,63,]),'TIMES':([0,6,25,38,39,123,124,127,129,],[64,64,64,-40,-41,-40,-100,64,64,]),'MODULUS':([0,6,25,38,39,123,124,127,129,],[65,65,65,-40,-41,-40,-100,65,65,]),'DIVIDE':([0,6,25,38,39,123,124,127,129,],[66,66,66,-40,-41,-40,-100,66,66,]),'EQUAL_TO':([0,5,6,37,38,39,122,123,132,],[67,67,-38,-39,-40,-41,-38,-40,67,]),'NOT_EQUAL':([0,5,6,37,38,39,122,123,132,],[68,68,-38,-39,-40,-41,-38,-40,68,]),'GREATER_THAN':([0,5,6,37,38,39,122,123,132,],[69,69,-38,-39,-40,-41,-38,-40,69,]),'LESS_THAN':([0,5,6,37,38,39,122,123,132,],[70,70,-38,-39,-40,-41,-38,-40,70,]),'GREATER_EQUAL':([0,5,6,37,38,39,122,123,132,],[71,71,-38,-39,-40,-41,-38,-40,71,]),'LESS_EQUAL':([0,5,6,37,38,39,122,123,132,],[72,72,-38,-39,-40,-41,-38,-40,72,]),'AND':([0,28,37,39,121,122,123,130,],[73,73,-39,-41,-109,-38,-40,73,]),'OR':([0,28,37,39,121,122,123,130,],[74,74,-39,-41,-109,-38,-40,74,]),'NOT':([0,28,37,39,121,122,123,130,],[75,75,-39,-41,-109,-38,-40,75,]),'DECREASE':([0,],[78,]),'ELSE':([0,166,],[79,79,]),'CASE':([0,76,153,161,],[80,80,80,-50,]),'DEFAULT':([0,76,153,161,],[81,81,81,-50,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,37,38,39,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,84,85,86,88,94,95,96,97,100,104,108,109,115,116,118,121,122,123,124,127,128,130,131,133,137,138,139,140,144,145,149,156,161,162,165,166,169,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-39,-40,-41,-94,-73,-74,-75,-76,-77,-81,-82,-83,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-95,-96,-97,-98,-99,-103,-104,-105,-106,-107,-108,-112,-113,-114,-52,-53,-68,-70,-71,-69,-42,-43,-44,-45,-58,-56,-94,-37,-54,-57,-62,-109,-38,-40,-100,-101,-102,-110,-111,-36,-72,-116,-80,-115,-78,-79,-61,-51,-50,-49,-55,-59,-60,]),'SEMICOLON':([12,15,18,19,20,22,39,61,87,89,90,91,92,93,123,137,138,139,140,144,145,151,155,163,164,],[84,-63,-64,-65,-66,-67,-41,-93,84,-63,-64,-65,-66,-67,-40,-72,-116,-80,-115,-78,-79,156,161,167,168,]),'INCREASE':([23,43,],[104,-94,]),'HEADER_LIB':([36,],[109,]),'RPAREN':([37,39,113,121,122,123,130,131,134,135,136,],[-39,-41,137,-109,-38,-40,-110,-111,146,147,148,]),'LPAREN':([40,41,42,43,98,],[110,111,112,113,113,]),'RCURL_BRACE':([76,77,84,85,86,88,94,95,96,97,100,115,118,141,149,156,157,158,159,160,161,162,165,166,167,168,169,],[-52,-53,-68,-70,-71,-69,-42,-43,-44,-45,-58,-54,-62,149,-61,-51,162,-46,165,166,-50,-49,-55,-59,-47,-48,-60,]),'LCURL_BRACE':([79,146,147,148,],[117,152,153,154,]),'COLON':([81,119,],[120,142,]),'BREAK':([84,85,86,88,94,95,96,97,100,118,143,149,150,158,162,165,166,169,],[-68,-70,-71,-69,-42,-43,-44,-45,-58,-62,151,-61,155,163,-49,-55,-59,-60,]),'CONTINUE':([84,85,86,88,94,95,96,97,100,118,149,158,162,165,166,169,],[-68,-70,-71,-69,-42,-43,-44,-45,-58,-62,-61,164,-49,-55,-59,-60,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ROOT':([0,],[1,]),'PREPROCESOR_DIRECTIVE':([0,],[2,]),'DEFINE':([0,],[3,]),'INCLUDE':([0,],[4,]),'VALUE':([0,82,106,107,110,111,112,],[5,121,132,133,132,132,132,]),'NUMBER':([0,82,83,105,106,107,110,111,112,114,],[6,122,124,129,122,122,122,122,122,140,]),'CONTROL_STRUCTURES':([0,13,85,117,120,142,152,154,],[7,88,88,88,88,88,88,88,]),'WHILE_STRUCTURE':([0,13,85,117,120,142,152,154,],[8,96,96,96,96,96,96,96,]),'SWITCH_STRUCTURE':([0,13,85,117,120,142,152,154,],[9,97,97,97,97,97,97,97,]),'IF_STRUCTURE':([0,13,79,85,117,120,142,152,154,],[10,94,118,94,94,94,94,94,94,]),'FOR_STRUCTURE':([0,13,85,117,120,142,152,154,],[11,95,95,95,95,95,95,95,]),'CODE':([0,13,85,117,120,142,152,154,],[12,87,87,87,87,87,87,87,]),'EXPRESSION':([0,13,85,117,120,142,152,154,],[13,85,85,85,85,85,85,85,]),'EXPRESSIONS':([0,13,85,117,120,142,152,154,],[14,86,86,141,143,150,158,160,]),'FUNCTION':([0,13,85,117,120,142,152,154,],[15,89,89,89,89,89,89,89,]),'INTEGER_TYPE':([0,13,85,117,120,142,152,154,],[16,99,99,99,99,99,99,99,]),'DECIMAL_TYPE':([0,13,85,117,120,142,152,154,],[17,101,101,101,101,101,101,101,]),'INTEGER_DECLARATION':([0,13,85,117,120,142,152,154,],[18,90,90,90,90,90,90,90,]),'DECIMAL_DECLARATION':([0,13,85,117,120,142,152,154,],[19,91,91,91,91,91,91,91,]),'ASSIGNMENT_DECLARATION':([0,13,85,117,120,142,152,154,],[20,92,92,92,92,92,92,92,]),'ASSIGNMENT_OPERATOR':([0,43,98,],[21,114,114,]),'COMENTARIOLEX':([0,13,85,117,120,142,152,154,],[22,93,93,93,93,93,93,93,]),'VARIABLELEX':([0,35,78,],[23,107,116,]),'OPERATOR':([0,6,25,127,129,],[24,83,105,105,83,]),'OPERATION':([0,105,],[25,127,]),'OPERATIONS':([0,105,],[26,128,]),'COMPARISON_OPERATOR':([0,5,132,],[27,82,82,]),'COMPARISON':([0,106,110,111,112,],[28,130,130,130,130,]),'COMPARISONS':([0,106,110,111,112,],[29,131,134,135,136,]),'LOGICAL_OPERATOR':([0,28,130,],[30,106,106,]),'SENTENCE':([0,114,],[31,139,]),'SWITCH_BODY':([0,76,153,],[32,115,159,]),'BUCLE':([0,],[33,]),'ELSE_STRUCTURE':([0,166,],[34,169,]),'SWITCH_CASE':([0,76,153,],[76,76,76,]),'SWITCH_DEFAULT':([0,76,153,],[77,77,77,]),'BODY_STRUCTURE':([152,],[157,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ROOT","S'",1,None,None,None),
  ('ROOT -> PREPROCESOR_DIRECTIVE','ROOT',1,'p_ROOT','syntax.py',7),
  ('ROOT -> DEFINE','ROOT',1,'p_ROOT','syntax.py',8),
  ('ROOT -> INCLUDE','ROOT',1,'p_ROOT','syntax.py',9),
  ('ROOT -> VALUE','ROOT',1,'p_ROOT','syntax.py',10),
  ('ROOT -> NUMBER','ROOT',1,'p_ROOT','syntax.py',11),
  ('ROOT -> CONTROL_STRUCTURES','ROOT',1,'p_ROOT','syntax.py',12),
  ('ROOT -> WHILE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',13),
  ('ROOT -> SWITCH_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',14),
  ('ROOT -> IF_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',15),
  ('ROOT -> FOR_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',16),
  ('ROOT -> CODE','ROOT',1,'p_ROOT','syntax.py',17),
  ('ROOT -> EXPRESSION','ROOT',1,'p_ROOT','syntax.py',18),
  ('ROOT -> EXPRESSIONS','ROOT',1,'p_ROOT','syntax.py',19),
  ('ROOT -> FUNCTION','ROOT',1,'p_ROOT','syntax.py',20),
  ('ROOT -> INTEGER_TYPE','ROOT',1,'p_ROOT','syntax.py',21),
  ('ROOT -> DECIMAL_TYPE','ROOT',1,'p_ROOT','syntax.py',22),
  ('ROOT -> INTEGER_DECLARATION','ROOT',1,'p_ROOT','syntax.py',23),
  ('ROOT -> DECIMAL_DECLARATION','ROOT',1,'p_ROOT','syntax.py',24),
  ('ROOT -> ASSIGNMENT_DECLARATION','ROOT',1,'p_ROOT','syntax.py',25),
  ('ROOT -> ASSIGNMENT_OPERATOR','ROOT',1,'p_ROOT','syntax.py',26),
  ('ROOT -> COMENTARIOLEX','ROOT',1,'p_ROOT','syntax.py',27),
  ('ROOT -> VARIABLELEX','ROOT',1,'p_ROOT','syntax.py',28),
  ('ROOT -> OPERATOR','ROOT',1,'p_ROOT','syntax.py',29),
  ('ROOT -> OPERATION','ROOT',1,'p_ROOT','syntax.py',30),
  ('ROOT -> OPERATIONS','ROOT',1,'p_ROOT','syntax.py',31),
  ('ROOT -> COMPARISON_OPERATOR','ROOT',1,'p_ROOT','syntax.py',32),
  ('ROOT -> COMPARISON','ROOT',1,'p_ROOT','syntax.py',33),
  ('ROOT -> COMPARISONS','ROOT',1,'p_ROOT','syntax.py',34),
  ('ROOT -> LOGICAL_OPERATOR','ROOT',1,'p_ROOT','syntax.py',35),
  ('ROOT -> SENTENCE','ROOT',1,'p_ROOT','syntax.py',36),
  ('ROOT -> SWITCH_BODY','ROOT',1,'p_ROOT','syntax.py',37),
  ('ROOT -> BUCLE','ROOT',1,'p_ROOT','syntax.py',38),
  ('ROOT -> ELSE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',39),
  ('PREPROCESOR_DIRECTIVE -> DEFINE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',47),
  ('PREPROCESOR_DIRECTIVE -> INCLUDE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',48),
  ('DEFINE -> PP_DEFINE VARIABLELEX VALUE','DEFINE',3,'p_DEFINE','syntax.py',55),
  ('INCLUDE -> PP_INCLUDE HEADER_LIB','INCLUDE',2,'p_INCLUDE','syntax.py',63),
  ('VALUE -> NUMBER','VALUE',1,'p_VALUE','syntax.py',70),
  ('VALUE -> STRING','VALUE',1,'p_VALUE','syntax.py',71),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','syntax.py',78),
  ('NUMBER -> DECIMAL','NUMBER',1,'p_NUMBER','syntax.py',79),
  ('CONTROL_STRUCTURES -> IF_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',86),
  ('CONTROL_STRUCTURES -> FOR_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',87),
  ('CONTROL_STRUCTURES -> WHILE_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',88),
  ('CONTROL_STRUCTURES -> SWITCH_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',89),
  ('BODY_STRUCTURE -> EXPRESSIONS','BODY_STRUCTURE',1,'p_BODY_STRUCTURE','syntax.py',96),
  ('BODY_STRUCTURE -> EXPRESSIONS BREAK SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',97),
  ('BODY_STRUCTURE -> EXPRESSIONS CONTINUE SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',98),
  ('WHILE_STRUCTURE -> WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE','WHILE_STRUCTURE',7,'p_WHILE_STRUCTURE','syntax.py',107),
  ('SWITCH_CASE -> CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_CASE',6,'p_SWITCH_CASE','syntax.py',116),
  ('SWITCH_DEFAULT -> DEFAULT COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_DEFAULT',5,'p_SWITCH_DEFAULT','syntax.py',123),
  ('SWITCH_BODY -> SWITCH_CASE','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',130),
  ('SWITCH_BODY -> SWITCH_DEFAULT','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',131),
  ('SWITCH_BODY -> SWITCH_CASE SWITCH_BODY','SWITCH_BODY',2,'p_SWITCH_BODY','syntax.py',132),
  ('SWITCH_STRUCTURE -> SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE','SWITCH_STRUCTURE',7,'p_SWITCH_STRUCTURE','syntax.py',139),
  ('BUCLE -> VARIABLELEX INCREASE','BUCLE',2,'p_BUCLE','syntax.py',148),
  ('BUCLE -> DECREASE VARIABLELEX','BUCLE',2,'p_BUCLE','syntax.py',149),
  ('FOR_STRUCTURE -> INTEGER','FOR_STRUCTURE',1,'p_FOR_STRUCTURE','syntax.py',157),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE','IF_STRUCTURE',7,'p_IF_STRUCTURE','syntax.py',170),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE','IF_STRUCTURE',8,'p_IF_STRUCTURE','syntax.py',171),
  ('ELSE_STRUCTURE -> ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE','ELSE_STRUCTURE',4,'p_ELSE_STRUCTURE','syntax.py',178),
  ('ELSE_STRUCTURE -> ELSE IF_STRUCTURE','ELSE_STRUCTURE',2,'p_ELSE_STRUCTURE','syntax.py',179),
  ('CODE -> FUNCTION','CODE',1,'p_CODE','syntax.py',186),
  ('CODE -> INTEGER_DECLARATION','CODE',1,'p_CODE','syntax.py',187),
  ('CODE -> DECIMAL_DECLARATION','CODE',1,'p_CODE','syntax.py',188),
  ('CODE -> ASSIGNMENT_DECLARATION','CODE',1,'p_CODE','syntax.py',189),
  ('CODE -> COMENTARIOLEX','CODE',1,'p_CODE','syntax.py',190),
  ('EXPRESSION -> CODE SEMICOLON','EXPRESSION',2,'p_EXPRESSION','syntax.py',197),
  ('EXPRESSION -> CONTROL_STRUCTURES','EXPRESSION',1,'p_EXPRESSION','syntax.py',198),
  ('EXPRESSIONS -> EXPRESSION','EXPRESSIONS',1,'p_EXPRESSIONS','syntax.py',205),
  ('EXPRESSIONS -> EXPRESSION EXPRESSIONS','EXPRESSIONS',2,'p_EXPRESSIONS','syntax.py',206),
  ('FUNCTION -> VARNAME LPAREN RPAREN','FUNCTION',3,'p_FUNCTION','syntax.py',213),
  ('INTEGER_TYPE -> INT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',220),
  ('INTEGER_TYPE -> SHORT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',221),
  ('INTEGER_TYPE -> LONG','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',222),
  ('DECIMAL_TYPE -> FLOAT','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',229),
  ('DECIMAL_TYPE -> DOUBLE','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',230),
  ('INTEGER_DECLARATION -> INTEGER_TYPE VARNAME EQUAL INTEGER','INTEGER_DECLARATION',4,'p_INTEGER_DECLARATION','syntax.py',237),
  ('DECIMAL_DECLARATION -> DECIMAL_TYPE VARNAME EQUAL DECIMAL','DECIMAL_DECLARATION',4,'p_DECIMAL_DECLARATION','syntax.py',244),
  ('ASSIGNMENT_DECLARATION -> VARNAME ASSIGNMENT_OPERATOR SENTENCE','ASSIGNMENT_DECLARATION',3,'p_ASSIGNMENT_DECLARATION','syntax.py',251),
  ('ASSIGNMENT_OPERATOR -> EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',258),
  ('ASSIGNMENT_OPERATOR -> PLUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',259),
  ('ASSIGNMENT_OPERATOR -> MINUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',260),
  ('ASSIGNMENT_OPERATOR -> DIV_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',261),
  ('ASSIGNMENT_OPERATOR -> TIMES_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',262),
  ('ASSIGNMENT_OPERATOR -> MOD_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',263),
  ('ASSIGNMENT_OPERATOR -> AND_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',264),
  ('ASSIGNMENT_OPERATOR -> OR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',265),
  ('ASSIGNMENT_OPERATOR -> XOR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',266),
  ('ASSIGNMENT_OPERATOR -> COMPLEMENT_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',267),
  ('ASSIGNMENT_OPERATOR -> SHIFTL_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',268),
  ('ASSIGNMENT_OPERATOR -> SHIFTR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',269),
  ('COMENTARIOLEX -> COMMENT','COMENTARIOLEX',1,'p_COMENTARIOLEX','syntax.py',276),
  ('VARIABLELEX -> VARNAME','VARIABLELEX',1,'p_VARIABLELEX','syntax.py',283),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','syntax.py',290),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','syntax.py',291),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','syntax.py',292),
  ('OPERATOR -> MODULUS','OPERATOR',1,'p_OPERATOR','syntax.py',293),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','syntax.py',294),
  ('OPERATION -> NUMBER OPERATOR NUMBER','OPERATION',3,'p_OPERATION','syntax.py',301),
  ('OPERATIONS -> OPERATION','OPERATIONS',1,'p_OPERATIONS','syntax.py',308),
  ('OPERATIONS -> OPERATION OPERATOR OPERATIONS','OPERATIONS',3,'p_OPERATIONS','syntax.py',309),
  ('COMPARISON_OPERATOR -> EQUAL_TO','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',316),
  ('COMPARISON_OPERATOR -> NOT_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',317),
  ('COMPARISON_OPERATOR -> GREATER_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',318),
  ('COMPARISON_OPERATOR -> LESS_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',319),
  ('COMPARISON_OPERATOR -> GREATER_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',320),
  ('COMPARISON_OPERATOR -> LESS_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',321),
  ('COMPARISON -> VALUE COMPARISON_OPERATOR VALUE','COMPARISON',3,'p_COMPARISON','syntax.py',328),
  ('COMPARISONS -> COMPARISON','COMPARISONS',1,'p_COMPARISONS','syntax.py',335),
  ('COMPARISONS -> COMPARISON LOGICAL_OPERATOR COMPARISONS','COMPARISONS',3,'p_COMPARISONS','syntax.py',336),
  ('LOGICAL_OPERATOR -> AND','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',343),
  ('LOGICAL_OPERATOR -> OR','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',344),
  ('LOGICAL_OPERATOR -> NOT','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',345),
  ('SENTENCE -> NUMBER','SENTENCE',1,'p_SENTENCE','syntax.py',352),
  ('SENTENCE -> VARNAME','SENTENCE',1,'p_SENTENCE','syntax.py',353),
]
