
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_EQUAL AUTO BACKSLASH BACKSPACE BREAK B_AND B_COMPLEMENT B_OR B_XOR CASE CHAR CHARACTER COLON COMMA COMMENT COMPLEMENT_EQUAL CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE DIV_EQUAL DO DOT DOUBLE DOUBLE_APOS DOUBLE_QUOTE ELSE ELSEIF ENUM EQUAL EQUAL_TO EXTERN FF_PAGEBREAK FLOAT FOR FS_CHAR FS_DOUBLE FS_FLOAT FS_HEX FS_INT FS_LONG FS_LONG_DOUBLE FS_OCT FS_OCT_LONG FS_POINTER FS_SCI_NOTATION FS_STRING FS_UNSIGNED_INT FS_UNSIGNED_LONG GOTO GREATER_EQUAL GREATER_THAN HEADER_LIB HTAB IF IGNORE INCREASE INT INTEGER LBRACKET LCURL_BRACE LESS_EQUAL LESS_THAN LONG LPAREN MINUS MINUS_EQUAL MODULUS MOD_EQUAL NEWLINE NOT NOT_EQUAL NULL OR OR_EQUAL PLUS PLUS_EQUAL PP_DATE PP_DEFINE PP_DTMACRO PP_ERROR PP_FILE PP_IF PP_IFDEF PP_IFNDEF PP_INCLUDE PP_LINE PP_PRAGMA PP_STMACRO PP_TIME PP_TIMESTAMP PP_UNDEF QUESTIONMARK RBRACKET RCURL_BRACE REGISTER RETURN RPAREN SEMICOLON SHIFTL_EQUAL SHIFTR_EQUAL SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SINGLE_APOS SINGLE_QUOTE SIZEOF STATIC STRING STRUCT SWITCH TILDE TIMES TIMES_EQUAL TYPEDEF UNION UNSIGNED VARNAME VOID VOLTILE VTAB WHILE XOR_EQUAL\n    ROOT : PREPROCESOR_DIRECTIVE\n        | DEFINE\n        | INCLUDE\n        | VALUE\n        | NUMBER\n        | CONTROL_STRUCTURES\n        | WHILE_STRUCTURE\n        | SWITCH_STRUCTURE\n        | IF_STRUCTURE\n        | FOR_STRUCTURE\n        | CODE\n        | EXPRESSION\n        | EXPRESSIONS\n        | FUNCTION\n        | INTEGER_TYPE\n        | DECIMAL_TYPE\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | ASSIGNMENT_OPERATOR\n        | COMENTARIOLEX\n        | VARIABLELEX\n        | OPERATOR\n        | OPERATION\n        | OPERATIONS\n        | COMPARISON_OPERATOR\n        | COMPARISON\n        | COMPARISONS\n        | LOGICAL_OPERATOR\n        | SENTENCE\n        | SWITCH_BODY\n        | BUCLE\n    \n    PREPROCESOR_DIRECTIVE : DEFINE\n                            | INCLUDE\n    \n    DEFINE : PP_DEFINE VARIABLELEX VALUE\n    \n    \n    INCLUDE : PP_INCLUDE HEADER_LIB\n    \n    VALUE : NUMBER \n            | STRING\n    \n    NUMBER : INTEGER\n            | DECIMAL\n    \n    CONTROL_STRUCTURES : IF_STRUCTURE\n                        | FOR_STRUCTURE\n                        | WHILE_STRUCTURE\n                        | SWITCH_STRUCTURE\n    \n    BODY_STRUCTURE : EXPRESSIONS \n                | EXPRESSIONS BREAK SEMICOLON\n                | EXPRESSIONS CONTINUE SEMICOLON \n    \n    WHILE_STRUCTURE : WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE\n    \n    SWITCH_CASE : CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_DEFAULT : DEFAULT COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_BODY : SWITCH_CASE\n                | SWITCH_DEFAULT\n                |  SWITCH_CASE SWITCH_BODY   \n    \n    SWITCH_STRUCTURE : SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE\n    \n    IF_STRUCTURE : IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE\n    \n    BUCLE : VARIABLELEX INCREASE \n            | DECREASE VARIABLELEX\n    \n    FOR_STRUCTURE : INTEGER\n    \n    CODE : FUNCTION\n        | CONTROL_STRUCTURES\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | COMENTARIOLEX\n    \n    EXPRESSION : CODE SEMICOLON\n    \n    EXPRESSIONS : EXPRESSION\n                | EXPRESSION EXPRESSIONS\n    \n    FUNCTION : VARNAME LPAREN RPAREN\n    \n    INTEGER_TYPE : INT\n                | SHORT\n                | LONG\n    \n    DECIMAL_TYPE : FLOAT\n                | DOUBLE\n    \n    INTEGER_DECLARATION : INTEGER_TYPE VARNAME EQUAL INTEGER\n    \n    DECIMAL_DECLARATION : DECIMAL_TYPE VARNAME EQUAL DECIMAL\n    \n    ASSIGNMENT_DECLARATION : VARNAME ASSIGNMENT_OPERATOR SENTENCE\n    \n    ASSIGNMENT_OPERATOR : EQUAL\n                        | PLUS_EQUAL\n                        | MINUS_EQUAL\n                        | DIV_EQUAL\n                        | TIMES_EQUAL\n                        | MOD_EQUAL\n                        | AND_EQUAL\n                        | OR_EQUAL\n                        | XOR_EQUAL\n                        | COMPLEMENT_EQUAL\n                        | SHIFTL_EQUAL\n                        | SHIFTR_EQUAL\n    \n    COMENTARIOLEX : COMMENT\n    \n    VARIABLELEX : VARNAME\n    \n    OPERATOR : PLUS\n              | MINUS\n              | TIMES\n              | MODULUS\n              | DIVIDE\n    \n    OPERATION : NUMBER OPERATOR NUMBER\n    \n    OPERATIONS : OPERATION\n                | OPERATION OPERATOR OPERATIONS\n    \n    COMPARISON_OPERATOR : EQUAL_TO\n                        | NOT_EQUAL\n                        | GREATER_THAN\n                        | LESS_THAN\n                        | GREATER_EQUAL\n                        | LESS_EQUAL\n    \n    COMPARISON : VALUE COMPARISON_OPERATOR VALUE\n    \n    COMPARISONS : COMPARISON\n                | COMPARISON LOGICAL_OPERATOR COMPARISONS\n    \n    LOGICAL_OPERATOR : AND\n                    | OR\n                    | NOT\n    \n    SENTENCE : NUMBER\n            | VARNAME\n    '
    
_lr_action_items = {'PP_DEFINE':([0,],[34,]),'PP_INCLUDE':([0,],[35,]),'STRING':([0,66,67,68,69,70,71,72,73,74,80,104,105,106,108,109,110,],[36,-99,-100,-101,-102,-103,-104,-108,-109,-110,36,36,36,-90,36,36,36,]),'INTEGER':([0,13,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,78,80,81,82,83,103,104,105,106,108,109,110,112,116,121,137,146,148,],[37,98,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-91,-92,-93,-94,-95,-99,-100,-101,-102,-103,-104,-108,-109,-110,115,119,119,-65,98,119,119,119,-90,119,119,119,119,98,139,98,98,98,]),'DECIMAL':([0,48,49,50,51,52,53,54,55,56,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,80,81,103,104,105,106,108,109,110,112,122,],[38,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-91,-92,-93,-94,-95,-99,-100,-101,-102,-103,-104,-108,-109,-110,38,38,38,38,38,-90,38,38,38,38,140,]),'WHILE':([0,13,82,83,116,137,146,148,],[39,39,-65,39,39,39,39,39,]),'SWITCH':([0,13,82,83,116,137,146,148,],[40,40,-65,40,40,40,40,40,]),'IF':([0,13,82,83,116,137,146,148,],[41,41,-65,41,41,41,41,41,]),'VARNAME':([0,13,16,17,34,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,77,82,83,97,99,112,116,137,146,148,],[42,92,100,101,106,-69,-70,-71,-72,-73,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,106,-65,92,100,101,134,92,92,92,92,]),'INT':([0,13,82,83,116,137,146,148,],[43,43,-65,43,43,43,43,43,]),'SHORT':([0,13,82,83,116,137,146,148,],[44,44,-65,44,44,44,44,44,]),'LONG':([0,13,82,83,116,137,146,148,],[45,45,-65,45,45,45,45,45,]),'FLOAT':([0,13,82,83,116,137,146,148,],[46,46,-65,46,46,46,46,46,]),'DOUBLE':([0,13,82,83,116,137,146,148,],[47,47,-65,47,47,47,47,47,]),'EQUAL':([0,42,92,100,101,],[48,48,48,121,122,]),'PLUS_EQUAL':([0,42,92,],[49,49,49,]),'MINUS_EQUAL':([0,42,92,],[50,50,50,]),'DIV_EQUAL':([0,42,92,],[51,51,51,]),'TIMES_EQUAL':([0,42,92,],[52,52,52,]),'MOD_EQUAL':([0,42,92,],[53,53,53,]),'AND_EQUAL':([0,42,92,],[54,54,54,]),'OR_EQUAL':([0,42,92,],[55,55,55,]),'XOR_EQUAL':([0,42,92,],[56,56,56,]),'COMPLEMENT_EQUAL':([0,42,92,],[57,57,57,]),'SHIFTL_EQUAL':([0,42,92,],[58,58,58,]),'SHIFTR_EQUAL':([0,42,92,],[59,59,59,]),'COMMENT':([0,13,82,83,116,137,146,148,],[60,60,-65,60,60,60,60,60,]),'PLUS':([0,6,25,37,38,119,120,123,125,],[61,61,61,-39,-40,-39,-96,61,61,]),'MINUS':([0,6,25,37,38,119,120,123,125,],[62,62,62,-39,-40,-39,-96,62,62,]),'TIMES':([0,6,25,37,38,119,120,123,125,],[63,63,63,-39,-40,-39,-96,63,63,]),'MODULUS':([0,6,25,37,38,119,120,123,125,],[64,64,64,-39,-40,-39,-96,64,64,]),'DIVIDE':([0,6,25,37,38,119,120,123,125,],[65,65,65,-39,-40,-39,-96,65,65,]),'EQUAL_TO':([0,5,6,36,37,38,118,119,128,],[66,66,-37,-38,-39,-40,-37,-39,66,]),'NOT_EQUAL':([0,5,6,36,37,38,118,119,128,],[67,67,-37,-38,-39,-40,-37,-39,67,]),'GREATER_THAN':([0,5,6,36,37,38,118,119,128,],[68,68,-37,-38,-39,-40,-37,-39,68,]),'LESS_THAN':([0,5,6,36,37,38,118,119,128,],[69,69,-37,-38,-39,-40,-37,-39,69,]),'GREATER_EQUAL':([0,5,6,36,37,38,118,119,128,],[70,70,-37,-38,-39,-40,-37,-39,70,]),'LESS_EQUAL':([0,5,6,36,37,38,118,119,128,],[71,71,-37,-38,-39,-40,-37,-39,71,]),'AND':([0,28,36,38,117,118,119,126,],[72,72,-38,-40,-105,-37,-39,72,]),'OR':([0,28,36,38,117,118,119,126,],[73,73,-38,-40,-105,-37,-39,73,]),'NOT':([0,28,36,38,117,118,119,126,],[74,74,-38,-40,-105,-37,-39,74,]),'DECREASE':([0,],[77,]),'CASE':([0,75,147,155,],[78,78,78,-49,]),'DEFAULT':([0,75,147,155,],[79,79,79,-49,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,36,37,38,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,83,84,102,106,107,113,114,117,118,119,120,123,124,126,127,129,133,134,135,136,139,140,150,155,156,159,160,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-38,-39,-40,-90,-69,-70,-71,-72,-73,-77,-78,-79,-80,-81,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-93,-94,-95,-99,-100,-101,-102,-103,-104,-108,-109,-110,-51,-52,-65,-66,-67,-56,-90,-36,-53,-57,-105,-37,-39,-96,-97,-98,-106,-107,-35,-68,-112,-76,-111,-74,-75,-50,-49,-48,-54,-55,]),'SEMICOLON':([7,8,9,10,11,12,15,18,19,20,22,37,38,60,85,86,87,88,89,90,91,93,94,95,96,98,119,133,134,135,136,139,140,145,149,156,157,158,159,160,],[-60,-43,-44,-41,-42,82,-59,-61,-62,-63,-64,-58,-40,-89,82,-59,-60,-61,-62,-63,-64,-41,-42,-43,-44,-58,-39,-68,-112,-76,-111,-74,-75,150,155,-48,161,162,-54,-55,]),'INCREASE':([23,42,],[102,-90,]),'HEADER_LIB':([35,],[107,]),'RPAREN':([36,38,111,117,118,119,126,127,130,131,132,],[-38,-40,133,-105,-37,-39,-106,-107,141,142,143,]),'LPAREN':([39,40,41,42,92,],[108,109,110,111,111,]),'RCURL_BRACE':([75,76,82,83,84,113,150,151,152,153,154,155,161,162,],[-51,-52,-65,-66,-67,-53,-50,156,-45,159,160,-49,-46,-47,]),'COLON':([79,115,],[116,137,]),'BREAK':([82,83,84,138,144,152,],[-65,-66,-67,145,149,157,]),'CONTINUE':([82,83,84,152,],[-65,-66,-67,158,]),'LCURL_BRACE':([141,142,143,],[146,147,148,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ROOT':([0,],[1,]),'PREPROCESOR_DIRECTIVE':([0,],[2,]),'DEFINE':([0,],[3,]),'INCLUDE':([0,],[4,]),'VALUE':([0,80,104,105,108,109,110,],[5,117,128,129,128,128,128,]),'NUMBER':([0,80,81,103,104,105,108,109,110,112,],[6,118,120,125,118,118,118,118,118,136,]),'CONTROL_STRUCTURES':([0,13,83,116,137,146,148,],[7,87,87,87,87,87,87,]),'WHILE_STRUCTURE':([0,13,83,116,137,146,148,],[8,95,95,95,95,95,95,]),'SWITCH_STRUCTURE':([0,13,83,116,137,146,148,],[9,96,96,96,96,96,96,]),'IF_STRUCTURE':([0,13,83,116,137,146,148,],[10,93,93,93,93,93,93,]),'FOR_STRUCTURE':([0,13,83,116,137,146,148,],[11,94,94,94,94,94,94,]),'CODE':([0,13,83,116,137,146,148,],[12,85,85,85,85,85,85,]),'EXPRESSION':([0,13,83,116,137,146,148,],[13,83,83,83,83,83,83,]),'EXPRESSIONS':([0,13,83,116,137,146,148,],[14,84,84,138,144,152,154,]),'FUNCTION':([0,13,83,116,137,146,148,],[15,86,86,86,86,86,86,]),'INTEGER_TYPE':([0,13,83,116,137,146,148,],[16,97,97,97,97,97,97,]),'DECIMAL_TYPE':([0,13,83,116,137,146,148,],[17,99,99,99,99,99,99,]),'INTEGER_DECLARATION':([0,13,83,116,137,146,148,],[18,88,88,88,88,88,88,]),'DECIMAL_DECLARATION':([0,13,83,116,137,146,148,],[19,89,89,89,89,89,89,]),'ASSIGNMENT_DECLARATION':([0,13,83,116,137,146,148,],[20,90,90,90,90,90,90,]),'ASSIGNMENT_OPERATOR':([0,42,92,],[21,112,112,]),'COMENTARIOLEX':([0,13,83,116,137,146,148,],[22,91,91,91,91,91,91,]),'VARIABLELEX':([0,34,77,],[23,105,114,]),'OPERATOR':([0,6,25,123,125,],[24,81,103,103,81,]),'OPERATION':([0,103,],[25,123,]),'OPERATIONS':([0,103,],[26,124,]),'COMPARISON_OPERATOR':([0,5,128,],[27,80,80,]),'COMPARISON':([0,104,108,109,110,],[28,126,126,126,126,]),'COMPARISONS':([0,104,108,109,110,],[29,127,130,131,132,]),'LOGICAL_OPERATOR':([0,28,126,],[30,104,104,]),'SENTENCE':([0,112,],[31,135,]),'SWITCH_BODY':([0,75,147,],[32,113,153,]),'BUCLE':([0,],[33,]),'SWITCH_CASE':([0,75,147,],[75,75,75,]),'SWITCH_DEFAULT':([0,75,147,],[76,76,76,]),'BODY_STRUCTURE':([146,],[151,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ROOT","S'",1,None,None,None),
  ('ROOT -> PREPROCESOR_DIRECTIVE','ROOT',1,'p_ROOT','syntax.py',7),
  ('ROOT -> DEFINE','ROOT',1,'p_ROOT','syntax.py',8),
  ('ROOT -> INCLUDE','ROOT',1,'p_ROOT','syntax.py',9),
  ('ROOT -> VALUE','ROOT',1,'p_ROOT','syntax.py',10),
  ('ROOT -> NUMBER','ROOT',1,'p_ROOT','syntax.py',11),
  ('ROOT -> CONTROL_STRUCTURES','ROOT',1,'p_ROOT','syntax.py',12),
  ('ROOT -> WHILE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',13),
  ('ROOT -> SWITCH_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',14),
  ('ROOT -> IF_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',15),
  ('ROOT -> FOR_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',16),
  ('ROOT -> CODE','ROOT',1,'p_ROOT','syntax.py',17),
  ('ROOT -> EXPRESSION','ROOT',1,'p_ROOT','syntax.py',18),
  ('ROOT -> EXPRESSIONS','ROOT',1,'p_ROOT','syntax.py',19),
  ('ROOT -> FUNCTION','ROOT',1,'p_ROOT','syntax.py',20),
  ('ROOT -> INTEGER_TYPE','ROOT',1,'p_ROOT','syntax.py',21),
  ('ROOT -> DECIMAL_TYPE','ROOT',1,'p_ROOT','syntax.py',22),
  ('ROOT -> INTEGER_DECLARATION','ROOT',1,'p_ROOT','syntax.py',23),
  ('ROOT -> DECIMAL_DECLARATION','ROOT',1,'p_ROOT','syntax.py',24),
  ('ROOT -> ASSIGNMENT_DECLARATION','ROOT',1,'p_ROOT','syntax.py',25),
  ('ROOT -> ASSIGNMENT_OPERATOR','ROOT',1,'p_ROOT','syntax.py',26),
  ('ROOT -> COMENTARIOLEX','ROOT',1,'p_ROOT','syntax.py',27),
  ('ROOT -> VARIABLELEX','ROOT',1,'p_ROOT','syntax.py',28),
  ('ROOT -> OPERATOR','ROOT',1,'p_ROOT','syntax.py',29),
  ('ROOT -> OPERATION','ROOT',1,'p_ROOT','syntax.py',30),
  ('ROOT -> OPERATIONS','ROOT',1,'p_ROOT','syntax.py',31),
  ('ROOT -> COMPARISON_OPERATOR','ROOT',1,'p_ROOT','syntax.py',32),
  ('ROOT -> COMPARISON','ROOT',1,'p_ROOT','syntax.py',33),
  ('ROOT -> COMPARISONS','ROOT',1,'p_ROOT','syntax.py',34),
  ('ROOT -> LOGICAL_OPERATOR','ROOT',1,'p_ROOT','syntax.py',35),
  ('ROOT -> SENTENCE','ROOT',1,'p_ROOT','syntax.py',36),
  ('ROOT -> SWITCH_BODY','ROOT',1,'p_ROOT','syntax.py',37),
  ('ROOT -> BUCLE','ROOT',1,'p_ROOT','syntax.py',38),
  ('PREPROCESOR_DIRECTIVE -> DEFINE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',46),
  ('PREPROCESOR_DIRECTIVE -> INCLUDE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',47),
  ('DEFINE -> PP_DEFINE VARIABLELEX VALUE','DEFINE',3,'p_DEFINE','syntax.py',54),
  ('INCLUDE -> PP_INCLUDE HEADER_LIB','INCLUDE',2,'p_INCLUDE','syntax.py',62),
  ('VALUE -> NUMBER','VALUE',1,'p_VALUE','syntax.py',69),
  ('VALUE -> STRING','VALUE',1,'p_VALUE','syntax.py',70),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','syntax.py',77),
  ('NUMBER -> DECIMAL','NUMBER',1,'p_NUMBER','syntax.py',78),
  ('CONTROL_STRUCTURES -> IF_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',85),
  ('CONTROL_STRUCTURES -> FOR_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',86),
  ('CONTROL_STRUCTURES -> WHILE_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',87),
  ('CONTROL_STRUCTURES -> SWITCH_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',88),
  ('BODY_STRUCTURE -> EXPRESSIONS','BODY_STRUCTURE',1,'p_BODY_STRUCTURE','syntax.py',95),
  ('BODY_STRUCTURE -> EXPRESSIONS BREAK SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',96),
  ('BODY_STRUCTURE -> EXPRESSIONS CONTINUE SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',97),
  ('WHILE_STRUCTURE -> WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE','WHILE_STRUCTURE',7,'p_WHILE_STRUCTURE','syntax.py',104),
  ('SWITCH_CASE -> CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_CASE',6,'p_SWITCH_CASE','syntax.py',111),
  ('SWITCH_DEFAULT -> DEFAULT COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_DEFAULT',5,'p_SWITCH_DEFAULT','syntax.py',117),
  ('SWITCH_BODY -> SWITCH_CASE','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',123),
  ('SWITCH_BODY -> SWITCH_DEFAULT','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',124),
  ('SWITCH_BODY -> SWITCH_CASE SWITCH_BODY','SWITCH_BODY',2,'p_SWITCH_BODY','syntax.py',125),
  ('SWITCH_STRUCTURE -> SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE','SWITCH_STRUCTURE',7,'p_SWITCH_STRUCTURE','syntax.py',131),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE','IF_STRUCTURE',7,'p_IF_STRUCTURE','syntax.py',140),
  ('BUCLE -> VARIABLELEX INCREASE','BUCLE',2,'p_BUCLE','syntax.py',148),
  ('BUCLE -> DECREASE VARIABLELEX','BUCLE',2,'p_BUCLE','syntax.py',149),
  ('FOR_STRUCTURE -> INTEGER','FOR_STRUCTURE',1,'p_FOR_STRUCTURE','syntax.py',157),
  ('CODE -> FUNCTION','CODE',1,'p_CODE','syntax.py',168),
  ('CODE -> CONTROL_STRUCTURES','CODE',1,'p_CODE','syntax.py',169),
  ('CODE -> INTEGER_DECLARATION','CODE',1,'p_CODE','syntax.py',170),
  ('CODE -> DECIMAL_DECLARATION','CODE',1,'p_CODE','syntax.py',171),
  ('CODE -> ASSIGNMENT_DECLARATION','CODE',1,'p_CODE','syntax.py',172),
  ('CODE -> COMENTARIOLEX','CODE',1,'p_CODE','syntax.py',173),
  ('EXPRESSION -> CODE SEMICOLON','EXPRESSION',2,'p_EXPRESSION','syntax.py',180),
  ('EXPRESSIONS -> EXPRESSION','EXPRESSIONS',1,'p_EXPRESSIONS','syntax.py',187),
  ('EXPRESSIONS -> EXPRESSION EXPRESSIONS','EXPRESSIONS',2,'p_EXPRESSIONS','syntax.py',188),
  ('FUNCTION -> VARNAME LPAREN RPAREN','FUNCTION',3,'p_FUNCTION','syntax.py',195),
  ('INTEGER_TYPE -> INT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',202),
  ('INTEGER_TYPE -> SHORT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',203),
  ('INTEGER_TYPE -> LONG','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',204),
  ('DECIMAL_TYPE -> FLOAT','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',211),
  ('DECIMAL_TYPE -> DOUBLE','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',212),
  ('INTEGER_DECLARATION -> INTEGER_TYPE VARNAME EQUAL INTEGER','INTEGER_DECLARATION',4,'p_INTEGER_DECLARATION','syntax.py',219),
  ('DECIMAL_DECLARATION -> DECIMAL_TYPE VARNAME EQUAL DECIMAL','DECIMAL_DECLARATION',4,'p_DECIMAL_DECLARATION','syntax.py',226),
  ('ASSIGNMENT_DECLARATION -> VARNAME ASSIGNMENT_OPERATOR SENTENCE','ASSIGNMENT_DECLARATION',3,'p_ASSIGNMENT_DECLARATION','syntax.py',233),
  ('ASSIGNMENT_OPERATOR -> EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',240),
  ('ASSIGNMENT_OPERATOR -> PLUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',241),
  ('ASSIGNMENT_OPERATOR -> MINUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',242),
  ('ASSIGNMENT_OPERATOR -> DIV_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',243),
  ('ASSIGNMENT_OPERATOR -> TIMES_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',244),
  ('ASSIGNMENT_OPERATOR -> MOD_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',245),
  ('ASSIGNMENT_OPERATOR -> AND_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',246),
  ('ASSIGNMENT_OPERATOR -> OR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',247),
  ('ASSIGNMENT_OPERATOR -> XOR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',248),
  ('ASSIGNMENT_OPERATOR -> COMPLEMENT_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',249),
  ('ASSIGNMENT_OPERATOR -> SHIFTL_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',250),
  ('ASSIGNMENT_OPERATOR -> SHIFTR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',251),
  ('COMENTARIOLEX -> COMMENT','COMENTARIOLEX',1,'p_COMENTARIOLEX','syntax.py',258),
  ('VARIABLELEX -> VARNAME','VARIABLELEX',1,'p_VARIABLELEX','syntax.py',265),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','syntax.py',272),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','syntax.py',273),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','syntax.py',274),
  ('OPERATOR -> MODULUS','OPERATOR',1,'p_OPERATOR','syntax.py',275),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','syntax.py',276),
  ('OPERATION -> NUMBER OPERATOR NUMBER','OPERATION',3,'p_OPERATION','syntax.py',283),
  ('OPERATIONS -> OPERATION','OPERATIONS',1,'p_OPERATIONS','syntax.py',290),
  ('OPERATIONS -> OPERATION OPERATOR OPERATIONS','OPERATIONS',3,'p_OPERATIONS','syntax.py',291),
  ('COMPARISON_OPERATOR -> EQUAL_TO','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',298),
  ('COMPARISON_OPERATOR -> NOT_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',299),
  ('COMPARISON_OPERATOR -> GREATER_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',300),
  ('COMPARISON_OPERATOR -> LESS_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',301),
  ('COMPARISON_OPERATOR -> GREATER_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',302),
  ('COMPARISON_OPERATOR -> LESS_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',303),
  ('COMPARISON -> VALUE COMPARISON_OPERATOR VALUE','COMPARISON',3,'p_COMPARISON','syntax.py',310),
  ('COMPARISONS -> COMPARISON','COMPARISONS',1,'p_COMPARISONS','syntax.py',317),
  ('COMPARISONS -> COMPARISON LOGICAL_OPERATOR COMPARISONS','COMPARISONS',3,'p_COMPARISONS','syntax.py',318),
  ('LOGICAL_OPERATOR -> AND','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',325),
  ('LOGICAL_OPERATOR -> OR','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',326),
  ('LOGICAL_OPERATOR -> NOT','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',327),
  ('SENTENCE -> NUMBER','SENTENCE',1,'p_SENTENCE','syntax.py',334),
  ('SENTENCE -> VARNAME','SENTENCE',1,'p_SENTENCE','syntax.py',335),
]
