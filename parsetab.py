
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_EQUAL AUTO BACKSLASH BACKSPACE BREAK B_AND B_COMPLEMENT B_OR B_XOR CASE CHAR CHARACTER COLON COMMA COMMENT COMPLEMENT_EQUAL CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE DIV_EQUAL DO DOT DOUBLE DOUBLE_APOS DOUBLE_QUOTE ELSE ENUM EQUAL EQUAL_TO EXTERN FF_PAGEBREAK FLOAT FOR FS_CHAR FS_DOUBLE FS_FLOAT FS_HEX FS_INT FS_LONG FS_LONG_DOUBLE FS_OCT FS_OCT_LONG FS_POINTER FS_SCI_NOTATION FS_STRING FS_UNSIGNED_INT FS_UNSIGNED_LONG GOTO GREATER_EQUAL GREATER_THAN HEADER_LIB HTAB IF IGNORE INCREASE INT INTEGER LBRACKET LCURL_BRACE LESS_EQUAL LESS_THAN LONG LPAREN MINUS MINUS_EQUAL MODULUS MOD_EQUAL NEWLINE NOT NOT_EQUAL NULL OR OR_EQUAL PLUS PLUS_EQUAL PP_DATE PP_DEFINE PP_DTMACRO PP_ERROR PP_FILE PP_IF PP_IFDEF PP_IFNDEF PP_INCLUDE PP_LINE PP_PRAGMA PP_STMACRO PP_TIME PP_TIMESTAMP PP_UNDEF QUESTIONMARK RBRACKET RCURL_BRACE REGISTER RETURN RPAREN SEMICOLON SHIFTL_EQUAL SHIFTR_EQUAL SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SINGLE_APOS SINGLE_QUOTE SIZEOF STATIC STRING STRUCT SWITCH TILDE TIMES TIMES_EQUAL TYPEDEF UNION UNSIGNED VARNAME VOID VOLTILE VTAB WHILE XOR_EQUAL\n    ROOT : PREPROCESOR_DIRECTIVE\n        | DEFINE\n        | INCLUDE\n        | VALUE\n        | NUMBER\n        | CONTROL_STRUCTURES\n        | WHILE_STRUCTURE\n        | SWITCH_STRUCTURE\n        | IF_STRUCTURE\n        | FOR_STRUCTURE\n        | CODE\n        | EXPRESSION\n        | EXPRESSIONS\n        | FUNCTION\n        | INTEGER_TYPE\n        | DECIMAL_TYPE\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | ASSIGNMENT_OPERATOR\n        | COMENTARIOLEX\n        | VARIABLELEX\n        | OPERATOR\n        | OPERATION\n        | OPERATIONS\n        | COMPARISON_OPERATOR\n        | COMPARISON\n        | COMPARISONS\n        | LOGICAL_OPERATOR\n        | SENTENCE\n        | SWITCH_BODY\n        | BUCLE\n        | ELSE_STRUCTURE\n        | FUNCTION_ARGUMENTS\n    \n    PREPROCESOR_DIRECTIVE : DEFINE\n                            | INCLUDE\n    \n    DEFINE : PP_DEFINE VARIABLELEX VALUE\n    \n    \n    INCLUDE : PP_INCLUDE HEADER_LIB\n    \n    VALUE : NUMBER \n            | STRING\n    \n    NUMBER : INTEGER\n            | DECIMAL\n    \n    CONTROL_STRUCTURES : IF_STRUCTURE\n                        | FOR_STRUCTURE\n                        | WHILE_STRUCTURE\n                        | SWITCH_STRUCTURE\n    \n    BODY_STRUCTURE : EXPRESSIONS \n                | EXPRESSIONS BREAK SEMICOLON\n                | EXPRESSIONS CONTINUE SEMICOLON \n    \n    WHILE_STRUCTURE : WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE\n    \n    SWITCH_CASE : CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_DEFAULT : DEFAULT COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_BODY : SWITCH_CASE\n                | SWITCH_DEFAULT\n                |  SWITCH_CASE SWITCH_BODY   \n    \n    SWITCH_STRUCTURE : SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE\n    \n    BUCLE : VARIABLELEX INCREASE \n            | DECREASE VARIABLELEX\n    \n    FOR_STRUCTURE : INTEGER\n    \n    IF_STRUCTURE : IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                 | IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE\n    \n    ELSE_STRUCTURE : ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                   | ELSE IF_STRUCTURE\n    \n    CODE : FUNCTION\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | COMENTARIOLEX\n    \n    EXPRESSION : CODE SEMICOLON\n                | CONTROL_STRUCTURES\n    \n    EXPRESSIONS : EXPRESSION\n                | EXPRESSION EXPRESSIONS\n    \n    FUNCTION : VARNAME LPAREN FUNCTION_ARGUMENTS RPAREN\n    \n    FUNCTION_ARGUMENTS : SENTENCES\n                       | COMPARISONS\n    \n    INTEGER_TYPE : INT\n                | SHORT\n                | LONG\n    \n    DECIMAL_TYPE : FLOAT\n                | DOUBLE\n    \n    INTEGER_DECLARATION : INTEGER_TYPE VARNAME EQUAL INTEGER\n    \n    DECIMAL_DECLARATION : DECIMAL_TYPE VARNAME EQUAL DECIMAL\n    \n    ASSIGNMENT_DECLARATION : VARNAME ASSIGNMENT_OPERATOR SENTENCE\n    \n    ASSIGNMENT_OPERATOR : EQUAL\n                        | PLUS_EQUAL\n                        | MINUS_EQUAL\n                        | DIV_EQUAL\n                        | TIMES_EQUAL\n                        | MOD_EQUAL\n                        | AND_EQUAL\n                        | OR_EQUAL\n                        | XOR_EQUAL\n                        | COMPLEMENT_EQUAL\n                        | SHIFTL_EQUAL\n                        | SHIFTR_EQUAL\n    \n    COMENTARIOLEX : COMMENT\n    \n    VARIABLELEX : VARNAME\n    \n    OPERATOR : PLUS\n              | MINUS\n              | TIMES\n              | MODULUS\n              | DIVIDE\n    \n    OPERATION : NUMBER OPERATOR NUMBER\n    \n    OPERATIONS : OPERATION\n                | OPERATION OPERATOR OPERATIONS\n    \n    COMPARISON_OPERATOR : EQUAL_TO\n                        | NOT_EQUAL\n                        | GREATER_THAN\n                        | LESS_THAN\n                        | GREATER_EQUAL\n                        | LESS_EQUAL\n    \n    COMPARISON : VALUE COMPARISON_OPERATOR VALUE\n    \n    COMPARISONS : COMPARISON\n                | COMPARISON LOGICAL_OPERATOR COMPARISONS\n    \n    LOGICAL_OPERATOR : AND\n                    | OR\n                    | NOT\n    \n    SENTENCE : NUMBER\n            | VARNAME\n    \n    SENTENCES : SENTENCE\n                | SENTENCE COMMA SENTENCES\n    '
    
_lr_action_items = {'PP_DEFINE':([0,],[36,]),'PP_INCLUDE':([0,],[37,]),'STRING':([0,68,69,70,71,72,73,74,75,76,84,108,110,111,113,114,115,116,],[38,-106,-107,-108,-109,-110,-111,-115,-116,-117,38,38,38,-97,38,38,38,38,]),'INTEGER':([0,7,8,9,10,11,13,39,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,82,84,85,86,87,90,96,97,98,99,102,107,108,109,110,111,113,114,115,116,117,120,121,123,128,149,157,160,162,170,173,174,177,],[39,-70,-45,-46,-43,-44,102,-59,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-98,-99,-100,-101,-102,-106,-107,-108,-109,-110,-111,-115,-116,-117,122,126,126,-69,102,-70,-43,-44,-45,-46,-59,126,126,126,126,-97,126,126,126,126,126,102,-63,102,151,102,-62,102,102,-50,-56,-60,-61,]),'DECIMAL':([0,50,51,52,53,54,55,56,57,58,59,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,84,85,107,108,109,110,111,113,114,115,116,117,129,],[40,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-98,-99,-100,-101,-102,-106,-107,-108,-109,-110,-111,-115,-116,-117,40,40,40,40,40,40,-97,40,40,40,40,40,152,]),'WHILE':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[41,-70,-45,-46,-43,-44,41,-59,-69,41,-70,-43,-44,-45,-46,-59,41,-63,41,41,-62,41,41,-50,-56,-60,-61,]),'SWITCH':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[42,-70,-45,-46,-43,-44,42,-59,-69,42,-70,-43,-44,-45,-46,-59,42,-63,42,42,-62,42,42,-50,-56,-60,-61,]),'IF':([0,7,8,9,10,11,13,39,80,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[43,-70,-45,-46,-43,-44,43,-59,43,-69,43,-70,-43,-44,-45,-46,-59,43,-63,43,43,-62,43,43,-50,-56,-60,-61,]),'VARNAME':([0,7,8,9,10,11,13,16,17,36,39,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,79,86,87,90,96,97,98,99,101,102,103,109,116,117,120,121,123,149,157,160,162,170,173,174,177,],[44,-70,-45,-46,-43,-44,100,104,105,111,-59,-76,-77,-78,-79,-80,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,111,-69,100,-70,-43,-44,-45,-46,104,-59,105,139,139,139,100,-63,100,100,-62,100,100,-50,-56,-60,-61,]),'INT':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[45,-70,-45,-46,-43,-44,45,-59,-69,45,-70,-43,-44,-45,-46,-59,45,-63,45,45,-62,45,45,-50,-56,-60,-61,]),'SHORT':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[46,-70,-45,-46,-43,-44,46,-59,-69,46,-70,-43,-44,-45,-46,-59,46,-63,46,46,-62,46,46,-50,-56,-60,-61,]),'LONG':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[47,-70,-45,-46,-43,-44,47,-59,-69,47,-70,-43,-44,-45,-46,-59,47,-63,47,47,-62,47,47,-50,-56,-60,-61,]),'FLOAT':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[48,-70,-45,-46,-43,-44,48,-59,-69,48,-70,-43,-44,-45,-46,-59,48,-63,48,48,-62,48,48,-50,-56,-60,-61,]),'DOUBLE':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[49,-70,-45,-46,-43,-44,49,-59,-69,49,-70,-43,-44,-45,-46,-59,49,-63,49,49,-62,49,49,-50,-56,-60,-61,]),'EQUAL':([0,44,100,104,105,],[50,50,50,128,129,]),'PLUS_EQUAL':([0,44,100,],[51,51,51,]),'MINUS_EQUAL':([0,44,100,],[52,52,52,]),'DIV_EQUAL':([0,44,100,],[53,53,53,]),'TIMES_EQUAL':([0,44,100,],[54,54,54,]),'MOD_EQUAL':([0,44,100,],[55,55,55,]),'AND_EQUAL':([0,44,100,],[56,56,56,]),'OR_EQUAL':([0,44,100,],[57,57,57,]),'XOR_EQUAL':([0,44,100,],[58,58,58,]),'COMPLEMENT_EQUAL':([0,44,100,],[59,59,59,]),'SHIFTL_EQUAL':([0,44,100,],[60,60,60,]),'SHIFTR_EQUAL':([0,44,100,],[61,61,61,]),'COMMENT':([0,7,8,9,10,11,13,39,86,87,90,96,97,98,99,102,120,121,123,149,157,160,162,170,173,174,177,],[62,-70,-45,-46,-43,-44,62,-59,-69,62,-70,-43,-44,-45,-46,-59,62,-63,62,62,-62,62,62,-50,-56,-60,-61,]),'PLUS':([0,6,25,39,40,126,127,130,132,],[63,63,63,-41,-42,-41,-103,63,63,]),'MINUS':([0,6,25,39,40,126,127,130,132,],[64,64,64,-41,-42,-41,-103,64,64,]),'TIMES':([0,6,25,39,40,126,127,130,132,],[65,65,65,-41,-42,-41,-103,65,65,]),'MODULUS':([0,6,25,39,40,126,127,130,132,],[66,66,66,-41,-42,-41,-103,66,66,]),'DIVIDE':([0,6,25,39,40,126,127,130,132,],[67,67,67,-41,-42,-41,-103,67,67,]),'EQUAL_TO':([0,5,6,38,39,40,125,126,135,146,],[68,68,-39,-40,-41,-42,-39,-41,68,-39,]),'NOT_EQUAL':([0,5,6,38,39,40,125,126,135,146,],[69,69,-39,-40,-41,-42,-39,-41,69,-39,]),'GREATER_THAN':([0,5,6,38,39,40,125,126,135,146,],[70,70,-39,-40,-41,-42,-39,-41,70,-39,]),'LESS_THAN':([0,5,6,38,39,40,125,126,135,146,],[71,71,-39,-40,-41,-42,-39,-41,71,-39,]),'GREATER_EQUAL':([0,5,6,38,39,40,125,126,135,146,],[72,72,-39,-40,-41,-42,-39,-41,72,-39,]),'LESS_EQUAL':([0,5,6,38,39,40,125,126,135,146,],[73,73,-39,-40,-41,-42,-39,-41,73,-39,]),'AND':([0,28,38,40,124,125,126,133,],[74,74,-40,-42,-112,-39,-41,74,]),'OR':([0,28,38,40,124,125,126,133,],[75,75,-40,-42,-112,-39,-41,75,]),'NOT':([0,28,38,40,124,125,126,133,],[76,76,-40,-42,-112,-39,-41,76,]),'DECREASE':([0,],[79,]),'ELSE':([0,174,],[80,80,]),'CASE':([0,77,161,169,],[82,82,82,-51,]),'DEFAULT':([0,77,161,169,],[83,83,83,-51,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,38,39,40,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,86,87,88,90,96,97,98,99,102,106,111,112,118,119,121,124,125,126,127,130,131,133,134,136,137,138,139,140,147,151,152,156,157,164,169,170,173,174,177,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-40,-41,-42,-97,-76,-77,-78,-79,-80,-84,-85,-86,-87,-88,-89,-90,-91,-92,-93,-94,-95,-96,-98,-99,-100,-101,-102,-106,-107,-108,-109,-110,-111,-115,-116,-117,-53,-54,-74,-69,-71,-72,-70,-43,-44,-45,-46,-59,-57,-97,-38,-55,-58,-63,-112,-39,-41,-103,-104,-105,-113,-114,-120,-121,-118,-119,-37,-83,-81,-82,-73,-62,-52,-51,-50,-56,-60,-61,]),'COMMA':([6,31,39,40,44,126,136,138,139,146,],[-118,109,-41,-42,-119,-41,109,-118,-119,-118,]),'SEMICOLON':([12,15,18,19,20,22,40,62,89,91,92,93,94,95,126,138,139,147,151,152,156,159,163,171,172,],[86,-64,-65,-66,-67,-68,-42,-96,86,-64,-65,-66,-67,-68,-41,-118,-119,-83,-81,-82,-73,164,169,175,176,]),'INCREASE':([23,44,],[106,-97,]),'HEADER_LIB':([37,],[112,]),'RPAREN':([38,40,81,124,125,126,133,134,136,137,138,139,141,142,143,144,145,146,],[-40,-42,-74,-112,-39,-41,-113,-114,-120,-121,-118,-119,153,154,155,156,-75,-118,]),'LPAREN':([41,42,43,44,100,],[113,114,115,116,116,]),'RCURL_BRACE':([77,78,86,87,88,90,96,97,98,99,102,118,121,148,157,164,165,166,167,168,169,170,173,174,175,176,177,],[-53,-54,-69,-71,-72,-70,-43,-44,-45,-46,-59,-55,-63,157,-62,-52,170,-47,173,174,-51,-50,-56,-60,-48,-49,-61,]),'LCURL_BRACE':([80,153,154,155,],[120,160,161,162,]),'COLON':([83,122,],[123,149,]),'BREAK':([86,87,88,90,96,97,98,99,102,121,150,157,158,166,170,173,174,177,],[-69,-71,-72,-70,-43,-44,-45,-46,-59,-63,159,-62,163,171,-50,-56,-60,-61,]),'CONTINUE':([86,87,88,90,96,97,98,99,102,121,157,166,170,173,174,177,],[-69,-71,-72,-70,-43,-44,-45,-46,-59,-63,-62,172,-50,-56,-60,-61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ROOT':([0,],[1,]),'PREPROCESOR_DIRECTIVE':([0,],[2,]),'DEFINE':([0,],[3,]),'INCLUDE':([0,],[4,]),'VALUE':([0,84,108,110,113,114,115,116,],[5,124,135,140,135,135,135,135,]),'NUMBER':([0,84,85,107,108,109,110,113,114,115,116,117,],[6,125,127,132,125,138,125,125,125,125,146,138,]),'CONTROL_STRUCTURES':([0,13,87,120,123,149,160,162,],[7,90,90,90,90,90,90,90,]),'WHILE_STRUCTURE':([0,13,87,120,123,149,160,162,],[8,98,98,98,98,98,98,98,]),'SWITCH_STRUCTURE':([0,13,87,120,123,149,160,162,],[9,99,99,99,99,99,99,99,]),'IF_STRUCTURE':([0,13,80,87,120,123,149,160,162,],[10,96,121,96,96,96,96,96,96,]),'FOR_STRUCTURE':([0,13,87,120,123,149,160,162,],[11,97,97,97,97,97,97,97,]),'CODE':([0,13,87,120,123,149,160,162,],[12,89,89,89,89,89,89,89,]),'EXPRESSION':([0,13,87,120,123,149,160,162,],[13,87,87,87,87,87,87,87,]),'EXPRESSIONS':([0,13,87,120,123,149,160,162,],[14,88,88,148,150,158,166,168,]),'FUNCTION':([0,13,87,120,123,149,160,162,],[15,91,91,91,91,91,91,91,]),'INTEGER_TYPE':([0,13,87,120,123,149,160,162,],[16,101,101,101,101,101,101,101,]),'DECIMAL_TYPE':([0,13,87,120,123,149,160,162,],[17,103,103,103,103,103,103,103,]),'INTEGER_DECLARATION':([0,13,87,120,123,149,160,162,],[18,92,92,92,92,92,92,92,]),'DECIMAL_DECLARATION':([0,13,87,120,123,149,160,162,],[19,93,93,93,93,93,93,93,]),'ASSIGNMENT_DECLARATION':([0,13,87,120,123,149,160,162,],[20,94,94,94,94,94,94,94,]),'ASSIGNMENT_OPERATOR':([0,44,100,],[21,117,117,]),'COMENTARIOLEX':([0,13,87,120,123,149,160,162,],[22,95,95,95,95,95,95,95,]),'VARIABLELEX':([0,36,79,],[23,110,119,]),'OPERATOR':([0,6,25,130,132,],[24,85,107,107,85,]),'OPERATION':([0,107,],[25,130,]),'OPERATIONS':([0,107,],[26,131,]),'COMPARISON_OPERATOR':([0,5,135,],[27,84,84,]),'COMPARISON':([0,108,113,114,115,116,],[28,133,133,133,133,133,]),'COMPARISONS':([0,108,113,114,115,116,],[29,134,141,142,143,145,]),'LOGICAL_OPERATOR':([0,28,133,],[30,108,108,]),'SENTENCE':([0,109,116,117,],[31,136,136,147,]),'SWITCH_BODY':([0,77,161,],[32,118,167,]),'BUCLE':([0,],[33,]),'ELSE_STRUCTURE':([0,174,],[34,177,]),'FUNCTION_ARGUMENTS':([0,116,],[35,144,]),'SWITCH_CASE':([0,77,161,],[77,77,77,]),'SWITCH_DEFAULT':([0,77,161,],[78,78,78,]),'SENTENCES':([0,109,116,],[81,137,81,]),'BODY_STRUCTURE':([160,],[165,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ROOT","S'",1,None,None,None),
  ('ROOT -> PREPROCESOR_DIRECTIVE','ROOT',1,'p_ROOT','syntax.py',7),
  ('ROOT -> DEFINE','ROOT',1,'p_ROOT','syntax.py',8),
  ('ROOT -> INCLUDE','ROOT',1,'p_ROOT','syntax.py',9),
  ('ROOT -> VALUE','ROOT',1,'p_ROOT','syntax.py',10),
  ('ROOT -> NUMBER','ROOT',1,'p_ROOT','syntax.py',11),
  ('ROOT -> CONTROL_STRUCTURES','ROOT',1,'p_ROOT','syntax.py',12),
  ('ROOT -> WHILE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',13),
  ('ROOT -> SWITCH_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',14),
  ('ROOT -> IF_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',15),
  ('ROOT -> FOR_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',16),
  ('ROOT -> CODE','ROOT',1,'p_ROOT','syntax.py',17),
  ('ROOT -> EXPRESSION','ROOT',1,'p_ROOT','syntax.py',18),
  ('ROOT -> EXPRESSIONS','ROOT',1,'p_ROOT','syntax.py',19),
  ('ROOT -> FUNCTION','ROOT',1,'p_ROOT','syntax.py',20),
  ('ROOT -> INTEGER_TYPE','ROOT',1,'p_ROOT','syntax.py',21),
  ('ROOT -> DECIMAL_TYPE','ROOT',1,'p_ROOT','syntax.py',22),
  ('ROOT -> INTEGER_DECLARATION','ROOT',1,'p_ROOT','syntax.py',23),
  ('ROOT -> DECIMAL_DECLARATION','ROOT',1,'p_ROOT','syntax.py',24),
  ('ROOT -> ASSIGNMENT_DECLARATION','ROOT',1,'p_ROOT','syntax.py',25),
  ('ROOT -> ASSIGNMENT_OPERATOR','ROOT',1,'p_ROOT','syntax.py',26),
  ('ROOT -> COMENTARIOLEX','ROOT',1,'p_ROOT','syntax.py',27),
  ('ROOT -> VARIABLELEX','ROOT',1,'p_ROOT','syntax.py',28),
  ('ROOT -> OPERATOR','ROOT',1,'p_ROOT','syntax.py',29),
  ('ROOT -> OPERATION','ROOT',1,'p_ROOT','syntax.py',30),
  ('ROOT -> OPERATIONS','ROOT',1,'p_ROOT','syntax.py',31),
  ('ROOT -> COMPARISON_OPERATOR','ROOT',1,'p_ROOT','syntax.py',32),
  ('ROOT -> COMPARISON','ROOT',1,'p_ROOT','syntax.py',33),
  ('ROOT -> COMPARISONS','ROOT',1,'p_ROOT','syntax.py',34),
  ('ROOT -> LOGICAL_OPERATOR','ROOT',1,'p_ROOT','syntax.py',35),
  ('ROOT -> SENTENCE','ROOT',1,'p_ROOT','syntax.py',36),
  ('ROOT -> SWITCH_BODY','ROOT',1,'p_ROOT','syntax.py',37),
  ('ROOT -> BUCLE','ROOT',1,'p_ROOT','syntax.py',38),
  ('ROOT -> ELSE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',39),
  ('ROOT -> FUNCTION_ARGUMENTS','ROOT',1,'p_ROOT','syntax.py',40),
  ('PREPROCESOR_DIRECTIVE -> DEFINE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',48),
  ('PREPROCESOR_DIRECTIVE -> INCLUDE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',49),
  ('DEFINE -> PP_DEFINE VARIABLELEX VALUE','DEFINE',3,'p_DEFINE','syntax.py',56),
  ('INCLUDE -> PP_INCLUDE HEADER_LIB','INCLUDE',2,'p_INCLUDE','syntax.py',64),
  ('VALUE -> NUMBER','VALUE',1,'p_VALUE','syntax.py',71),
  ('VALUE -> STRING','VALUE',1,'p_VALUE','syntax.py',72),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','syntax.py',79),
  ('NUMBER -> DECIMAL','NUMBER',1,'p_NUMBER','syntax.py',80),
  ('CONTROL_STRUCTURES -> IF_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',87),
  ('CONTROL_STRUCTURES -> FOR_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',88),
  ('CONTROL_STRUCTURES -> WHILE_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',89),
  ('CONTROL_STRUCTURES -> SWITCH_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',90),
  ('BODY_STRUCTURE -> EXPRESSIONS','BODY_STRUCTURE',1,'p_BODY_STRUCTURE','syntax.py',97),
  ('BODY_STRUCTURE -> EXPRESSIONS BREAK SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',98),
  ('BODY_STRUCTURE -> EXPRESSIONS CONTINUE SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',99),
  ('WHILE_STRUCTURE -> WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE','WHILE_STRUCTURE',7,'p_WHILE_STRUCTURE','syntax.py',108),
  ('SWITCH_CASE -> CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_CASE',6,'p_SWITCH_CASE','syntax.py',117),
  ('SWITCH_DEFAULT -> DEFAULT COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_DEFAULT',5,'p_SWITCH_DEFAULT','syntax.py',124),
  ('SWITCH_BODY -> SWITCH_CASE','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',131),
  ('SWITCH_BODY -> SWITCH_DEFAULT','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',132),
  ('SWITCH_BODY -> SWITCH_CASE SWITCH_BODY','SWITCH_BODY',2,'p_SWITCH_BODY','syntax.py',133),
  ('SWITCH_STRUCTURE -> SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE','SWITCH_STRUCTURE',7,'p_SWITCH_STRUCTURE','syntax.py',140),
  ('BUCLE -> VARIABLELEX INCREASE','BUCLE',2,'p_BUCLE','syntax.py',149),
  ('BUCLE -> DECREASE VARIABLELEX','BUCLE',2,'p_BUCLE','syntax.py',150),
  ('FOR_STRUCTURE -> INTEGER','FOR_STRUCTURE',1,'p_FOR_STRUCTURE','syntax.py',158),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE','IF_STRUCTURE',7,'p_IF_STRUCTURE','syntax.py',171),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE','IF_STRUCTURE',8,'p_IF_STRUCTURE','syntax.py',172),
  ('ELSE_STRUCTURE -> ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE','ELSE_STRUCTURE',4,'p_ELSE_STRUCTURE','syntax.py',179),
  ('ELSE_STRUCTURE -> ELSE IF_STRUCTURE','ELSE_STRUCTURE',2,'p_ELSE_STRUCTURE','syntax.py',180),
  ('CODE -> FUNCTION','CODE',1,'p_CODE','syntax.py',187),
  ('CODE -> INTEGER_DECLARATION','CODE',1,'p_CODE','syntax.py',188),
  ('CODE -> DECIMAL_DECLARATION','CODE',1,'p_CODE','syntax.py',189),
  ('CODE -> ASSIGNMENT_DECLARATION','CODE',1,'p_CODE','syntax.py',190),
  ('CODE -> COMENTARIOLEX','CODE',1,'p_CODE','syntax.py',191),
  ('EXPRESSION -> CODE SEMICOLON','EXPRESSION',2,'p_EXPRESSION','syntax.py',198),
  ('EXPRESSION -> CONTROL_STRUCTURES','EXPRESSION',1,'p_EXPRESSION','syntax.py',199),
  ('EXPRESSIONS -> EXPRESSION','EXPRESSIONS',1,'p_EXPRESSIONS','syntax.py',206),
  ('EXPRESSIONS -> EXPRESSION EXPRESSIONS','EXPRESSIONS',2,'p_EXPRESSIONS','syntax.py',207),
  ('FUNCTION -> VARNAME LPAREN FUNCTION_ARGUMENTS RPAREN','FUNCTION',4,'p_FUNCTION','syntax.py',214),
  ('FUNCTION_ARGUMENTS -> SENTENCES','FUNCTION_ARGUMENTS',1,'p_FUNCTION_ARGUMENTS','syntax.py',221),
  ('FUNCTION_ARGUMENTS -> COMPARISONS','FUNCTION_ARGUMENTS',1,'p_FUNCTION_ARGUMENTS','syntax.py',222),
  ('INTEGER_TYPE -> INT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',230),
  ('INTEGER_TYPE -> SHORT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',231),
  ('INTEGER_TYPE -> LONG','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',232),
  ('DECIMAL_TYPE -> FLOAT','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',239),
  ('DECIMAL_TYPE -> DOUBLE','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',240),
  ('INTEGER_DECLARATION -> INTEGER_TYPE VARNAME EQUAL INTEGER','INTEGER_DECLARATION',4,'p_INTEGER_DECLARATION','syntax.py',247),
  ('DECIMAL_DECLARATION -> DECIMAL_TYPE VARNAME EQUAL DECIMAL','DECIMAL_DECLARATION',4,'p_DECIMAL_DECLARATION','syntax.py',254),
  ('ASSIGNMENT_DECLARATION -> VARNAME ASSIGNMENT_OPERATOR SENTENCE','ASSIGNMENT_DECLARATION',3,'p_ASSIGNMENT_DECLARATION','syntax.py',261),
  ('ASSIGNMENT_OPERATOR -> EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',268),
  ('ASSIGNMENT_OPERATOR -> PLUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',269),
  ('ASSIGNMENT_OPERATOR -> MINUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',270),
  ('ASSIGNMENT_OPERATOR -> DIV_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',271),
  ('ASSIGNMENT_OPERATOR -> TIMES_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',272),
  ('ASSIGNMENT_OPERATOR -> MOD_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',273),
  ('ASSIGNMENT_OPERATOR -> AND_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',274),
  ('ASSIGNMENT_OPERATOR -> OR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',275),
  ('ASSIGNMENT_OPERATOR -> XOR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',276),
  ('ASSIGNMENT_OPERATOR -> COMPLEMENT_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',277),
  ('ASSIGNMENT_OPERATOR -> SHIFTL_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',278),
  ('ASSIGNMENT_OPERATOR -> SHIFTR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',279),
  ('COMENTARIOLEX -> COMMENT','COMENTARIOLEX',1,'p_COMENTARIOLEX','syntax.py',286),
  ('VARIABLELEX -> VARNAME','VARIABLELEX',1,'p_VARIABLELEX','syntax.py',293),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','syntax.py',300),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','syntax.py',301),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','syntax.py',302),
  ('OPERATOR -> MODULUS','OPERATOR',1,'p_OPERATOR','syntax.py',303),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','syntax.py',304),
  ('OPERATION -> NUMBER OPERATOR NUMBER','OPERATION',3,'p_OPERATION','syntax.py',311),
  ('OPERATIONS -> OPERATION','OPERATIONS',1,'p_OPERATIONS','syntax.py',318),
  ('OPERATIONS -> OPERATION OPERATOR OPERATIONS','OPERATIONS',3,'p_OPERATIONS','syntax.py',319),
  ('COMPARISON_OPERATOR -> EQUAL_TO','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',326),
  ('COMPARISON_OPERATOR -> NOT_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',327),
  ('COMPARISON_OPERATOR -> GREATER_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',328),
  ('COMPARISON_OPERATOR -> LESS_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',329),
  ('COMPARISON_OPERATOR -> GREATER_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',330),
  ('COMPARISON_OPERATOR -> LESS_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',331),
  ('COMPARISON -> VALUE COMPARISON_OPERATOR VALUE','COMPARISON',3,'p_COMPARISON','syntax.py',338),
  ('COMPARISONS -> COMPARISON','COMPARISONS',1,'p_COMPARISONS','syntax.py',345),
  ('COMPARISONS -> COMPARISON LOGICAL_OPERATOR COMPARISONS','COMPARISONS',3,'p_COMPARISONS','syntax.py',346),
  ('LOGICAL_OPERATOR -> AND','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',353),
  ('LOGICAL_OPERATOR -> OR','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',354),
  ('LOGICAL_OPERATOR -> NOT','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',355),
  ('SENTENCE -> NUMBER','SENTENCE',1,'p_SENTENCE','syntax.py',362),
  ('SENTENCE -> VARNAME','SENTENCE',1,'p_SENTENCE','syntax.py',363),
  ('SENTENCES -> SENTENCE','SENTENCES',1,'p_SENTENCES','syntax.py',370),
  ('SENTENCES -> SENTENCE COMMA SENTENCES','SENTENCES',3,'p_SENTENCES','syntax.py',371),
]
