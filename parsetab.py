
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_EQUAL AUTO BACKSLASH BACKSPACE BREAK B_AND B_COMPLEMENT B_OR B_XOR CASE CHAR CHARACTER COLON COMMA COMMENT COMPLEMENT_EQUAL CONST CONTINUE DECIMAL DECREASE DEFAULT DIVIDE DIV_EQUAL DO DOT DOUBLE DOUBLE_APOS DOUBLE_QUOTE ELSE ENUM EQUAL EQUAL_TO EXTERN FF_PAGEBREAK FLOAT FOR FS_CHAR FS_DOUBLE FS_FLOAT FS_HEX FS_INT FS_LONG FS_LONG_DOUBLE FS_OCT FS_OCT_LONG FS_POINTER FS_SCI_NOTATION FS_STRING FS_UNSIGNED_INT FS_UNSIGNED_LONG GOTO GREATER_EQUAL GREATER_THAN HEADER_LIB HTAB IF IGNORE INCREASE INT INTEGER LBRACKET LCURL_BRACE LESS_EQUAL LESS_THAN LONG LPAREN MINUS MINUS_EQUAL MODULUS MOD_EQUAL NEWLINE NOT NOT_EQUAL NULL OR OR_EQUAL PLUS PLUS_EQUAL PP_DATE PP_DEFINE PP_DTMACRO PP_ERROR PP_FILE PP_IF PP_IFDEF PP_IFNDEF PP_INCLUDE PP_LINE PP_PRAGMA PP_STMACRO PP_TIME PP_TIMESTAMP PP_UNDEF QUESTIONMARK RBRACKET RCURL_BRACE REGISTER RETURN RPAREN SEMICOLON SHIFTL_EQUAL SHIFTR_EQUAL SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SINGLE_APOS SINGLE_QUOTE SIZEOF STATIC STRING STRUCT SWITCH TILDE TIMES TIMES_EQUAL TYPEDEF UNION UNSIGNED VARNAME VOID VOLTILE VTAB WHILE XOR_EQUAL\n    ROOT : PREPROCESOR_DIRECTIVE\n         | DEFINE\n         | INCLUDE\n         | VALUE\n         | NUMBER\n         | CONTROL_STRUCTURES\n         | WHILE_STRUCTURE\n         | SWITCH_STRUCTURE\n         | IF_STRUCTURE\n         | FOR_STRUCTURE\n         | CODE\n         | EXPRESSION\n         | EXPRESSIONS\n         | FUNCTION\n         | INTEGER_TYPE\n         | DECIMAL_TYPE\n         | INTEGER_DECLARATION\n         | DECIMAL_DECLARATION\n         | ASSIGNMENT_DECLARATION\n         | ASSIGNMENT_OPERATOR\n         | COMENTARIOLEX\n         | VARIABLELEX\n         | OPERATOR\n         | OPERATION\n         | OPERATIONS\n         | COMPARISON_OPERATOR\n         | COMPARISON\n         | COMPARISONS\n         | LOGICAL_OPERATOR\n         | SENTENCE\n         | SWITCH_BODY\n         | BUCLE\n         | ELSE_STRUCTURE\n         | FUNCTION_ARGUMENTS\n         | DECLARATIONS\n         | FOR_BODY_STRUCTURE\n         | FOR_ARGUMENTS_STRUCTURE\n    \n    PREPROCESOR_DIRECTIVE : DEFINE\n                          | INCLUDE\n    \n    DEFINE : PP_DEFINE VARIABLELEX VALUE\n    \n    \n    INCLUDE : PP_INCLUDE HEADER_LIB\n    \n    VALUE : NUMBER \n          | STRING\n    \n    NUMBER : INTEGER\n           | DECIMAL\n    \n    CONTROL_STRUCTURES : IF_STRUCTURE\n                       | FOR_STRUCTURE\n                       | WHILE_STRUCTURE\n                       | SWITCH_STRUCTURE\n    \n    BODY_STRUCTURE : EXPRESSIONS \n                   | EXPRESSIONS BREAK SEMICOLON\n                   | EXPRESSIONS CONTINUE SEMICOLON\n    \n    WHILE_STRUCTURE : WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE\n    \n    SWITCH_CASE : CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_DEFAULT : DEFAULT COLON EXPRESSIONS BREAK SEMICOLON\n    \n    SWITCH_BODY : SWITCH_CASE\n                | SWITCH_DEFAULT\n                |  SWITCH_CASE SWITCH_BODY   \n    \n    SWITCH_STRUCTURE : SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE\n    \n    BUCLE : VARIABLELEX INCREASE \n          | DECREASE VARIABLELEX\n    \n    FOR_STRUCTURE : FOR FOR_ARGUMENTS_STRUCTURE LCURL_BRACE FOR_BODY_STRUCTURE RCURL_BRACE\n    \n    FOR_ARGUMENTS_STRUCTURE : LPAREN DECLARATIONS SEMICOLON COMPARISONS SEMICOLON BUCLE RPAREN\n    \n    FOR_BODY_STRUCTURE : EXPRESSIONS\n                       | BREAK SEMICOLON\n                       | CONTINUE SEMICOLON\n    \n    IF_STRUCTURE : IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                 | IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE\n    \n    ELSE_STRUCTURE : ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE\n                   | ELSE IF_STRUCTURE\n    \n    DECLARATIONS : INTEGER_DECLARATION\n                 | DECIMAL_DECLARATION\n    \n    CODE : FUNCTION\n         | INTEGER_DECLARATION\n         | DECIMAL_DECLARATION\n         | ASSIGNMENT_DECLARATION\n         | COMENTARIOLEX\n    \n    EXPRESSION : CODE SEMICOLON\n               | CONTROL_STRUCTURES\n    \n    EXPRESSIONS : EXPRESSION\n                | EXPRESSION EXPRESSIONS\n    \n    FUNCTION : VARNAME LPAREN FUNCTION_ARGUMENTS RPAREN\n    \n    FUNCTION_ARGUMENTS : SENTENCES\n                       | COMPARISONS\n    \n    INTEGER_TYPE : INT\n                 | SHORT\n                 | LONG\n    \n    DECIMAL_TYPE : FLOAT\n                 | DOUBLE\n    \n    INTEGER_DECLARATION : INTEGER_TYPE VARNAME EQUAL INTEGER\n    \n    DECIMAL_DECLARATION : DECIMAL_TYPE VARNAME EQUAL DECIMAL\n    \n    ASSIGNMENT_DECLARATION : VARNAME ASSIGNMENT_OPERATOR SENTENCE\n    \n    ASSIGNMENT_OPERATOR : EQUAL\n                        | PLUS_EQUAL\n                        | MINUS_EQUAL\n                        | DIV_EQUAL\n                        | TIMES_EQUAL\n                        | MOD_EQUAL\n                        | AND_EQUAL\n                        | OR_EQUAL\n                        | XOR_EQUAL\n                        | COMPLEMENT_EQUAL\n                        | SHIFTL_EQUAL\n                        | SHIFTR_EQUAL\n    \n    COMENTARIOLEX : COMMENT\n    \n    VARIABLELEX : VARNAME\n    \n    OPERATOR : PLUS\n             | MINUS\n             | TIMES\n             | MODULUS\n             | DIVIDE\n    \n    OPERATION : NUMBER OPERATOR NUMBER\n    \n    OPERATIONS : OPERATION\n                | OPERATION OPERATOR OPERATIONS\n    \n    COMPARISON_OPERATOR : EQUAL_TO\n                        | NOT_EQUAL\n                        | GREATER_THAN\n                        | LESS_THAN\n                        | GREATER_EQUAL\n                        | LESS_EQUAL\n    \n    COMPARISON : VALUE COMPARISON_OPERATOR VALUE\n               | SENTENCE COMPARISON_OPERATOR SENTENCE\n    \n    COMPARISONS : COMPARISON\n                | COMPARISON LOGICAL_OPERATOR COMPARISONS\n    \n    LOGICAL_OPERATOR : AND\n                     | OR\n                     | NOT\n    \n    SENTENCE : NUMBER\n             | VARNAME\n    \n    SENTENCES : SENTENCE\n              | SENTENCE COMMA SENTENCES\n    '
    
_lr_action_items = {'PP_DEFINE':([0,],[39,]),'PP_INCLUDE':([0,],[40,]),'STRING':([0,73,74,75,76,77,78,79,80,81,91,114,117,118,120,124,125,127,157,],[41,-115,-116,-117,-118,-119,-120,-125,-126,-127,41,41,41,-106,41,41,41,41,41,]),'INTEGER':([0,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,89,91,92,113,114,115,116,117,118,120,124,125,127,128,140,157,],[42,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-107,-108,-109,-110,-111,-115,-116,-117,-118,-119,-120,-125,-126,-127,135,42,42,42,42,42,42,42,-106,42,42,42,42,42,169,42,]),'DECIMAL':([0,55,56,57,58,59,60,61,62,63,64,65,66,68,69,70,71,72,73,74,75,76,77,78,79,80,81,91,92,113,114,115,116,117,118,120,124,125,127,128,141,157,],[43,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-107,-108,-109,-110,-111,-115,-116,-117,-118,-119,-120,-125,-126,-127,43,43,43,43,43,43,43,-106,43,43,43,43,43,170,43,]),'WHILE':([0,7,8,9,10,11,13,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[44,-79,-48,-49,-46,-47,44,-78,44,-79,-46,-47,-48,-49,44,-70,44,44,44,-69,44,44,-62,-53,-59,-67,-68,]),'SWITCH':([0,7,8,9,10,11,13,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[46,-79,-48,-49,-46,-47,46,-78,46,-79,-46,-47,-48,-49,46,-70,46,46,46,-69,46,46,-62,-53,-59,-67,-68,]),'IF':([0,7,8,9,10,11,13,85,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[47,-79,-48,-49,-46,-47,47,47,-78,47,-79,-46,-47,-48,-49,47,-70,47,47,47,-69,47,47,-62,-53,-59,-67,-68,]),'FOR':([0,7,8,9,10,11,13,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[48,-79,-48,-49,-46,-47,48,-78,48,-79,-46,-47,-48,-49,48,-70,48,48,48,-69,48,48,-62,-53,-59,-67,-68,]),'VARNAME':([0,7,8,9,10,11,13,16,17,39,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,74,75,76,77,78,79,80,81,84,93,94,97,103,104,105,106,108,109,114,115,116,120,124,125,127,128,131,132,136,157,160,167,178,181,182,184,185,195,199,200,203,],[49,-79,-48,-49,-46,-47,107,110,111,118,-85,-86,-87,-88,-89,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-115,-116,-117,-118,-119,-120,-125,-126,-127,118,-78,107,-79,-46,-47,-48,-49,110,111,150,150,150,150,150,150,150,150,107,-70,107,150,107,107,-69,107,118,107,-62,-53,-59,-67,-68,]),'INT':([0,7,8,9,10,11,13,45,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[50,-79,-48,-49,-46,-47,50,50,-78,50,-79,-46,-47,-48,-49,50,-70,50,50,50,-69,50,50,-62,-53,-59,-67,-68,]),'SHORT':([0,7,8,9,10,11,13,45,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[51,-79,-48,-49,-46,-47,51,51,-78,51,-79,-46,-47,-48,-49,51,-70,51,51,51,-69,51,51,-62,-53,-59,-67,-68,]),'LONG':([0,7,8,9,10,11,13,45,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[52,-79,-48,-49,-46,-47,52,52,-78,52,-79,-46,-47,-48,-49,52,-70,52,52,52,-69,52,52,-62,-53,-59,-67,-68,]),'FLOAT':([0,7,8,9,10,11,13,45,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[53,-79,-48,-49,-46,-47,53,53,-78,53,-79,-46,-47,-48,-49,53,-70,53,53,53,-69,53,53,-62,-53,-59,-67,-68,]),'DOUBLE':([0,7,8,9,10,11,13,45,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[54,-79,-48,-49,-46,-47,54,54,-78,54,-79,-46,-47,-48,-49,54,-70,54,54,54,-69,54,54,-62,-53,-59,-67,-68,]),'EQUAL':([0,49,107,110,111,],[55,55,55,140,141,]),'PLUS_EQUAL':([0,49,107,],[56,56,56,]),'MINUS_EQUAL':([0,49,107,],[57,57,57,]),'DIV_EQUAL':([0,49,107,],[58,58,58,]),'TIMES_EQUAL':([0,49,107,],[59,59,59,]),'MOD_EQUAL':([0,49,107,],[60,60,60,]),'AND_EQUAL':([0,49,107,],[61,61,61,]),'OR_EQUAL':([0,49,107,],[62,62,62,]),'XOR_EQUAL':([0,49,107,],[63,63,63,]),'COMPLEMENT_EQUAL':([0,49,107,],[64,64,64,]),'SHIFTL_EQUAL':([0,49,107,],[65,65,65,]),'SHIFTR_EQUAL':([0,49,107,],[66,66,66,]),'COMMENT':([0,7,8,9,10,11,13,93,94,97,103,104,105,106,131,132,136,160,167,178,181,184,185,195,199,200,203,],[67,-79,-48,-49,-46,-47,67,-78,67,-79,-46,-47,-48,-49,67,-70,67,67,67,-69,67,67,-62,-53,-59,-67,-68,]),'PLUS':([0,6,25,42,43,139,142,144,],[68,68,68,-44,-45,-112,68,68,]),'MINUS':([0,6,25,42,43,139,142,144,],[69,69,69,-44,-45,-112,69,69,]),'TIMES':([0,6,25,42,43,139,142,144,],[70,70,70,-44,-45,-112,70,70,]),'MODULUS':([0,6,25,42,43,139,142,144,],[71,71,71,-44,-45,-112,71,71,]),'DIVIDE':([0,6,25,42,43,139,142,144,],[72,72,72,-44,-45,-112,72,72,]),'EQUAL_TO':([0,5,6,31,41,42,43,49,147,148,149,150,163,164,],[73,73,-42,73,-43,-44,-45,-129,73,73,-42,-129,73,-42,]),'NOT_EQUAL':([0,5,6,31,41,42,43,49,147,148,149,150,163,164,],[74,74,-42,74,-43,-44,-45,-129,74,74,-42,-129,74,-42,]),'GREATER_THAN':([0,5,6,31,41,42,43,49,147,148,149,150,163,164,],[75,75,-42,75,-43,-44,-45,-129,75,75,-42,-129,75,-42,]),'LESS_THAN':([0,5,6,31,41,42,43,49,147,148,149,150,163,164,],[76,76,-42,76,-43,-44,-45,-129,76,76,-42,-129,76,-42,]),'GREATER_EQUAL':([0,5,6,31,41,42,43,49,147,148,149,150,163,164,],[77,77,-42,77,-43,-44,-45,-129,77,77,-42,-129,77,-42,]),'LESS_EQUAL':([0,5,6,31,41,42,43,49,147,148,149,150,163,164,],[78,78,-42,78,-43,-44,-45,-129,78,78,-42,-129,78,-42,]),'AND':([0,28,41,42,43,137,138,145,150,151,152,],[79,79,-43,-44,-45,-121,-42,79,-129,-122,-128,]),'OR':([0,28,41,42,43,137,138,145,150,151,152,],[80,80,-43,-44,-45,-121,-42,80,-129,-122,-128,]),'NOT':([0,28,41,42,43,137,138,145,150,151,152,],[81,81,-43,-44,-45,-121,-42,81,-129,-122,-128,]),'DECREASE':([0,182,],[84,84,]),'ELSE':([0,200,],[85,85,]),'BREAK':([0,93,94,95,97,103,104,105,106,132,160,168,178,179,185,189,195,199,200,203,],[87,-78,-80,-81,-79,-46,-47,-48,-49,-70,87,180,-69,186,-62,196,-53,-59,-67,-68,]),'CONTINUE':([0,93,94,95,97,103,104,105,106,132,160,178,185,189,195,199,200,203,],[88,-78,-80,-81,-79,-46,-47,-48,-49,-70,88,-69,-62,197,-53,-59,-67,-68,]),'LPAREN':([0,44,46,47,48,49,107,],[45,120,124,125,45,127,127,]),'CASE':([0,82,183,194,],[89,89,89,-54,]),'DEFAULT':([0,82,183,194,],[90,90,90,-54,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,41,42,43,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,93,94,95,97,103,104,105,106,112,118,119,129,130,132,133,134,137,138,139,142,143,145,146,150,151,152,153,154,155,165,169,170,177,178,185,187,194,195,198,199,200,203,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,-43,-44,-45,-106,-85,-86,-87,-88,-89,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,-103,-104,-105,-107,-108,-109,-110,-111,-115,-116,-117,-118,-119,-120,-125,-126,-127,-56,-57,-83,-78,-80,-81,-79,-46,-47,-48,-49,-60,-106,-41,-58,-61,-70,-65,-66,-121,-42,-112,-113,-114,-123,-124,-129,-122,-128,-130,-131,-40,-92,-90,-91,-82,-69,-62,-55,-54,-53,-63,-59,-67,-68,]),'COMMA':([6,31,42,43,49,150,152,153,163,164,],[-128,116,-44,-45,-129,-129,-128,116,116,-128,]),'SEMICOLON':([12,15,18,19,20,22,41,42,43,67,87,88,96,98,99,100,101,102,121,122,123,137,138,145,146,150,151,152,165,169,170,172,177,180,186,196,197,],[93,-73,-74,-75,-76,-77,-43,-44,-45,-105,133,134,93,-73,-74,-75,-76,-77,157,-71,-72,-121,-42,-123,-124,-129,-122,-128,-92,-90,-91,182,-82,187,194,201,202,]),'INCREASE':([23,49,118,191,],[112,-106,-106,112,]),'HEADER_LIB':([40,],[119,]),'RPAREN':([41,42,43,86,112,118,130,137,138,145,146,150,151,152,153,154,156,158,159,161,162,163,164,190,],[-43,-44,-45,-83,-60,-106,-61,-121,-42,-123,-124,-129,-122,-128,-130,-131,171,173,174,177,-84,-130,-128,198,]),'RCURL_BRACE':([82,83,93,94,95,97,103,104,105,106,129,132,133,134,166,175,176,178,185,187,188,189,192,193,194,195,199,200,201,202,203,],[-56,-57,-78,-80,-81,-79,-46,-47,-48,-49,-58,-70,-65,-66,178,185,-64,-69,-62,-55,195,-50,199,200,-54,-53,-59,-67,-51,-52,-68,]),'LCURL_BRACE':([85,126,171,173,174,198,],[131,160,181,183,184,-63,]),'COLON':([90,135,],[136,167,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ROOT':([0,],[1,]),'PREPROCESOR_DIRECTIVE':([0,],[2,]),'DEFINE':([0,],[3,]),'INCLUDE':([0,],[4,]),'VALUE':([0,91,114,117,120,124,125,127,157,],[5,137,147,155,147,147,147,147,147,]),'NUMBER':([0,91,92,113,114,115,116,117,120,124,125,127,128,157,],[6,138,139,144,149,152,152,138,149,149,149,164,152,149,]),'CONTROL_STRUCTURES':([0,13,94,131,136,160,167,181,184,],[7,97,97,97,97,97,97,97,97,]),'WHILE_STRUCTURE':([0,13,94,131,136,160,167,181,184,],[8,105,105,105,105,105,105,105,105,]),'SWITCH_STRUCTURE':([0,13,94,131,136,160,167,181,184,],[9,106,106,106,106,106,106,106,106,]),'IF_STRUCTURE':([0,13,85,94,131,136,160,167,181,184,],[10,103,132,103,103,103,103,103,103,103,]),'FOR_STRUCTURE':([0,13,94,131,136,160,167,181,184,],[11,104,104,104,104,104,104,104,104,]),'CODE':([0,13,94,131,136,160,167,181,184,],[12,96,96,96,96,96,96,96,96,]),'EXPRESSION':([0,13,94,131,136,160,167,181,184,],[13,94,94,94,94,94,94,94,94,]),'EXPRESSIONS':([0,13,94,131,136,160,167,181,184,],[14,95,95,166,168,176,179,189,193,]),'FUNCTION':([0,13,94,131,136,160,167,181,184,],[15,98,98,98,98,98,98,98,98,]),'INTEGER_TYPE':([0,13,45,94,131,136,160,167,181,184,],[16,108,108,108,108,108,108,108,108,108,]),'DECIMAL_TYPE':([0,13,45,94,131,136,160,167,181,184,],[17,109,109,109,109,109,109,109,109,109,]),'INTEGER_DECLARATION':([0,13,45,94,131,136,160,167,181,184,],[18,99,122,99,99,99,99,99,99,99,]),'DECIMAL_DECLARATION':([0,13,45,94,131,136,160,167,181,184,],[19,100,123,100,100,100,100,100,100,100,]),'ASSIGNMENT_DECLARATION':([0,13,94,131,136,160,167,181,184,],[20,101,101,101,101,101,101,101,101,]),'ASSIGNMENT_OPERATOR':([0,49,107,],[21,128,128,]),'COMENTARIOLEX':([0,13,94,131,136,160,167,181,184,],[22,102,102,102,102,102,102,102,102,]),'VARIABLELEX':([0,39,84,182,],[23,117,130,191,]),'OPERATOR':([0,6,25,142,144,],[24,92,113,113,92,]),'OPERATION':([0,113,],[25,142,]),'OPERATIONS':([0,113,],[26,143,]),'COMPARISON_OPERATOR':([0,5,31,147,148,163,],[27,91,115,91,115,115,]),'COMPARISON':([0,114,120,124,125,127,157,],[28,145,145,145,145,145,145,]),'COMPARISONS':([0,114,120,124,125,127,157,],[29,146,156,158,159,162,172,]),'LOGICAL_OPERATOR':([0,28,145,],[30,114,114,]),'SENTENCE':([0,114,115,116,120,124,125,127,128,157,],[31,148,151,153,148,148,148,163,165,148,]),'SWITCH_BODY':([0,82,183,],[32,129,192,]),'BUCLE':([0,182,],[33,190,]),'ELSE_STRUCTURE':([0,200,],[34,203,]),'FUNCTION_ARGUMENTS':([0,127,],[35,161,]),'DECLARATIONS':([0,45,],[36,121,]),'FOR_BODY_STRUCTURE':([0,160,],[37,175,]),'FOR_ARGUMENTS_STRUCTURE':([0,48,],[38,126,]),'SWITCH_CASE':([0,82,183,],[82,82,82,]),'SWITCH_DEFAULT':([0,82,183,],[83,83,83,]),'SENTENCES':([0,116,127,],[86,154,86,]),'BODY_STRUCTURE':([181,],[188,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ROOT","S'",1,None,None,None),
  ('ROOT -> PREPROCESOR_DIRECTIVE','ROOT',1,'p_ROOT','syntax.py',7),
  ('ROOT -> DEFINE','ROOT',1,'p_ROOT','syntax.py',8),
  ('ROOT -> INCLUDE','ROOT',1,'p_ROOT','syntax.py',9),
  ('ROOT -> VALUE','ROOT',1,'p_ROOT','syntax.py',10),
  ('ROOT -> NUMBER','ROOT',1,'p_ROOT','syntax.py',11),
  ('ROOT -> CONTROL_STRUCTURES','ROOT',1,'p_ROOT','syntax.py',12),
  ('ROOT -> WHILE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',13),
  ('ROOT -> SWITCH_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',14),
  ('ROOT -> IF_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',15),
  ('ROOT -> FOR_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',16),
  ('ROOT -> CODE','ROOT',1,'p_ROOT','syntax.py',17),
  ('ROOT -> EXPRESSION','ROOT',1,'p_ROOT','syntax.py',18),
  ('ROOT -> EXPRESSIONS','ROOT',1,'p_ROOT','syntax.py',19),
  ('ROOT -> FUNCTION','ROOT',1,'p_ROOT','syntax.py',20),
  ('ROOT -> INTEGER_TYPE','ROOT',1,'p_ROOT','syntax.py',21),
  ('ROOT -> DECIMAL_TYPE','ROOT',1,'p_ROOT','syntax.py',22),
  ('ROOT -> INTEGER_DECLARATION','ROOT',1,'p_ROOT','syntax.py',23),
  ('ROOT -> DECIMAL_DECLARATION','ROOT',1,'p_ROOT','syntax.py',24),
  ('ROOT -> ASSIGNMENT_DECLARATION','ROOT',1,'p_ROOT','syntax.py',25),
  ('ROOT -> ASSIGNMENT_OPERATOR','ROOT',1,'p_ROOT','syntax.py',26),
  ('ROOT -> COMENTARIOLEX','ROOT',1,'p_ROOT','syntax.py',27),
  ('ROOT -> VARIABLELEX','ROOT',1,'p_ROOT','syntax.py',28),
  ('ROOT -> OPERATOR','ROOT',1,'p_ROOT','syntax.py',29),
  ('ROOT -> OPERATION','ROOT',1,'p_ROOT','syntax.py',30),
  ('ROOT -> OPERATIONS','ROOT',1,'p_ROOT','syntax.py',31),
  ('ROOT -> COMPARISON_OPERATOR','ROOT',1,'p_ROOT','syntax.py',32),
  ('ROOT -> COMPARISON','ROOT',1,'p_ROOT','syntax.py',33),
  ('ROOT -> COMPARISONS','ROOT',1,'p_ROOT','syntax.py',34),
  ('ROOT -> LOGICAL_OPERATOR','ROOT',1,'p_ROOT','syntax.py',35),
  ('ROOT -> SENTENCE','ROOT',1,'p_ROOT','syntax.py',36),
  ('ROOT -> SWITCH_BODY','ROOT',1,'p_ROOT','syntax.py',37),
  ('ROOT -> BUCLE','ROOT',1,'p_ROOT','syntax.py',38),
  ('ROOT -> ELSE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',39),
  ('ROOT -> FUNCTION_ARGUMENTS','ROOT',1,'p_ROOT','syntax.py',40),
  ('ROOT -> DECLARATIONS','ROOT',1,'p_ROOT','syntax.py',41),
  ('ROOT -> FOR_BODY_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',42),
  ('ROOT -> FOR_ARGUMENTS_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',43),
  ('PREPROCESOR_DIRECTIVE -> DEFINE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',51),
  ('PREPROCESOR_DIRECTIVE -> INCLUDE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',52),
  ('DEFINE -> PP_DEFINE VARIABLELEX VALUE','DEFINE',3,'p_DEFINE','syntax.py',59),
  ('INCLUDE -> PP_INCLUDE HEADER_LIB','INCLUDE',2,'p_INCLUDE','syntax.py',67),
  ('VALUE -> NUMBER','VALUE',1,'p_VALUE','syntax.py',74),
  ('VALUE -> STRING','VALUE',1,'p_VALUE','syntax.py',75),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','syntax.py',82),
  ('NUMBER -> DECIMAL','NUMBER',1,'p_NUMBER','syntax.py',83),
  ('CONTROL_STRUCTURES -> IF_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',90),
  ('CONTROL_STRUCTURES -> FOR_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',91),
  ('CONTROL_STRUCTURES -> WHILE_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',92),
  ('CONTROL_STRUCTURES -> SWITCH_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',93),
  ('BODY_STRUCTURE -> EXPRESSIONS','BODY_STRUCTURE',1,'p_BODY_STRUCTURE','syntax.py',100),
  ('BODY_STRUCTURE -> EXPRESSIONS BREAK SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',101),
  ('BODY_STRUCTURE -> EXPRESSIONS CONTINUE SEMICOLON','BODY_STRUCTURE',3,'p_BODY_STRUCTURE','syntax.py',102),
  ('WHILE_STRUCTURE -> WHILE LPAREN COMPARISONS RPAREN LCURL_BRACE BODY_STRUCTURE RCURL_BRACE','WHILE_STRUCTURE',7,'p_WHILE_STRUCTURE','syntax.py',111),
  ('SWITCH_CASE -> CASE INTEGER COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_CASE',6,'p_SWITCH_CASE','syntax.py',120),
  ('SWITCH_DEFAULT -> DEFAULT COLON EXPRESSIONS BREAK SEMICOLON','SWITCH_DEFAULT',5,'p_SWITCH_DEFAULT','syntax.py',127),
  ('SWITCH_BODY -> SWITCH_CASE','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',134),
  ('SWITCH_BODY -> SWITCH_DEFAULT','SWITCH_BODY',1,'p_SWITCH_BODY','syntax.py',135),
  ('SWITCH_BODY -> SWITCH_CASE SWITCH_BODY','SWITCH_BODY',2,'p_SWITCH_BODY','syntax.py',136),
  ('SWITCH_STRUCTURE -> SWITCH LPAREN COMPARISONS RPAREN LCURL_BRACE SWITCH_BODY RCURL_BRACE','SWITCH_STRUCTURE',7,'p_SWITCH_STRUCTURE','syntax.py',143),
  ('BUCLE -> VARIABLELEX INCREASE','BUCLE',2,'p_BUCLE','syntax.py',152),
  ('BUCLE -> DECREASE VARIABLELEX','BUCLE',2,'p_BUCLE','syntax.py',153),
  ('FOR_STRUCTURE -> FOR FOR_ARGUMENTS_STRUCTURE LCURL_BRACE FOR_BODY_STRUCTURE RCURL_BRACE','FOR_STRUCTURE',5,'p_FOR_STRUCTURE','syntax.py',161),
  ('FOR_ARGUMENTS_STRUCTURE -> LPAREN DECLARATIONS SEMICOLON COMPARISONS SEMICOLON BUCLE RPAREN','FOR_ARGUMENTS_STRUCTURE',7,'p_FOR_ARGUMENTS_STRUCTURE','syntax.py',168),
  ('FOR_BODY_STRUCTURE -> EXPRESSIONS','FOR_BODY_STRUCTURE',1,'p_FOR_BODY_STRUCTURE','syntax.py',175),
  ('FOR_BODY_STRUCTURE -> BREAK SEMICOLON','FOR_BODY_STRUCTURE',2,'p_FOR_BODY_STRUCTURE','syntax.py',176),
  ('FOR_BODY_STRUCTURE -> CONTINUE SEMICOLON','FOR_BODY_STRUCTURE',2,'p_FOR_BODY_STRUCTURE','syntax.py',177),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE','IF_STRUCTURE',7,'p_IF_STRUCTURE','syntax.py',190),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE ELSE_STRUCTURE','IF_STRUCTURE',8,'p_IF_STRUCTURE','syntax.py',191),
  ('ELSE_STRUCTURE -> ELSE LCURL_BRACE EXPRESSIONS RCURL_BRACE','ELSE_STRUCTURE',4,'p_ELSE_STRUCTURE','syntax.py',198),
  ('ELSE_STRUCTURE -> ELSE IF_STRUCTURE','ELSE_STRUCTURE',2,'p_ELSE_STRUCTURE','syntax.py',199),
  ('DECLARATIONS -> INTEGER_DECLARATION','DECLARATIONS',1,'p_DECLARATIONS','syntax.py',206),
  ('DECLARATIONS -> DECIMAL_DECLARATION','DECLARATIONS',1,'p_DECLARATIONS','syntax.py',207),
  ('CODE -> FUNCTION','CODE',1,'p_CODE','syntax.py',214),
  ('CODE -> INTEGER_DECLARATION','CODE',1,'p_CODE','syntax.py',215),
  ('CODE -> DECIMAL_DECLARATION','CODE',1,'p_CODE','syntax.py',216),
  ('CODE -> ASSIGNMENT_DECLARATION','CODE',1,'p_CODE','syntax.py',217),
  ('CODE -> COMENTARIOLEX','CODE',1,'p_CODE','syntax.py',218),
  ('EXPRESSION -> CODE SEMICOLON','EXPRESSION',2,'p_EXPRESSION','syntax.py',225),
  ('EXPRESSION -> CONTROL_STRUCTURES','EXPRESSION',1,'p_EXPRESSION','syntax.py',226),
  ('EXPRESSIONS -> EXPRESSION','EXPRESSIONS',1,'p_EXPRESSIONS','syntax.py',233),
  ('EXPRESSIONS -> EXPRESSION EXPRESSIONS','EXPRESSIONS',2,'p_EXPRESSIONS','syntax.py',234),
  ('FUNCTION -> VARNAME LPAREN FUNCTION_ARGUMENTS RPAREN','FUNCTION',4,'p_FUNCTION','syntax.py',241),
  ('FUNCTION_ARGUMENTS -> SENTENCES','FUNCTION_ARGUMENTS',1,'p_FUNCTION_ARGUMENTS','syntax.py',248),
  ('FUNCTION_ARGUMENTS -> COMPARISONS','FUNCTION_ARGUMENTS',1,'p_FUNCTION_ARGUMENTS','syntax.py',249),
  ('INTEGER_TYPE -> INT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',256),
  ('INTEGER_TYPE -> SHORT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',257),
  ('INTEGER_TYPE -> LONG','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',258),
  ('DECIMAL_TYPE -> FLOAT','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',265),
  ('DECIMAL_TYPE -> DOUBLE','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',266),
  ('INTEGER_DECLARATION -> INTEGER_TYPE VARNAME EQUAL INTEGER','INTEGER_DECLARATION',4,'p_INTEGER_DECLARATION','syntax.py',273),
  ('DECIMAL_DECLARATION -> DECIMAL_TYPE VARNAME EQUAL DECIMAL','DECIMAL_DECLARATION',4,'p_DECIMAL_DECLARATION','syntax.py',280),
  ('ASSIGNMENT_DECLARATION -> VARNAME ASSIGNMENT_OPERATOR SENTENCE','ASSIGNMENT_DECLARATION',3,'p_ASSIGNMENT_DECLARATION','syntax.py',287),
  ('ASSIGNMENT_OPERATOR -> EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',294),
  ('ASSIGNMENT_OPERATOR -> PLUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',295),
  ('ASSIGNMENT_OPERATOR -> MINUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',296),
  ('ASSIGNMENT_OPERATOR -> DIV_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',297),
  ('ASSIGNMENT_OPERATOR -> TIMES_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',298),
  ('ASSIGNMENT_OPERATOR -> MOD_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',299),
  ('ASSIGNMENT_OPERATOR -> AND_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',300),
  ('ASSIGNMENT_OPERATOR -> OR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',301),
  ('ASSIGNMENT_OPERATOR -> XOR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',302),
  ('ASSIGNMENT_OPERATOR -> COMPLEMENT_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',303),
  ('ASSIGNMENT_OPERATOR -> SHIFTL_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',304),
  ('ASSIGNMENT_OPERATOR -> SHIFTR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',305),
  ('COMENTARIOLEX -> COMMENT','COMENTARIOLEX',1,'p_COMENTARIOLEX','syntax.py',312),
  ('VARIABLELEX -> VARNAME','VARIABLELEX',1,'p_VARIABLELEX','syntax.py',319),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','syntax.py',326),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','syntax.py',327),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','syntax.py',328),
  ('OPERATOR -> MODULUS','OPERATOR',1,'p_OPERATOR','syntax.py',329),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','syntax.py',330),
  ('OPERATION -> NUMBER OPERATOR NUMBER','OPERATION',3,'p_OPERATION','syntax.py',337),
  ('OPERATIONS -> OPERATION','OPERATIONS',1,'p_OPERATIONS','syntax.py',344),
  ('OPERATIONS -> OPERATION OPERATOR OPERATIONS','OPERATIONS',3,'p_OPERATIONS','syntax.py',345),
  ('COMPARISON_OPERATOR -> EQUAL_TO','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',352),
  ('COMPARISON_OPERATOR -> NOT_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',353),
  ('COMPARISON_OPERATOR -> GREATER_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',354),
  ('COMPARISON_OPERATOR -> LESS_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',355),
  ('COMPARISON_OPERATOR -> GREATER_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',356),
  ('COMPARISON_OPERATOR -> LESS_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',357),
  ('COMPARISON -> VALUE COMPARISON_OPERATOR VALUE','COMPARISON',3,'p_COMPARISON','syntax.py',364),
  ('COMPARISON -> SENTENCE COMPARISON_OPERATOR SENTENCE','COMPARISON',3,'p_COMPARISON','syntax.py',365),
  ('COMPARISONS -> COMPARISON','COMPARISONS',1,'p_COMPARISONS','syntax.py',372),
  ('COMPARISONS -> COMPARISON LOGICAL_OPERATOR COMPARISONS','COMPARISONS',3,'p_COMPARISONS','syntax.py',373),
  ('LOGICAL_OPERATOR -> AND','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',380),
  ('LOGICAL_OPERATOR -> OR','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',381),
  ('LOGICAL_OPERATOR -> NOT','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',382),
  ('SENTENCE -> NUMBER','SENTENCE',1,'p_SENTENCE','syntax.py',389),
  ('SENTENCE -> VARNAME','SENTENCE',1,'p_SENTENCE','syntax.py',390),
  ('SENTENCES -> SENTENCE','SENTENCES',1,'p_SENTENCES','syntax.py',397),
  ('SENTENCES -> SENTENCE COMMA SENTENCES','SENTENCES',3,'p_SENTENCES','syntax.py',398),
]
