
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_EQUAL AUTO BACKSLASH BACKSPACE BREAK B_AND B_COMPLEMENT B_OR B_XOR CASE CHAR CHARACTER COLON COMMA COMMENT COMPLEMENT_EQUAL CONST CONTINUE DECIMAL DEFAULT DIVIDE DIV_EQUAL DO DOT DOUBLE DOUBLE_APOS DOUBLE_QUOTE ELSE ELSEIF ENUM EQUAL EQUAL_TO EXTERN FF_PAGEBREAK FLOAT FOR FS_CHAR FS_DOUBLE FS_FLOAT FS_HEX FS_INT FS_LONG FS_LONG_DOUBLE FS_OCT FS_OCT_LONG FS_POINTER FS_SCI_NOTATION FS_STRING FS_UNSIGNED_INT FS_UNSIGNED_LONG GOTO GREATER_EQUAL GREATER_THAN HEADER_LIB HTAB IF IGNORE INT INTEGER LBRACKET LCURL_BRACE LESS_EQUAL LESS_THAN LONG LPAREN MINUS MINUS_EQUAL MODULUS MOD_EQUAL NEWLINE NOT NOT_EQUAL NULL OR OR_EQUAL PLUS PLUS_EQUAL PP_DATE PP_DEFINE PP_DTMACRO PP_ERROR PP_FILE PP_IF PP_IFDEF PP_IFNDEF PP_INCLUDE PP_LINE PP_PRAGMA PP_STMACRO PP_TIME PP_TIMESTAMP PP_UNDEF QUESTIONMARK RBRACKET RCURL_BRACE REGISTER RETURN RPAREN SEMICOLON SHIFTL_EQUAL SHIFTR_EQUAL SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SINGLE_APOS SINGLE_QUOTE SIZEOF STATIC STRING STRUCT SWITCH TILDE TIMES TIMES_EQUAL TYPEDEF UNION UNSIGNED VARNAME VOID VOLTILE VTAB WHILE XOR_EQUAL\n    ROOT : PREPROCESOR_DIRECTIVE\n        | DEFINE\n        | INCLUDE\n        | VALUE\n        | NUMBER\n        | CONTROL_STRUCTURES\n        | WHILE_STRUCTURE\n        | SWITCH_STRUCTURE\n        | IF_STRUCTURE\n        | FOR_STRUCTURE\n        | CODE\n        | EXPRESSION\n        | EXPRESSIONS\n        | FUNCTION\n        | INTEGER_TYPE\n        | DECIMAL_TYPE\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | ASSIGNMENT_OPERATOR\n        | COMENTARIOLEX\n        | VARIABLELEX\n        | OPERATOR\n        | OPERATION\n        | OPERATIONS\n        | COMPARISON_OPERATOR\n        | COMPARISON\n        | COMPARISONS\n        | LOGICAL_OPERATOR\n        | SENTENCE\n    \n    PREPROCESOR_DIRECTIVE : DEFINE\n                            | INCLUDE\n    \n    DEFINE : PP_DEFINE VARIABLELEX VALUE\n    \n    \n    INCLUDE : PP_INCLUDE HEADER_LIB\n    \n    VALUE : NUMBER \n            | STRING\n    \n    NUMBER : INTEGER\n            | DECIMAL\n    \n    CONTROL_STRUCTURES : IF_STRUCTURE\n                        | FOR_STRUCTURE\n                        | WHILE_STRUCTURE\n                        | SWITCH_STRUCTURE\n    \n    WHILE_STRUCTURE : INTEGER\n    \n    SWITCH_STRUCTURE : INTEGER\n    \n    IF_STRUCTURE : IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE\n    \n    FOR_STRUCTURE : INTEGER\n    \n    CODE : FUNCTION\n        | CONTROL_STRUCTURES\n        | INTEGER_DECLARATION\n        | DECIMAL_DECLARATION\n        | ASSIGNMENT_DECLARATION\n        | COMENTARIOLEX\n    \n    EXPRESSION : CODE SEMICOLON\n    \n    EXPRESSIONS : EXPRESSION\n                | EXPRESSION EXPRESSIONS\n    \n    FUNCTION : VARNAME LPAREN RPAREN\n    \n    INTEGER_TYPE : INT\n                | SHORT\n                | LONG\n    \n    DECIMAL_TYPE : FLOAT\n                | DOUBLE\n    \n    INTEGER_DECLARATION : INTEGER_TYPE VARNAME EQUAL INTEGER\n    \n    DECIMAL_DECLARATION : DECIMAL_TYPE VARNAME EQUAL DECIMAL\n    \n    ASSIGNMENT_DECLARATION : VARNAME ASSIGNMENT_OPERATOR SENTENCE\n    \n    ASSIGNMENT_OPERATOR : EQUAL\n                        | PLUS_EQUAL\n                        | MINUS_EQUAL\n                        | DIV_EQUAL\n                        | TIMES_EQUAL\n                        | MOD_EQUAL\n                        | AND_EQUAL\n                        | OR_EQUAL\n                        | XOR_EQUAL\n                        | COMPLEMENT_EQUAL\n                        | SHIFTL_EQUAL\n                        | SHIFTR_EQUAL\n    \n    COMENTARIOLEX : COMMENT\n    \n    VARIABLELEX : VARNAME\n    \n    OPERATOR : PLUS\n              | MINUS\n              | TIMES\n              | MODULUS\n              | DIVIDE\n    \n    OPERATION : NUMBER OPERATOR NUMBER\n    \n    OPERATIONS : OPERATION\n                | OPERATION OPERATOR OPERATIONS\n    \n    COMPARISON_OPERATOR : EQUAL_TO\n                        | NOT_EQUAL\n                        | GREATER_THAN\n                        | LESS_THAN\n                        | GREATER_EQUAL\n                        | LESS_EQUAL\n    \n    COMPARISON : VALUE COMPARISON_OPERATOR VALUE\n    \n    COMPARISONS : COMPARISON\n                | COMPARISON LOGICAL_OPERATOR COMPARISONS\n    \n    LOGICAL_OPERATOR : AND\n                    | OR\n                    | NOT\n    \n    SENTENCE : NUMBER\n            | VARNAME\n    '
    
_lr_action_items = {'PP_DEFINE':([0,],[32,]),'PP_INCLUDE':([0,],[33,]),'STRING':([0,62,63,64,65,66,67,68,69,70,71,94,95,96,98,],[34,-87,-88,-89,-90,-91,-92,-96,-97,-98,34,34,34,-78,34,]),'INTEGER':([0,13,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,93,94,95,96,98,100,105,122,],[35,89,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-79,-80,-81,-82,-83,-87,-88,-89,-90,-91,-92,-96,-97,-98,103,103,-53,89,103,103,103,-78,103,103,119,89,]),'DECIMAL':([0,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,93,94,95,96,98,100,106,],[36,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-79,-80,-81,-82,-83,-87,-88,-89,-90,-91,-92,-96,-97,-98,36,36,36,36,36,-78,36,36,120,]),'IF':([0,13,73,74,122,],[37,37,-53,37,37,]),'VARNAME':([0,13,16,17,32,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,73,74,88,90,100,122,],[38,83,91,92,96,-57,-58,-59,-60,-61,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-53,83,91,92,116,83,]),'INT':([0,13,73,74,122,],[39,39,-53,39,39,]),'SHORT':([0,13,73,74,122,],[40,40,-53,40,40,]),'LONG':([0,13,73,74,122,],[41,41,-53,41,41,]),'FLOAT':([0,13,73,74,122,],[42,42,-53,42,42,]),'DOUBLE':([0,13,73,74,122,],[43,43,-53,43,43,]),'EQUAL':([0,38,83,91,92,],[44,44,44,105,106,]),'PLUS_EQUAL':([0,38,83,],[45,45,45,]),'MINUS_EQUAL':([0,38,83,],[46,46,46,]),'DIV_EQUAL':([0,38,83,],[47,47,47,]),'TIMES_EQUAL':([0,38,83,],[48,48,48,]),'MOD_EQUAL':([0,38,83,],[49,49,49,]),'AND_EQUAL':([0,38,83,],[50,50,50,]),'OR_EQUAL':([0,38,83,],[51,51,51,]),'XOR_EQUAL':([0,38,83,],[52,52,52,]),'COMPLEMENT_EQUAL':([0,38,83,],[53,53,53,]),'SHIFTL_EQUAL':([0,38,83,],[54,54,54,]),'SHIFTR_EQUAL':([0,38,83,],[55,55,55,]),'COMMENT':([0,13,73,74,122,],[56,56,-53,56,56,]),'PLUS':([0,6,25,35,36,103,104,107,109,],[57,57,57,-37,-38,-37,-84,57,57,]),'MINUS':([0,6,25,35,36,103,104,107,109,],[58,58,58,-37,-38,-37,-84,58,58,]),'TIMES':([0,6,25,35,36,103,104,107,109,],[59,59,59,-37,-38,-37,-84,59,59,]),'MODULUS':([0,6,25,35,36,103,104,107,109,],[60,60,60,-37,-38,-37,-84,60,60,]),'DIVIDE':([0,6,25,35,36,103,104,107,109,],[61,61,61,-37,-38,-37,-84,61,61,]),'EQUAL_TO':([0,5,6,34,35,36,102,103,112,],[62,62,-35,-36,-37,-38,-35,-37,62,]),'NOT_EQUAL':([0,5,6,34,35,36,102,103,112,],[63,63,-35,-36,-37,-38,-35,-37,63,]),'GREATER_THAN':([0,5,6,34,35,36,102,103,112,],[64,64,-35,-36,-37,-38,-35,-37,64,]),'LESS_THAN':([0,5,6,34,35,36,102,103,112,],[65,65,-35,-36,-37,-38,-35,-37,65,]),'GREATER_EQUAL':([0,5,6,34,35,36,102,103,112,],[66,66,-35,-36,-37,-38,-35,-37,66,]),'LESS_EQUAL':([0,5,6,34,35,36,102,103,112,],[67,67,-35,-36,-37,-38,-35,-37,67,]),'AND':([0,28,34,36,101,102,103,110,],[68,68,-36,-38,-93,-35,-37,68,]),'OR':([0,28,34,36,101,102,103,110,],[69,69,-36,-38,-93,-35,-37,69,]),'NOT':([0,28,34,36,101,102,103,110,],[70,70,-36,-38,-93,-35,-37,70,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,73,74,75,97,101,102,103,104,107,108,110,111,113,115,116,117,118,119,120,124,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-36,-37,-38,-78,-57,-58,-59,-60,-61,-65,-66,-67,-68,-69,-70,-71,-72,-73,-74,-75,-76,-77,-79,-80,-81,-82,-83,-87,-88,-89,-90,-91,-92,-96,-97,-98,-53,-54,-55,-34,-93,-35,-37,-84,-85,-86,-94,-95,-33,-56,-100,-64,-99,-62,-63,-45,]),'SEMICOLON':([7,8,9,10,11,12,15,18,19,20,22,35,36,56,76,77,78,79,80,81,82,84,85,86,87,89,103,115,116,117,118,119,120,124,],[-48,-41,-42,-39,-40,73,-47,-49,-50,-51,-52,-43,-38,-77,73,-47,-48,-49,-50,-51,-52,-39,-40,-41,-42,-43,-37,-56,-100,-64,-99,-62,-63,-45,]),'HEADER_LIB':([33,],[97,]),'RPAREN':([34,36,99,101,102,103,110,111,114,],[-36,-38,115,-93,-35,-37,-94,-95,121,]),'LPAREN':([37,38,83,],[98,99,99,]),'RCURL_BRACE':([73,74,75,123,],[-53,-54,-55,124,]),'LCURL_BRACE':([121,],[122,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'ROOT':([0,],[1,]),'PREPROCESOR_DIRECTIVE':([0,],[2,]),'DEFINE':([0,],[3,]),'INCLUDE':([0,],[4,]),'VALUE':([0,71,94,95,98,],[5,101,112,113,112,]),'NUMBER':([0,71,72,93,94,95,98,100,],[6,102,104,109,102,102,102,118,]),'CONTROL_STRUCTURES':([0,13,74,122,],[7,78,78,78,]),'WHILE_STRUCTURE':([0,13,74,122,],[8,86,86,86,]),'SWITCH_STRUCTURE':([0,13,74,122,],[9,87,87,87,]),'IF_STRUCTURE':([0,13,74,122,],[10,84,84,84,]),'FOR_STRUCTURE':([0,13,74,122,],[11,85,85,85,]),'CODE':([0,13,74,122,],[12,76,76,76,]),'EXPRESSION':([0,13,74,122,],[13,74,74,74,]),'EXPRESSIONS':([0,13,74,122,],[14,75,75,123,]),'FUNCTION':([0,13,74,122,],[15,77,77,77,]),'INTEGER_TYPE':([0,13,74,122,],[16,88,88,88,]),'DECIMAL_TYPE':([0,13,74,122,],[17,90,90,90,]),'INTEGER_DECLARATION':([0,13,74,122,],[18,79,79,79,]),'DECIMAL_DECLARATION':([0,13,74,122,],[19,80,80,80,]),'ASSIGNMENT_DECLARATION':([0,13,74,122,],[20,81,81,81,]),'ASSIGNMENT_OPERATOR':([0,38,83,],[21,100,100,]),'COMENTARIOLEX':([0,13,74,122,],[22,82,82,82,]),'VARIABLELEX':([0,32,],[23,95,]),'OPERATOR':([0,6,25,107,109,],[24,72,93,93,72,]),'OPERATION':([0,93,],[25,107,]),'OPERATIONS':([0,93,],[26,108,]),'COMPARISON_OPERATOR':([0,5,112,],[27,71,71,]),'COMPARISON':([0,94,98,],[28,110,110,]),'COMPARISONS':([0,94,98,],[29,111,114,]),'LOGICAL_OPERATOR':([0,28,110,],[30,94,94,]),'SENTENCE':([0,100,],[31,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> ROOT","S'",1,None,None,None),
  ('ROOT -> PREPROCESOR_DIRECTIVE','ROOT',1,'p_ROOT','syntax.py',7),
  ('ROOT -> DEFINE','ROOT',1,'p_ROOT','syntax.py',8),
  ('ROOT -> INCLUDE','ROOT',1,'p_ROOT','syntax.py',9),
  ('ROOT -> VALUE','ROOT',1,'p_ROOT','syntax.py',10),
  ('ROOT -> NUMBER','ROOT',1,'p_ROOT','syntax.py',11),
  ('ROOT -> CONTROL_STRUCTURES','ROOT',1,'p_ROOT','syntax.py',12),
  ('ROOT -> WHILE_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',13),
  ('ROOT -> SWITCH_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',14),
  ('ROOT -> IF_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',15),
  ('ROOT -> FOR_STRUCTURE','ROOT',1,'p_ROOT','syntax.py',16),
  ('ROOT -> CODE','ROOT',1,'p_ROOT','syntax.py',17),
  ('ROOT -> EXPRESSION','ROOT',1,'p_ROOT','syntax.py',18),
  ('ROOT -> EXPRESSIONS','ROOT',1,'p_ROOT','syntax.py',19),
  ('ROOT -> FUNCTION','ROOT',1,'p_ROOT','syntax.py',20),
  ('ROOT -> INTEGER_TYPE','ROOT',1,'p_ROOT','syntax.py',21),
  ('ROOT -> DECIMAL_TYPE','ROOT',1,'p_ROOT','syntax.py',22),
  ('ROOT -> INTEGER_DECLARATION','ROOT',1,'p_ROOT','syntax.py',23),
  ('ROOT -> DECIMAL_DECLARATION','ROOT',1,'p_ROOT','syntax.py',24),
  ('ROOT -> ASSIGNMENT_DECLARATION','ROOT',1,'p_ROOT','syntax.py',25),
  ('ROOT -> ASSIGNMENT_OPERATOR','ROOT',1,'p_ROOT','syntax.py',26),
  ('ROOT -> COMENTARIOLEX','ROOT',1,'p_ROOT','syntax.py',27),
  ('ROOT -> VARIABLELEX','ROOT',1,'p_ROOT','syntax.py',28),
  ('ROOT -> OPERATOR','ROOT',1,'p_ROOT','syntax.py',29),
  ('ROOT -> OPERATION','ROOT',1,'p_ROOT','syntax.py',30),
  ('ROOT -> OPERATIONS','ROOT',1,'p_ROOT','syntax.py',31),
  ('ROOT -> COMPARISON_OPERATOR','ROOT',1,'p_ROOT','syntax.py',32),
  ('ROOT -> COMPARISON','ROOT',1,'p_ROOT','syntax.py',33),
  ('ROOT -> COMPARISONS','ROOT',1,'p_ROOT','syntax.py',34),
  ('ROOT -> LOGICAL_OPERATOR','ROOT',1,'p_ROOT','syntax.py',35),
  ('ROOT -> SENTENCE','ROOT',1,'p_ROOT','syntax.py',36),
  ('PREPROCESOR_DIRECTIVE -> DEFINE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',44),
  ('PREPROCESOR_DIRECTIVE -> INCLUDE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',45),
  ('DEFINE -> PP_DEFINE VARIABLELEX VALUE','DEFINE',3,'p_DEFINE','syntax.py',52),
  ('INCLUDE -> PP_INCLUDE HEADER_LIB','INCLUDE',2,'p_INCLUDE','syntax.py',60),
  ('VALUE -> NUMBER','VALUE',1,'p_VALUE','syntax.py',67),
  ('VALUE -> STRING','VALUE',1,'p_VALUE','syntax.py',68),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','syntax.py',75),
  ('NUMBER -> DECIMAL','NUMBER',1,'p_NUMBER','syntax.py',76),
  ('CONTROL_STRUCTURES -> IF_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',83),
  ('CONTROL_STRUCTURES -> FOR_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',84),
  ('CONTROL_STRUCTURES -> WHILE_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',85),
  ('CONTROL_STRUCTURES -> SWITCH_STRUCTURE','CONTROL_STRUCTURES',1,'p_CONTROL_STRUCTURES','syntax.py',86),
  ('WHILE_STRUCTURE -> INTEGER','WHILE_STRUCTURE',1,'p_WHILE_STRUCTURE','syntax.py',96),
  ('SWITCH_STRUCTURE -> INTEGER','SWITCH_STRUCTURE',1,'p_SWITCH_STRUCTURE','syntax.py',103),
  ('IF_STRUCTURE -> IF LPAREN COMPARISONS RPAREN LCURL_BRACE EXPRESSIONS RCURL_BRACE','IF_STRUCTURE',7,'p_IF_STRUCTURE','syntax.py',110),
  ('FOR_STRUCTURE -> INTEGER','FOR_STRUCTURE',1,'p_FOR_STRUCTURE','syntax.py',117),
  ('CODE -> FUNCTION','CODE',1,'p_CODE','syntax.py',126),
  ('CODE -> CONTROL_STRUCTURES','CODE',1,'p_CODE','syntax.py',127),
  ('CODE -> INTEGER_DECLARATION','CODE',1,'p_CODE','syntax.py',128),
  ('CODE -> DECIMAL_DECLARATION','CODE',1,'p_CODE','syntax.py',129),
  ('CODE -> ASSIGNMENT_DECLARATION','CODE',1,'p_CODE','syntax.py',130),
  ('CODE -> COMENTARIOLEX','CODE',1,'p_CODE','syntax.py',131),
  ('EXPRESSION -> CODE SEMICOLON','EXPRESSION',2,'p_EXPRESSION','syntax.py',138),
  ('EXPRESSIONS -> EXPRESSION','EXPRESSIONS',1,'p_EXPRESSIONS','syntax.py',145),
  ('EXPRESSIONS -> EXPRESSION EXPRESSIONS','EXPRESSIONS',2,'p_EXPRESSIONS','syntax.py',146),
  ('FUNCTION -> VARNAME LPAREN RPAREN','FUNCTION',3,'p_FUNCTION','syntax.py',153),
  ('INTEGER_TYPE -> INT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',160),
  ('INTEGER_TYPE -> SHORT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',161),
  ('INTEGER_TYPE -> LONG','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',162),
  ('DECIMAL_TYPE -> FLOAT','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',169),
  ('DECIMAL_TYPE -> DOUBLE','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',170),
  ('INTEGER_DECLARATION -> INTEGER_TYPE VARNAME EQUAL INTEGER','INTEGER_DECLARATION',4,'p_INTEGER_DECLARATION','syntax.py',177),
  ('DECIMAL_DECLARATION -> DECIMAL_TYPE VARNAME EQUAL DECIMAL','DECIMAL_DECLARATION',4,'p_DECIMAL_DECLARATION','syntax.py',184),
  ('ASSIGNMENT_DECLARATION -> VARNAME ASSIGNMENT_OPERATOR SENTENCE','ASSIGNMENT_DECLARATION',3,'p_ASSIGNMENT_DECLARATION','syntax.py',191),
  ('ASSIGNMENT_OPERATOR -> EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',198),
  ('ASSIGNMENT_OPERATOR -> PLUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',199),
  ('ASSIGNMENT_OPERATOR -> MINUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',200),
  ('ASSIGNMENT_OPERATOR -> DIV_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',201),
  ('ASSIGNMENT_OPERATOR -> TIMES_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',202),
  ('ASSIGNMENT_OPERATOR -> MOD_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',203),
  ('ASSIGNMENT_OPERATOR -> AND_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',204),
  ('ASSIGNMENT_OPERATOR -> OR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',205),
  ('ASSIGNMENT_OPERATOR -> XOR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',206),
  ('ASSIGNMENT_OPERATOR -> COMPLEMENT_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',207),
  ('ASSIGNMENT_OPERATOR -> SHIFTL_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',208),
  ('ASSIGNMENT_OPERATOR -> SHIFTR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',209),
  ('COMENTARIOLEX -> COMMENT','COMENTARIOLEX',1,'p_COMENTARIOLEX','syntax.py',216),
  ('VARIABLELEX -> VARNAME','VARIABLELEX',1,'p_VARIABLELEX','syntax.py',223),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','syntax.py',230),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','syntax.py',231),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','syntax.py',232),
  ('OPERATOR -> MODULUS','OPERATOR',1,'p_OPERATOR','syntax.py',233),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','syntax.py',234),
  ('OPERATION -> NUMBER OPERATOR NUMBER','OPERATION',3,'p_OPERATION','syntax.py',241),
  ('OPERATIONS -> OPERATION','OPERATIONS',1,'p_OPERATIONS','syntax.py',248),
  ('OPERATIONS -> OPERATION OPERATOR OPERATIONS','OPERATIONS',3,'p_OPERATIONS','syntax.py',249),
  ('COMPARISON_OPERATOR -> EQUAL_TO','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',256),
  ('COMPARISON_OPERATOR -> NOT_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',257),
  ('COMPARISON_OPERATOR -> GREATER_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',258),
  ('COMPARISON_OPERATOR -> LESS_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',259),
  ('COMPARISON_OPERATOR -> GREATER_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',260),
  ('COMPARISON_OPERATOR -> LESS_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',261),
  ('COMPARISON -> VALUE COMPARISON_OPERATOR VALUE','COMPARISON',3,'p_COMPARISON','syntax.py',268),
  ('COMPARISONS -> COMPARISON','COMPARISONS',1,'p_COMPARISONS','syntax.py',275),
  ('COMPARISONS -> COMPARISON LOGICAL_OPERATOR COMPARISONS','COMPARISONS',3,'p_COMPARISONS','syntax.py',276),
  ('LOGICAL_OPERATOR -> AND','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',283),
  ('LOGICAL_OPERATOR -> OR','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',284),
  ('LOGICAL_OPERATOR -> NOT','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',285),
  ('SENTENCE -> NUMBER','SENTENCE',1,'p_SENTENCE','syntax.py',292),
  ('SENTENCE -> VARNAME','SENTENCE',1,'p_SENTENCE','syntax.py',293),
]
