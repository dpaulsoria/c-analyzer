
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AMPERSAND AND AND_EQUAL AUTO BACKSLASH BACKSPACE BREAK B_AND B_COMPLEMENT B_OR B_XOR CASE CHAR CHARACTER COLON COMMA COMMENT COMPLEMENT_EQUAL CONST CONTINUE DECIMAL DEFAULT DIVIDE DIV_EQUAL DO DOT DOUBLE DOUBLE_APOS DOUBLE_QUOTE ELSE ELSEIF ENUM EQUAL EQUAL_TO EXTERN FF_PAGEBREAK FLOAT FOR FS_CHAR FS_DOUBLE FS_FLOAT FS_HEX FS_INT FS_LONG FS_LONG_DOUBLE FS_OCT FS_OCT_LONG FS_POINTER FS_SCI_NOTATION FS_STRING FS_UNSIGNED_INT FS_UNSIGNED_LONG GOTO GREATER_EQUAL GREATER_THAN HEADER_LIB HTAB IF IGNORE INT INTEGER LBRACKET LCURL_BRACE LESS_EQUAL LESS_THAN LONG LPAREN MINUS MINUS_EQUAL MODULUS MOD_EQUAL NEWLINE NOT NOT_EQUAL NULL OR OR_EQUAL PLUS PLUS_EQUAL PP_DATE PP_DEFINE PP_DTMACRO PP_ERROR PP_FILE PP_IF PP_IFDEF PP_IFNDEF PP_INCLUDE PP_LINE PP_PRAGMA PP_STMACRO PP_TIME PP_TIMESTAMP PP_UNDEF QUESTIONMARK RBRACKET RCURL_BRACE REGISTER RETURN RPAREN SEMICOLON SHIFTL_EQUAL SHIFTR_EQUAL SHIFT_LEFT SHIFT_RIGHT SHORT SIGNED SINGLE_APOS SINGLE_QUOTE SIZEOF STATIC STRING STRUCT SWITCH TILDE TIMES TIMES_EQUAL TYPEDEF UNION UNSIGNED VARNAME VOID VOLTILE VTAB WHILE XOR_EQUAL\n    EXPRESSION : COMENTARIOLEX\n                | VARIABLELEX \n                | OPERATION\n                | OPERATIONS\n                | OPERATOR\n                | SENTENCIAS\n                | INCLUDE\n                | DEFINE\n                | PREPROCESOR_DIRECTIVE\n                | LOGICAL_OPERATOR\n                | COMPARISONS\n                | COMPARISON\n                | COMPARISON_OPERATOR\n                | DECIMAL_DECLARATION\n                | INTEGER_DECLARATION\n                | DECIMAL_TYPE\n                | INTEGER_TYPE\n                | ASSIGNMENT_DECLARATION\n                | ASSIGNMENT_OPERATOR\n\n    \n    PREPROCESOR_DIRECTIVE : DEFINE\n                            | INCLUDE\n    \n    DEFINE : PP_DEFINE VARIABLELEX VALUE\n    \n    \n    INCLUDE : PP_INCLUDE HEADER_LIB\n    \n    VALUE : NUMBER \n            | STRING\n    \n    NUMBER : INTEGER\n            | DECIMAL\n    \n    SENTENCIAS : IF\n                | ELSEIF\n                | ELSE\n                | FOR\n                | WHILE\n                | SWITCH\n    \n    INTEGER_TYPE : INT\n                | SHORT\n                | LONG\n    \n    DECIMAL_TYPE : FLOAT\n                | DOUBLE\n    \n    INTEGER_DECLARATION : INTEGER_TYPE VARNAME EQUAL INTEGER\n    \n    DECIMAL_DECLARATION : DECIMAL_TYPE VARNAME EQUAL DECIMAL\n    \n    ASSIGNMENT_DECLARATION : VARNAME ASSIGNMENT_OPERATOR SENTENCE\n    \n    ASSIGNMENT_OPERATOR : EQUAL\n                        | PLUS_EQUAL\n                        | MINUS_EQUAL\n                        | DIV_EQUAL\n                        | TIMES_EQUAL\n                        | MOD_EQUAL\n                        | AND_EQUAL\n                        | OR_EQUAL\n                        | XOR_EQUAL\n                        | COMPLEMENT_EQUAL\n                        | SHIFTL_EQUAL\n                        | SHIFTR_EQUAL\n    \n    COMENTARIOLEX : COMMENT\n    \n    VARIABLELEX : VARNAME\n    \n    OPERATOR : PLUS\n              | MINUS\n              | TIMES\n              | MODULUS\n              | DIVIDE\n    \n    OPERATION : NUMBER OPERATOR NUMBER\n    \n    OPERATIONS : OPERATION\n                | OPERATION OPERATOR OPERATIONS\n    \n    COMPARISON_OPERATOR : EQUAL_TO\n                        | NOT_EQUAL\n                        | GREATER_THAN\n                        | LESS_THAN\n                        | GREATER_EQUAL\n                        | LESS_EQUAL\n    \n    COMPARISON : VALUE COMPARISON_OPERATOR VALUE\n    \n    COMPARISONS : COMPARISON\n                | COMPARISON LOGICAL_OPERATOR COMPARISONS\n    \n    LOGICAL_OPERATOR : AND\n                    | OR\n                    | NOT\n    \n    SENTENCE : NUMBER\n            | VARNAME\n    '
    
_lr_action_items = {'COMMENT':([0,],[21,]),'VARNAME':([0,17,18,36,47,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,71,],[22,69,70,75,-42,-37,-38,-34,-35,-36,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,85,]),'PLUS':([0,4,23,48,49,77,79,88,],[24,24,24,-27,-26,24,24,-61,]),'MINUS':([0,4,23,48,49,77,79,88,],[25,25,25,-27,-26,25,25,-61,]),'TIMES':([0,4,23,48,49,77,79,88,],[26,26,26,-27,-26,26,26,-61,]),'MODULUS':([0,4,23,48,49,77,79,88,],[27,27,27,-27,-26,27,27,-61,]),'DIVIDE':([0,4,23,48,49,77,79,88,],[28,28,28,-27,-26,28,28,-61,]),'IF':([0,],[29,]),'ELSEIF':([0,],[30,]),'ELSE':([0,],[31,]),'FOR':([0,],[32,]),'WHILE':([0,],[33,]),'SWITCH':([0,],[34,]),'PP_INCLUDE':([0,],[35,]),'PP_DEFINE':([0,],[36,]),'AND':([0,13,48,49,66,80,82,90,],[38,38,-27,-26,-25,38,-24,-70,]),'OR':([0,13,48,49,66,80,82,90,],[39,39,-27,-26,-25,39,-24,-70,]),'NOT':([0,13,48,49,66,80,82,90,],[40,40,-27,-26,-25,40,-24,-70,]),'EQUAL_TO':([0,23,37,48,49,66,82,],[41,-24,41,-27,-26,-25,-24,]),'NOT_EQUAL':([0,23,37,48,49,66,82,],[42,-24,42,-27,-26,-25,-24,]),'GREATER_THAN':([0,23,37,48,49,66,82,],[43,-24,43,-27,-26,-25,-24,]),'LESS_THAN':([0,23,37,48,49,66,82,],[44,-24,44,-27,-26,-25,-24,]),'GREATER_EQUAL':([0,23,37,48,49,66,82,],[45,-24,45,-27,-26,-25,-24,]),'LESS_EQUAL':([0,23,37,48,49,66,82,],[46,-24,46,-27,-26,-25,-24,]),'FLOAT':([0,],[50,]),'DOUBLE':([0,],[51,]),'INT':([0,],[52,]),'SHORT':([0,],[53,]),'LONG':([0,],[54,]),'EQUAL':([0,22,69,70,],[47,47,83,84,]),'PLUS_EQUAL':([0,22,],[55,55,]),'MINUS_EQUAL':([0,22,],[56,56,]),'DIV_EQUAL':([0,22,],[57,57,]),'TIMES_EQUAL':([0,22,],[58,58,]),'MOD_EQUAL':([0,22,],[59,59,]),'AND_EQUAL':([0,22,],[60,60,]),'OR_EQUAL':([0,22,],[61,61,]),'XOR_EQUAL':([0,22,],[62,62,]),'COMPLEMENT_EQUAL':([0,22,],[63,63,]),'SHIFTL_EQUAL':([0,22,],[64,64,]),'SHIFTR_EQUAL':([0,22,],[65,65,]),'INTEGER':([0,24,25,26,27,28,38,39,40,41,42,43,44,45,46,47,55,56,57,58,59,60,61,62,63,64,65,67,68,71,72,74,75,76,84,],[49,-56,-57,-58,-59,-60,-73,-74,-75,-64,-65,-66,-67,-68,-69,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,49,49,49,49,49,-55,49,92,]),'DECIMAL':([0,24,25,26,27,28,38,39,40,41,42,43,44,45,46,47,55,56,57,58,59,60,61,62,63,64,65,67,68,71,72,74,75,76,83,],[48,-56,-57,-58,-59,-60,-73,-74,-75,-64,-65,-66,-67,-68,-69,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,48,48,48,48,48,-55,48,91,]),'STRING':([0,38,39,40,41,42,43,44,45,46,68,74,75,76,],[66,-73,-74,-75,-64,-65,-66,-67,-68,-69,66,66,-55,66,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,24,25,26,27,28,29,30,31,32,33,34,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,73,77,78,80,81,82,85,86,87,88,89,90,91,92,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-54,-55,-56,-57,-58,-59,-60,-28,-29,-30,-31,-32,-33,-73,-74,-75,-64,-65,-66,-67,-68,-69,-42,-27,-26,-37,-38,-34,-35,-36,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-25,-23,-62,-63,-71,-72,-24,-77,-41,-76,-61,-22,-70,-40,-39,]),'HEADER_LIB':([35,],[73,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'EXPRESSION':([0,],[1,]),'COMENTARIOLEX':([0,],[2,]),'VARIABLELEX':([0,36,],[3,74,]),'OPERATION':([0,67,],[4,77,]),'OPERATIONS':([0,67,],[5,78,]),'OPERATOR':([0,4,23,77,79,],[6,67,72,67,72,]),'SENTENCIAS':([0,],[7,]),'INCLUDE':([0,],[8,]),'DEFINE':([0,],[9,]),'PREPROCESOR_DIRECTIVE':([0,],[10,]),'LOGICAL_OPERATOR':([0,13,80,],[11,68,68,]),'COMPARISONS':([0,68,],[12,81,]),'COMPARISON':([0,68,],[13,80,]),'COMPARISON_OPERATOR':([0,37,],[14,76,]),'DECIMAL_DECLARATION':([0,],[15,]),'INTEGER_DECLARATION':([0,],[16,]),'DECIMAL_TYPE':([0,],[17,]),'INTEGER_TYPE':([0,],[18,]),'ASSIGNMENT_DECLARATION':([0,],[19,]),'ASSIGNMENT_OPERATOR':([0,22,],[20,71,]),'NUMBER':([0,67,68,71,72,74,76,],[23,79,82,87,88,82,82,]),'VALUE':([0,68,74,76,],[37,37,89,90,]),'SENTENCE':([71,],[86,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> EXPRESSION","S'",1,None,None,None),
  ('EXPRESSION -> COMENTARIOLEX','EXPRESSION',1,'p_EXPRESSION','syntax.py',7),
  ('EXPRESSION -> VARIABLELEX','EXPRESSION',1,'p_EXPRESSION','syntax.py',8),
  ('EXPRESSION -> OPERATION','EXPRESSION',1,'p_EXPRESSION','syntax.py',9),
  ('EXPRESSION -> OPERATIONS','EXPRESSION',1,'p_EXPRESSION','syntax.py',10),
  ('EXPRESSION -> OPERATOR','EXPRESSION',1,'p_EXPRESSION','syntax.py',11),
  ('EXPRESSION -> SENTENCIAS','EXPRESSION',1,'p_EXPRESSION','syntax.py',12),
  ('EXPRESSION -> INCLUDE','EXPRESSION',1,'p_EXPRESSION','syntax.py',13),
  ('EXPRESSION -> DEFINE','EXPRESSION',1,'p_EXPRESSION','syntax.py',14),
  ('EXPRESSION -> PREPROCESOR_DIRECTIVE','EXPRESSION',1,'p_EXPRESSION','syntax.py',15),
  ('EXPRESSION -> LOGICAL_OPERATOR','EXPRESSION',1,'p_EXPRESSION','syntax.py',16),
  ('EXPRESSION -> COMPARISONS','EXPRESSION',1,'p_EXPRESSION','syntax.py',17),
  ('EXPRESSION -> COMPARISON','EXPRESSION',1,'p_EXPRESSION','syntax.py',18),
  ('EXPRESSION -> COMPARISON_OPERATOR','EXPRESSION',1,'p_EXPRESSION','syntax.py',19),
  ('EXPRESSION -> DECIMAL_DECLARATION','EXPRESSION',1,'p_EXPRESSION','syntax.py',20),
  ('EXPRESSION -> INTEGER_DECLARATION','EXPRESSION',1,'p_EXPRESSION','syntax.py',21),
  ('EXPRESSION -> DECIMAL_TYPE','EXPRESSION',1,'p_EXPRESSION','syntax.py',22),
  ('EXPRESSION -> INTEGER_TYPE','EXPRESSION',1,'p_EXPRESSION','syntax.py',23),
  ('EXPRESSION -> ASSIGNMENT_DECLARATION','EXPRESSION',1,'p_EXPRESSION','syntax.py',24),
  ('EXPRESSION -> ASSIGNMENT_OPERATOR','EXPRESSION',1,'p_EXPRESSION','syntax.py',25),
  ('PREPROCESOR_DIRECTIVE -> DEFINE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',34),
  ('PREPROCESOR_DIRECTIVE -> INCLUDE','PREPROCESOR_DIRECTIVE',1,'p_PREPROCESOR_DIRECTIVE','syntax.py',35),
  ('DEFINE -> PP_DEFINE VARIABLELEX VALUE','DEFINE',3,'p_DEFINE','syntax.py',42),
  ('INCLUDE -> PP_INCLUDE HEADER_LIB','INCLUDE',2,'p_INCLUDE','syntax.py',50),
  ('VALUE -> NUMBER','VALUE',1,'p_VALUE','syntax.py',57),
  ('VALUE -> STRING','VALUE',1,'p_VALUE','syntax.py',58),
  ('NUMBER -> INTEGER','NUMBER',1,'p_NUMBER','syntax.py',65),
  ('NUMBER -> DECIMAL','NUMBER',1,'p_NUMBER','syntax.py',66),
  ('SENTENCIAS -> IF','SENTENCIAS',1,'p_SENTENCIAS','syntax.py',73),
  ('SENTENCIAS -> ELSEIF','SENTENCIAS',1,'p_SENTENCIAS','syntax.py',74),
  ('SENTENCIAS -> ELSE','SENTENCIAS',1,'p_SENTENCIAS','syntax.py',75),
  ('SENTENCIAS -> FOR','SENTENCIAS',1,'p_SENTENCIAS','syntax.py',76),
  ('SENTENCIAS -> WHILE','SENTENCIAS',1,'p_SENTENCIAS','syntax.py',77),
  ('SENTENCIAS -> SWITCH','SENTENCIAS',1,'p_SENTENCIAS','syntax.py',78),
  ('INTEGER_TYPE -> INT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',100),
  ('INTEGER_TYPE -> SHORT','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',101),
  ('INTEGER_TYPE -> LONG','INTEGER_TYPE',1,'p_INTEGER_TYPE','syntax.py',102),
  ('DECIMAL_TYPE -> FLOAT','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',109),
  ('DECIMAL_TYPE -> DOUBLE','DECIMAL_TYPE',1,'p_DECIMAL_TYPE','syntax.py',110),
  ('INTEGER_DECLARATION -> INTEGER_TYPE VARNAME EQUAL INTEGER','INTEGER_DECLARATION',4,'p_INTEGER_DECLARATION','syntax.py',117),
  ('DECIMAL_DECLARATION -> DECIMAL_TYPE VARNAME EQUAL DECIMAL','DECIMAL_DECLARATION',4,'p_DECIMAL_DECLARATION','syntax.py',124),
  ('ASSIGNMENT_DECLARATION -> VARNAME ASSIGNMENT_OPERATOR SENTENCE','ASSIGNMENT_DECLARATION',3,'p_ASSIGNMENT_DECLARATION','syntax.py',131),
  ('ASSIGNMENT_OPERATOR -> EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',138),
  ('ASSIGNMENT_OPERATOR -> PLUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',139),
  ('ASSIGNMENT_OPERATOR -> MINUS_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',140),
  ('ASSIGNMENT_OPERATOR -> DIV_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',141),
  ('ASSIGNMENT_OPERATOR -> TIMES_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',142),
  ('ASSIGNMENT_OPERATOR -> MOD_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',143),
  ('ASSIGNMENT_OPERATOR -> AND_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',144),
  ('ASSIGNMENT_OPERATOR -> OR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',145),
  ('ASSIGNMENT_OPERATOR -> XOR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',146),
  ('ASSIGNMENT_OPERATOR -> COMPLEMENT_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',147),
  ('ASSIGNMENT_OPERATOR -> SHIFTL_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',148),
  ('ASSIGNMENT_OPERATOR -> SHIFTR_EQUAL','ASSIGNMENT_OPERATOR',1,'p_ASSIGNMENT_OPERATOR','syntax.py',149),
  ('COMENTARIOLEX -> COMMENT','COMENTARIOLEX',1,'p_COMENTARIOLEX','syntax.py',156),
  ('VARIABLELEX -> VARNAME','VARIABLELEX',1,'p_VARIABLELEX','syntax.py',163),
  ('OPERATOR -> PLUS','OPERATOR',1,'p_OPERATOR','syntax.py',170),
  ('OPERATOR -> MINUS','OPERATOR',1,'p_OPERATOR','syntax.py',171),
  ('OPERATOR -> TIMES','OPERATOR',1,'p_OPERATOR','syntax.py',172),
  ('OPERATOR -> MODULUS','OPERATOR',1,'p_OPERATOR','syntax.py',173),
  ('OPERATOR -> DIVIDE','OPERATOR',1,'p_OPERATOR','syntax.py',174),
  ('OPERATION -> NUMBER OPERATOR NUMBER','OPERATION',3,'p_OPERATION','syntax.py',181),
  ('OPERATIONS -> OPERATION','OPERATIONS',1,'p_OPERATIONS','syntax.py',188),
  ('OPERATIONS -> OPERATION OPERATOR OPERATIONS','OPERATIONS',3,'p_OPERATIONS','syntax.py',189),
  ('COMPARISON_OPERATOR -> EQUAL_TO','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',196),
  ('COMPARISON_OPERATOR -> NOT_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',197),
  ('COMPARISON_OPERATOR -> GREATER_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',198),
  ('COMPARISON_OPERATOR -> LESS_THAN','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',199),
  ('COMPARISON_OPERATOR -> GREATER_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',200),
  ('COMPARISON_OPERATOR -> LESS_EQUAL','COMPARISON_OPERATOR',1,'p_COMPARISON_OPERATOR','syntax.py',201),
  ('COMPARISON -> VALUE COMPARISON_OPERATOR VALUE','COMPARISON',3,'p_COMPARISON','syntax.py',208),
  ('COMPARISONS -> COMPARISON','COMPARISONS',1,'p_COMPARISONS','syntax.py',215),
  ('COMPARISONS -> COMPARISON LOGICAL_OPERATOR COMPARISONS','COMPARISONS',3,'p_COMPARISONS','syntax.py',216),
  ('LOGICAL_OPERATOR -> AND','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',223),
  ('LOGICAL_OPERATOR -> OR','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',224),
  ('LOGICAL_OPERATOR -> NOT','LOGICAL_OPERATOR',1,'p_LOGICAL_OPERATOR','syntax.py',225),
  ('SENTENCE -> NUMBER','SENTENCE',1,'p_SENTENCE','syntax.py',232),
  ('SENTENCE -> VARNAME','SENTENCE',1,'p_SENTENCE','syntax.py',233),
]
